<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XmlSeffParser</name>
    </assembly>
    <members>
        <member name="T:Palladio.Performance.XmlSeffParser.Config">
            <summary>
            Configuration of the XmlSeffParser.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.3  2005/12/04 18:41:21  helgeh
            - Simplified DiscreteFourierFunction.Calculate LoopLimit
            - added new attribute MaximumExecutionTimeAttribute
            - replaced AbstractRegExASTVisitor.DetermineMaxTime by  a new visitor RegExASTVisitorDetermineMaxTime

            Revision 1.1  2005/08/12 07:59:25  helgeh
            Initial impot after refactoring.
            
            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add
            
            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.
            
            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.
            
            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.
            
            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.
            
            RegularExpressions:
            - No changes.
            
            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.
            
            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.
            
            Unit Tests added.
            Updated documentation.
            
            
            </pre>
            </remarks>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.Config.#ctor(System.String,System.String,System.String,System.Double,System.Boolean,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="inputFile">File of the service effect automaton.</param>
            <param name="qmlOutputFile">File to store the result as Qml aspects.</param>
            <param name="pdfOutputFile">File to store the result as probability density function.</param>
            <param name="epsilon">Stop criterion for the calculation of the loop.</param>
            <param name="domain">True=frequency domain, false= time domain</param>
            <param name="numberOfFunctionValues">Number of function values of the result.</param>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.Config.NumberOfFunctionValues">
            <summary>
            Number of function values for the resultinf function.
            </summary>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.Config.InputFile">
            <summary>
            File of the service effect automaton.
            </summary>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.Config.QmlOutputFile">
            <summary>
            File to store the result as qml ascpects.
            </summary>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.Config.Epsilon">
            <summary>
            Stop criterion for calculation of the loop.
            </summary>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.Config.FrequencyDomain">
            <summary>
            The domain for the calculation. If Domain==true, then the calculation is executed in frequency 
            domain. If the value is false, the calculation is executed in time domain.
            </summary>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.Config.PdfOutputFile">
            <summary>
            File to store the result as probability density function.
            </summary>
        </member>
        <member name="T:Palladio.Performance.XmlSeffParser.ConfigReader">
            <summary>
            Class for reading the configuration of the XmlSeffParser.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.3  2005/12/04 18:41:21  helgeh
            - Simplified DiscreteFourierFunction.Calculate LoopLimit
            - added new attribute MaximumExecutionTimeAttribute
            - replaced AbstractRegExASTVisitor.DetermineMaxTime by  a new visitor RegExASTVisitorDetermineMaxTime

            Revision 1.1  2005/08/12 07:59:25  helgeh
            Initial impot after refactoring.
            
            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add
            
            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.
            
            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.
            
            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.
            
            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.
            
            RegularExpressions:
            - No changes.
            
            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.
            
            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.
            
            Unit Tests added.
            Updated documentation.
            
            
            </pre>
            </remarks>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.ConfigReader.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="path">Path to the configuration file.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.ConfigReader.ReadConfig">
            <summary>
            Reads the configuration file and returns the configuration.
            </summary>
            <returns>Configuration of the XmlSeffParser.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.ConfigReader.ConvertToDoubleString(System.String)">
            <summary>
            Replaces the "." with a ","
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:Palladio.Performance.XmlSeffParser.MainClass">
            <summary>
            Creates a service effect automaton from a xml file and calculates the performance.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.3  2005/12/04 18:41:21  helgeh
            - Simplified DiscreteFourierFunction.Calculate LoopLimit
            - added new attribute MaximumExecutionTimeAttribute
            - replaced AbstractRegExASTVisitor.DetermineMaxTime by  a new visitor RegExASTVisitorDetermineMaxTime

            Revision 1.1  2005/08/12 07:59:25  helgeh
            Initial impot after refactoring.
            
            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add
            
            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.
            
            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.
            
            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.
            
            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.
            
            RegularExpressions:
            - No changes.
            
            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.
            
            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.
            
            Unit Tests added.
            Updated documentation.
            
            
            </pre>
            </remarks>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.MainClass.CalculatePerformance(Palladio.Performance.XmlSeffParser.Config,Palladio.FiniteStateMachines.IFiniteStateMachine)">
            <summary>
            Calculates the performance of the service effect automaton.
            </summary>
            <param name="configuration"></param>
            <param name="fsm">Service effect automaton.</param>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.MainClass.StoreResult(Palladio.Performance.Attributes.RandomVariable,Palladio.Performance.XmlSeffParser.Config)">
            <summary>
            Stores the result of the calculation.
            </summary>
            <param name="rand">Calculated function.</param>
            <param name="configuration">Configuration of the Parser.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.MainClass.CreateSeff(Palladio.Performance.XmlSeffParser.Config)">
            <summary>
            Creates the service effect automaton.
            </summary>
            <param name="configuration">Configuration including the path to the xml file.</param>
            <returns>The service effect automaton.</returns>
        </member>
        <member name="T:Palladio.Performance.XmlSeffParser.XmlSeffParser">
            <summary>
            Parser for service effect automaton specified by a xml file.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.3  2005/12/04 18:41:21  helgeh
            - Simplified DiscreteFourierFunction.Calculate LoopLimit
            - added new attribute MaximumExecutionTimeAttribute
            - replaced AbstractRegExASTVisitor.DetermineMaxTime by  a new visitor RegExASTVisitorDetermineMaxTime

            Revision 1.2  2005/10/11 22:05:14  helgeh
            - Added NUnit project and NDoc documentation.
            - fixed a bug in AdjustSamplingRate
            
            Revision 1.1  2005/08/12 07:59:25  helgeh
            Initial impot after refactoring.
            
            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add
            
            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.
            
            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.
            
            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.
            
            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.
            
            RegularExpressions:
            - No changes.
            
            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.
            
            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.
            
            Unit Tests added.
            Updated documentation.
            
            
            </pre>
            </remarks>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.#ctor(System.String)">
            <summary>
            Constructor. Parses the Xml-File and generates the sevice effect automaton
            </summary>
            <param name="file">Path to XML file.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.LoadXmlFile(System.String)">
            <summary>
            Verifies and load the XML fiel.
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.GetIterator(System.String)">
            <summary>
            Returns a <c>XPathNodeIterator</c> for the given XPath expression.
            </summary>
            <param name="xpathExpression">XPath expression.</param>
            <returns>Iterator for XPath expression.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.GetValueOfChild(System.Xml.XPath.XPathNodeIterator,System.String)">
            <summary>
            Returns the value of the first child.
            </summary>
            <param name="it">Actual position in the document.</param>
            <param name="child">Name of the child.</param>
            <returns>Value of the first child.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.GetTimeConsumption(System.Xml.XPath.XPathNavigator)">
            <summary>
            Creates a QMLAttribute out of the time_consumption children.
            </summary>
            <param name="nav"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.ConvertToDoubleString(System.String)">
            <summary>
            Replaces the "." with a ","
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.ValidateXmlFile(System.String)">
            <summary>
            Validates the Xml file.
            </summary>
            <param name="file">File to validate.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.OnValidateError(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Error function for the ValidationEventHandler.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.CreateSeff">
            <summary>
            Creates the service effect automaton from the xml file.
            </summary>
            <returns>The service effect automaton.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.ReadAndCreateStates(Palladio.FiniteStateMachines.IEditableFiniteStateMachine)">
            <summary>
            Searches the <c>statelist</c> tag and creates the states and adds them to the finite
            state machine.
            </summary>
            <param name="fsm"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.CreateTimeConsumptionForStates(System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Creates a QMLAttribute for each state.
            </summary>
            <param name="it">Iterator pointing to the states list.</param>
            <returns>Hashtable conatining a QMLAttribute for each state.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.DetermineFinalStates(System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Creates a list of final states.
            </summary>
            <returns>List of final states.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.GetStates(System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Returns the id of each state.
            </summary>
            <returns>Id of states.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddTimeAttributesToStates(Palladio.FiniteStateMachines.StateHash,System.Collections.Hashtable)">
            <summary>
            Adds a RandomVariable to all states.
            </summary>
            <param name="stateHash">Hashtable containing all states.</param>
            <param name="qmlHash">Hashtable containing the <c>QMLAttribute</c> for each state.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddStartState(Palladio.FiniteStateMachines.StateHash,Palladio.FiniteStateMachines.IEditableFiniteStateMachine)">
            <summary>
            Adds start state to the service effect automaton.
            </summary>
            <param name="stateHash"></param>
            <param name="fsm"></param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddFinalStates(System.Collections.ArrayList,Palladio.FiniteStateMachines.StateHash,Palladio.FiniteStateMachines.IEditableFiniteStateMachine)">
            <summary>
            Adds final states to the service effect automaton.
            </summary>
            <param name="finalStates"></param>
            <param name="stateHash"></param>
            <param name="fsm"></param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.ReadAndCreateInputs(Palladio.FiniteStateMachines.IEditableFiniteStateMachine)">
            <summary>
            Searches for the <c>inputlist</c> tag and creates an <c>InputSymbolHash</c>
            and adds the inputs to the finite state machine.
            </summary>
            <param name="fsm">Service effect automaton.</param>
            <returns>Inputs of the service effect automaton.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.ReadAndCreateTransitions(Palladio.FiniteStateMachines.StateHash,Palladio.FiniteStateMachines.InputSymbolHash,Palladio.FiniteStateMachines.IEditableFiniteStateMachine)">
            <summary>
            Searches for the <c>transitionlist</c> tag and creates the transitions.
            </summary>
            <param name="states1">States of the FSM.</param>
            <param name="inputhash">Inputs of the FSM.</param>
            <param name="fsm">The service effect automaton.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddTransition(Palladio.FiniteStateMachines.IEditableFiniteStateMachine,Palladio.FiniteStateMachines.ITransition)">
            <summary>
            Adds the transition to the finite state machine.
            </summary>
            <param name="fsm">Service effect automaton.</param>
            <param name="transition">Transition to be added.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.ReadAndCreateTransition(Palladio.FiniteStateMachines.StateHash,Palladio.FiniteStateMachines.InputSymbolHash,System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Creates a transition from the actual <c>transition</c> tag.
            </summary>
            <param name="stateHash">Hashtable containing states of the service effect
            automaton.</param>
            <param name="inputhash">Hashtable containing the inputs of the service effect automaton.</param>
            <param name="it">Actual position.</param>
            <returns>Transition of the actual transition tag.</returns>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddAttributes(Palladio.FiniteStateMachines.ITransition,System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Adds the <c>ProbabilityAttribute</c> and <c>RandomVariable</c> to the transition.
            </summary>
            <param name="transition">Transition which shall get the attributes.</param>
            <param name="it">Actual position.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddRandomVariable(Palladio.FiniteStateMachines.ITransition,System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Adds a <c>RandomVariable</c> to the transition.
            </summary>
            <param name="transition">Transition which shall get the attribute.</param>
            <param name="it">Actual position in the document.</param>
        </member>
        <member name="M:Palladio.Performance.XmlSeffParser.XmlSeffParser.AddProbabilityAttribute(Palladio.FiniteStateMachines.ITransition,System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Adds a <c>ProbabilityAttribute</c> to the transition.
            </summary>
            <param name="transition">Transition which shall get the attribute.</param>
            <param name="it">Actual position.</param>
        </member>
        <member name="P:Palladio.Performance.XmlSeffParser.XmlSeffParser.Seff">
            <summary>
            Service effect automaton
            </summary>
        </member>
    </members>
</doc>
