import featuremodel;
import featureconfig;
extension org::openarchitectureware::util::stdlib::io;

Configuration getConfiguration() : GLOBALVAR Features;

FeatureConfig getDefaultFeatureConfig() : getConfiguration().defaultConfig;

FeatureConfig getFeatureConfig(Object o) : 
	getConfiguration().configOverrides != null && getConfiguration().configOverrides.referencedObject == o ?
		getConfiguration().configOverrides
	:
		null;

boolean isFeatureSetRecursive(FeatureConfig fc, String featureName) :
	fc.confignode.exists(cn|cn.origin.name == featureName && cn.configState == ConfigState::SELECTED);
   		 
boolean isFeatureSet(String featureName) :
	isFeatureSetRecursive(getDefaultFeatureConfig(),featureName);
	
boolean isFeatureSet(Object o, String featureName) :
	if o.getFeatureConfig() != null then
		isFeatureSetRecursive(o.getFeatureConfig(),featureName)
	else
		isFeatureSetRecursive(getDefaultFeatureConfig(),featureName);	