«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»
«IMPORT repository»
«IMPORT entity»
«IMPORT system»
«IMPORT composition»
«IMPORT allocation»
«IMPORT resourceenvironment»

«DEFINE Root FOR Allocation»
	«FILE this.fqnAllocationContext().fqnToDirectoryPath()+".java"»
		package «this.fqnAllocationContextPackage()»;
		import de.uka.ipd.sdq.simucom.Context;
		 
		public class «this.fqnAllocationContextClass()» 
		extends Context {
			public «this.fqnAllocationContextClass()»() {
				super();
			}
			
			protected void initialiseAssemblyContextLookup() {
				«EXPAND AssemblyContextLink FOREACH this.allocationContexts_Allocation»
			}
			
			protected void initialiseResourceContainer() {
				«EXPAND ResouceContainerInit FOREACH this.targetResourceEnvironment_Allocation.resourceContainer_ResourceEnvironment»
			}
		}
	«ENDFILE»
«ENDDEFINE»

«DEFINE ResouceContainerInit FOR ResourceContainer»
	createResourceContainer("«this.id»");
«ENDDEFINE»

// The following rule assumes the current 1:1 relationship between allocation context and
// assembly context!
«DEFINE AssemblyContextLink FOR AllocationContext»
	linkAssemblyContextAndResourceContainer("«this.assemblyContext_AllocationContext.id»","«this.resourceContainer_AllocationContext.id»");
«ENDDEFINE»