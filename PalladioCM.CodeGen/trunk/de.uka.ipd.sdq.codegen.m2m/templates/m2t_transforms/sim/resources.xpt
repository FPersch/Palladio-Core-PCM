«IMPORT repository»
«IMPORT seff»
«IMPORT resourcetype»
«IMPORT resourceenvironment»
«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»

// ----------------------------
// Templates to generate simulated resources and resource environments
// ----------------------------

// Load the resource demand on a simulated resource
«DEFINE ResourceDemand FOR ParametricResourceDemand»
   {
      double demand = (Double) ctx.evaluate("«this.specification.specificationString()»",Double.class);
      ctx.findResource(this.assemblyContextID).loadActiveResource(ctx.getThread(),"«this.requiredResource_ParametricResourceDemand.entityName»",demand);
   }
«ENDDEFINE»

// ----------------------------
// Templates for a simulated resource environment
// Generate a class which contains the model information
// and sets up simulated resources accordingly
// ----------------------------
«DEFINE ResourceEnvironment FOR ResourceEnvironment»
	«FILE "main/ResourceEnvironment.java"»
		package main;
		
		public class ResourceEnvironment implements de.uka.ipd.sdq.simucomframework.resources.IResourceContainerFactory {
		   «EXPAND ResourceContainerInit FOR this»
		}
	«ENDFILE»
«ENDDEFINE»

«DEFINE ResourceContainerInit FOR ResourceEnvironment»
	public String[] getResourceContainerIDList() {
		return new String[] { 
			«FOREACH this.resourceContainer_ResourceEnvironment AS rc SEPARATOR ","»
				"«rc.id»"
			«ENDFOREACH»
		};
	}
	
	public void fillResourceContainer(de.uka.ipd.sdq.simucomframework.resources.SimulatedResourceContainer rc) {
		«EXPAND ResourceContainerCase FOREACH this.resourceContainer_ResourceEnvironment SEPARATOR " else "»
		else
			throw new RuntimeException("Unknown resource container should be initialised. This should never happen");	
	}
«ENDDEFINE»

«DEFINE ResourceContainerCase FOR ResourceContainer»
	if (rc.getResourceContainerID().equals("«this.id»")) {
		«EXPAND ActiveResourceAdd FOREACH this.activeResourceSpecifications_ResourceContainer»
		«EXPAND PassiveResourceAdd FOREACH this.passiveResourceSpecifications_ResourceContainer»
	}
«ENDDEFINE»

«DEFINE ActiveResourceAdd FOR ProcessingResourceSpecification»
	rc.addActiveResource(
		"«this.activeResourceType_ActiveResourceSpecification.entityName»",
		«this.processingRate»,
		"«this.units.javaString()»");
«ENDDEFINE»

«DEFINE PassiveResourceAdd FOR PassiveResourceSpecification»
	rc.addPassiveResource(
		"«this.passiveResourceType_PassiveResourceSpecification.entityName»",
		«this.capacity»);
«ENDDEFINE»
