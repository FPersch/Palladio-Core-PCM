«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»
«IMPORT seff»

// ----------------------------
// SimuCom templates for parts of a SEFF
// ----------------------------
«DEFINE Action FOR CollectionIteratorAction»
   for (int iterationCount = 0, maxIterationCount = (Integer)ctx.evaluate("«this.parameter_CollectionIteratorAction.parameterName».NUMBER_OF_ELEMENTS",Integer.class); 
            iterationCount < maxIterationCount; iterationCount++){
       	de.uka.ipd.sdq.simucomframework.stackframe.SimulatedStackframe loopFrame = ctx.getStack().createAndPushNewStackFrame(ctx.getStack().currentStackFrame());
       	ctx.evaluateInner(loopFrame, "«this.parameter_CollectionIteratorAction.parameterName».INNER");

       «EXPAND m2t_transforms::java_core::Actions FOR this.bodyBehaviour_Loop.steps_Behaviour.findStart()»
	   ctx.getStack().removeStackFrame();
   } 
«ENDDEFINE»

«DEFINE Action FOR LoopAction»
   for (int iterationCount = 0, maxIterationCount = (Integer)ctx.evaluate("«this.iterations_LoopAction.specification.javaString()»",Integer.class); 
            iterationCount < maxIterationCount; iterationCount++){
       «EXPAND m2t_transforms::java_core::Actions FOR this.bodyBehaviour_Loop.steps_Behaviour.findStart()»
   } 
«ENDDEFINE»

«DEFINE Action FOR InternalAction»
	«EXPAND m2t_transforms::resources::ResourceDemands FOR this»
«ENDDEFINE»

«DEFINE Action FOR BranchAction»
	«EXPAND BranchTransition FOREACH this.branches_Branch SEPARATOR " else "»
	else
		throw new RuntimeException("No branch condition evaluated to true :-(");
«ENDDEFINE»

«DEFINE BranchTransition FOR AbstractBranchTransition»
   «ERROR "Unknown branch transition found!"»
«ENDDEFINE»

«DEFINE BranchTransition FOR GuardedBranchTransition»
	if ((Boolean)ctx.evaluate("«this.branchCondition_BranchTransition.specification.javaString()»") == true)
	{
		«EXPAND m2t_transforms::java_core::Actions FOR this.branchBehaviour_BranchTransition.steps_Behaviour.findStart()»
	}
«ENDDEFINE»

«DEFINE Action FOR AquireAction»
	// Aquire «this.resourceType_Aquire.entityName»
	ctx.findResource(this.assemblyContextID).aquirePassiveResource(ctx.getThread(),"«this.resourceType_Aquire.entityName»");
«ENDDEFINE»

«DEFINE Action FOR ReleaseAction»
	// Release «this.resourceType_Release.entityName»
	ctx.findResource(this.assemblyContextID).releasePassiveResource("«this.resourceType_Release.entityName»");
«ENDDEFINE»
