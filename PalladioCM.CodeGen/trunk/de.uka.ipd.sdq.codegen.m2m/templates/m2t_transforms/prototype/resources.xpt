«IMPORT repository»
«IMPORT seff»
«IMPORT resourcetype»
«IMPORT resourceenvironment»
«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»

// ----------------------------
// Templates to generate simulated resources and resource environments
// ----------------------------

// Load the resource demand on a simulated resource
«DEFINE ResourceDemand FOR ParametricResourceDemand»
   {
      double demand = (Double) ctx.evaluate("«this.specification.specificationString()»",Double.class);
      // TODO: Consume different resource types actively
      try {
		//Thread.sleep((long) (demand * 1000));
		//TODO: Erstmal nur CPU, sonst hier unterscheiden!
		String neededResource = "«this.requiredResource_ParametricResourceDemand.entityName»";
		
		if (neededResource.equals("cpu")){
		  de.uka.ipd.sdq.prototype.framework.strategies.StrategiesRegistry.singleton()
		    .getStrategyFor(de.uka.ipd.sdq.prototype.framework.resourcetypes.ResourceTypeEnum.CPU).consume(demand);
		} else
		{
		  de.uka.ipd.sdq.prototype.framework.strategies.StrategiesRegistry.singleton()
		    .getStrategyFor(de.uka.ipd.sdq.prototype.framework.resourcetypes.ResourceTypeEnum.HDD).consume(demand);
		}
	  } catch (Exception e) {
		e.printStackTrace();
		System.exit(-1);
	  }
   }
«ENDDEFINE»