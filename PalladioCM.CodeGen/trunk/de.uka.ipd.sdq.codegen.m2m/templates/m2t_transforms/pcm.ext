import entity;
import repository;
import seff;
import system;
import composition;
import usagemodel;
import parameter;
import stoex;

findStart(List[AbstractAction] actions) :
   actions.typeSelect(StartAction).first();
   
connectors(ComposedStructure s) : 
   s.compositeAssemblyConnectors_ComposedStructure;

test(AssemblyConnector c, AssemblyContext ctx, RequiredRole r):
   c.requiredRole_CompositeAssemblyConnector == r && c.requiringChildComponentContext_CompositeAssemblyConnector == ctx;

hasConnector(ComposedStructure s, AssemblyContext ctx, RequiredRole r) :
   connectors(s).select(con|test(con,ctx,r)).size == 1; 
   
getConnector(ComposedStructure s, AssemblyContext ctx, RequiredRole r) :
   connectors(s).select(con|test(con,ctx,r)).get(0); 

hasProvidedDelegationConnector(ComposedStructure s, ProvidedRole p) :
   s.providedDelegationConnectors_ComposedStructure.select(dc|dc.outerProvidedRole_ProvidedDelegationConnector == p).size == 1;
   
getProvidedDelegationConnector(ComposedStructure s, ProvidedRole p) :
   s.providedDelegationConnectors_ComposedStructure.select(dc|dc.outerProvidedRole_ProvidedDelegationConnector == p).get(0);
   
hasRequiredDelegationConnector(ComposedStructure s, AssemblyContext ctx, RequiredRole r) :
   s.requiredDelegationConnectors_ComposedStructure.select(dc|dc.innerRequiredRole_RequiredDelegationConnector ==  r).size == 1;    
   
getRequiredDelegationConnector(ComposedStructure s, AssemblyContext ctx, RequiredRole r) :
   s.requiredDelegationConnectors_ComposedStructure.select(dc|dc.innerRequiredRole_RequiredDelegationConnector ==  r).get(0);  
   
querySystemCalls(UsageScenario us) :
  us.scenarioBehaviour_UsageScenario.actions_ScenarioBehaviour.typeSelect(EntryLevelSystemCall);
  
getID(VariableReference vr) :
  vr.referenceName;

getID(AbstractNamedReference nsr):
  'this is never called';
  
getID(NamespaceReference nsr):
  nsr.referenceName + '.' + nsr.innerReference_NamespaceReference.getID();

parameterUsageLHS(VariableUsage vu) :
  vu.namedReference_VariableUsage.getID();