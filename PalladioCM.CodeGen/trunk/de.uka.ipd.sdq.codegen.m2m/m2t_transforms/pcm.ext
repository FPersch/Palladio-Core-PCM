import entity;
import repository;
import seff;
import system;
import composition;

findStart(List[AbstractAction] actions) :
   actions.typeSelect(StartAction).first();
   
connectors(ComposedStructure s) : 
   s.compositeAssemblyConnectors_ComposedStructure;

test(AssemblyConnector c, AssemblyContext ctx, RequiredRole r):
   c.requiredRole_CompositeAssemblyConnector == r && c.requiringChildComponentContext_CompositeAssemblyConnector == ctx;
   
getConnector(ComposedStructure s, AssemblyContext ctx, RequiredRole r) :
   connectors(s).select(con|test(con,ctx,r)).size == 1 ? connectors(s).select(con|test(con,ctx,r)).get(0) : null ; 

getProvidedDelegationConnector(ComposedStructure s, ProvidedRole p) :
   s.providedDelegationConnectors_ComposedStructure.select(dc|dc.outerProvidedRole_ProvidedDelegationConnector == p).get(0);
   
getRootModelContainer(Repository r) : 
	r;
	
getRootModelContainer(Entity r) : 
   System.isInstance(r) || Repository.isInstance(r) ? r : r.eContainer.getRootModelContainer();