«IMPORT repository»
«IMPORT seff»
«IMPORT system»
«IMPORT entity»

«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»

«DEFINE ImportsTM FOR Object»
«ENDDEFINE»

«DEFINE ClassHeader FOR ProvidesComponentType»
public class «this.entityName»
«ENDDEFINE»

«DEFINE Signature FOR Signature»
   «EXPAND ReturnType FOR this»
   «this.serviceName»
   ( «EXPAND ParameterListTM FOR this» )
«ENDDEFINE»

«DEFINE ReturnType FOR Signature»
   «IF this.returntype__Signature != null»
      «this.datatype__Parameter.type»
   «ELSE»
      void
   «ENDIF»
«ENDDEFINE»

«DEFINE ParameterListTM FOR Signature»
   «ERROR "Template method must be overridden"»
«ENDDEFINE»

«DEFINE ParameterUsageListTM FOR Signature»
   «ERROR "Template method must be overridden"»
«ENDDEFINE»

«DEFINE Parameter FOR Parameter»
   «IF this.datatype__Parameter != null»
      «this.datatype__Parameter.type»
   «ELSE»
      void
   «ENDIF»
   «this.parameterName»
«ENDDEFINE»

«DEFINE ParameterUse FOR Parameter»
   «this.parameterName»
«ENDDEFINE»

«DEFINE Ports FOR InterfaceProvidingEntity»
   «EXPAND PortImplFile FOREACH this.providedRoles_InterfaceProvidingEntity»
   «EXPAND PortMemberVars FOREACH this.providedRoles_InterfaceProvidingEntity»
   «EXPAND PortGetter FOREACH this.providedRoles_InterfaceProvidingEntity»
«ENDDEFINE»

«DEFINE PortImplFile FOR ProvidedRole»
   «FILE this.getRootModelContainer().basePackageDirectory()+"/impl/ports/"+this.portClassName()+".java"»
	  package «this.eContainer.implementationPackage()+".ports"»;
	  import «this.getRootModelContainer().basePackageName()+".*"»;
	  import «this.eContainer.implementationPackage()+"."+this.portComponent()»;
      «EXPAND PortImpl FOR this»
   «ENDFILE»
«ENDDEFINE»

«DEFINE PortImpl FOR ProvidedRole»
	  «EXPAND m2t_transforms::java_core::ImportsTM FOR this»   
	  // Port class for «this.portClassName()»
	  public class «this.portClassName()» implements «this.providedInterface__ProvidedRole.javaName()»
	  {
	     protected «this.portComponent()» myComponent = null;
	     
	     public «this.portClassName()»(«this.portComponent()» myComponent){
	        this.myComponent = myComponent;
	     }
	     «EXPAND PortDelegator FOREACH this.providedInterface__ProvidedRole.signatures__Interface»
	  }
«ENDDEFINE»

«DEFINE PortDelegator FOR Signature»
   public «EXPAND Signature FOR this» {
      myComponent.«this.eContainer.javaName().toFirstLower()»_«this.serviceName»(
         «EXPAND ParameterUsageListTM FOR this»);
   }   
«ENDDEFINE»

«DEFINE PortMemberVars FOR ProvidedRole»
   protected «this.portClassName()» «this.portMemberVar()» = new «this.portClassName()»(this);
«ENDDEFINE»

«DEFINE PortGetter FOR ProvidedRole»
   public «this.portInterface()» «this.portGetter()» () {
      return «this.portMemberVar()»;
   }
«ENDDEFINE»

«DEFINE RequiredInterfaces FOR CompleteComponentType»
   «EXPAND ComponentContextImpl FOR this»
   «EXPAND ComponentContextMemberVar FOR this»
   «EXPAND ComponentContextSetter FOR this»
«ENDDEFINE»

«DEFINE ComponentContextImpl FOR CompleteComponentType»
   «FILE this.eContainer.basePackageDirectory()+"/impl/contexts/"+this.contextClassName()+".java"»
      package «this.implementationPackage()+".contexts"»;
      import «this.eContainer.basePackageName()+".*"»;
      «EXPAND m2t_transforms::java_core::ImportsTM FOR this»   
      // Component context class for «this.javaName()»
      public class «this.contextClassName()»
      {
         «EXPAND ContextInterfaceMemberVar FOREACH this.requiredRoles_InterfaceRequiringEntity»
         «EXPAND ContextInterfaceGetter FOREACH this.requiredRoles_InterfaceRequiringEntity»
         public «this.contextClassName()» (
            «EXPAND ContextInterfaceVar FOREACH this.requiredRoles_InterfaceRequiringEntity SEPARATOR ","» ) {
            «EXPAND ContextInterfaceInitialisation FOREACH this.requiredRoles_InterfaceRequiringEntity»
         }
      }
   «ENDFILE»
«ENDDEFINE»

«DEFINE ComponentContextMemberVar FOR CompleteComponentType»
   protected «this.contextClassName()» myContext = null;
«ENDDEFINE»

«DEFINE ComponentContextSetter FOR CompleteComponentType»
   public void setContext(«this.contextClassName()» myContext) {
      this.myContext = myContext;
   }
«ENDDEFINE»

«DEFINE ContextInterfaceVar FOR RequiredRole»
   «this.requiredInterface__RequiredRole.javaName()» «this.requiredInterface__RequiredRole.javaName().toFirstLower()»
«ENDDEFINE»

«DEFINE ContextInterfaceInitialisation FOR RequiredRole»
   this.«this.requiredInterface__RequiredRole.javaName().toFirstLower()» = «this.requiredInterface__RequiredRole.javaName().toFirstLower()»;
«ENDDEFINE»

«DEFINE ContextInterfaceMemberVar FOR RequiredRole»
   protected «this.requiredInterface__RequiredRole.javaName()» «this.requiredInterface__RequiredRole.javaName().toFirstLower()» = null;
«ENDDEFINE»

«DEFINE ContextInterfaceGetter FOR RequiredRole»
   public «this.requiredInterface__RequiredRole.javaName()» getRole«this.requiredInterface__RequiredRole.javaName()»() {
      return «this.requiredInterface__RequiredRole.javaName().toFirstLower()»;
   }
«ENDDEFINE»

«DEFINE ComponentService FOR ResourceDemandingSEFF»
   public «EXPAND ReturnType FOR this.describedService__SEFF»
      «this.describedService__SEFF.eContainer.javaName().toFirstLower()»_«this.describedService__SEFF.serviceName»
         («EXPAND ParameterListTM FOR this.describedService__SEFF») {
      «EXPAND Actions FOR this.steps_Behaviour.findStart()»      
   }   
«ENDDEFINE»

«DEFINE Actions FOR AbstractAction»
   «EXPAND m2t_transforms::seff::Action FOR this»
   «IF !StopAction.isInstance(this)»
      «EXPAND Actions FOR this.successor_AbstractAction»
   «ENDIF»
«ENDDEFINE»

«DEFINE ExternalCall FOR Signature»
    myContext.getRole«this.eContainer.javaName()»().«this.serviceName» («EXPAND ParameterUsageListTM FOR this»);
«ENDDEFINE»
