<workflow>
	
	<property file='./workflows/codegen_qosa.properties'/>
	
	<component class="oaw.emf.XmiReader">
		<modelFile value="${repositoryFile}"/>
		<outputSlot value="pcmmodel"/>
	</component>
    
	<component
		class="org.openarchitectureware.check.CheckComponent">
	    <metaModel id="pcm.repository.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.repository.RepositoryPackage"/>
		</metaModel>
	    <metaModel id="pcm.core.entity.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.core.entity.EntityPackage"/>
		</metaModel>	    
		<metaModel id="pcm.core.stochastics.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.stoex.StoexPackage"/>
		</metaModel>
	    <metaModel id="pcm.seff.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.seff.SeffPackage"/>
		</metaModel>	    
		<metaModel id="pcm.resType.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.resourcetype.ResourcetypePackage"/>
		</metaModel>
		<metaModel id="pcm.system.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.system.SystemPackage"/>
		</metaModel>
		<metaModel id="pcm.allocation.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.allocation.AllocationPackage"/>
		</metaModel>
		<metaModel id="pcm.core.composition.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.core.composition.CompositionPackage"/>
		</metaModel>
		<metaModel id="pcm.core.composition.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.usagemodel.UsagemodelPackage"/>
		</metaModel>		
		<metaModel id="pcm.core.composition.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.parameter.ParameterPackage"/>
		</metaModel>
		<checkFile value="pcm"/>
		<expression value="pcmmodel.eAllContents"/>
	</component>

	<component id="generator" class="oaw.xpand2.Generator" skipOnErrors="true">
	    <metaModel id="pcm.repository.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.repository.RepositoryPackage"/>
		</metaModel>
	    <metaModel id="pcm.core.entity.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.core.entity.EntityPackage"/>
		</metaModel>	    
		<metaModel id="pcm.core.stochastics.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.stoex.StoexPackage"/>
		</metaModel>
	    <metaModel id="pcm.seff.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.seff.SeffPackage"/>
		</metaModel>	    
		<metaModel id="pcm.resType.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.resourcetype.ResourcetypePackage"/>
		</metaModel>
		<metaModel id="pcm.system.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.system.SystemPackage"/>
		</metaModel>
		<metaModel id="pcm.allocation.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.allocation.AllocationPackage"/>
		</metaModel>
		<metaModel id="pcm.core.composition.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.core.composition.CompositionPackage"/>
		</metaModel>
		<metaModel id="pcm.core.composition.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.usagemodel.UsagemodelPackage"/>
		</metaModel>		
		<metaModel id="pcm.core.composition.emf" class="oaw.type.emf.EmfMetaModel">
			<metaModelPackage value="de.uka.ipd.sdq.pcm.parameter.ParameterPackage"/>
		</metaModel>
		<expand value="m2t_transforms::repository::Root FOR pcmmodel"/>
			<outlet path="${outpath}">
			</outlet>
	    	<beautifier class="org.hybridlabs.source.formatter.JavaImportBeautifier"
				organizeImports="true"
				format="true"/>	
	</component>	
	
	<component adviceTarget="generator" id="reflectionAdvice" class="oaw.xpand2.GeneratorAdvice">
		<advices value="templates::simulation_template_methods"/>
	</component>	
</workflow>
