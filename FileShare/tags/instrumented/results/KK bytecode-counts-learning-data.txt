
Variables:
- Filesize X1
- Compressed X2


  BC 2: optimal solution found within about 1 sec: X1 + X1 + 3.0 OR ((X1 + (X1 + X1)) / (X1 + X2)) + (X1 + X1)
  BC 3:  Best solution fitness: 6.5481755E7 / 1500 generations, about 1.5 minutes
 Best solution: $315.0 + 315.0 + ((IF(0.7244477 >= (71.0 + 0.0)) THEN (315.0)) + (X1 + (((((71.0 + 0.0) * X1) + (211.0 + (X2 * (0.7244477 + (0.7244477 + (0.7244477 + ((333.0 * (IF(0.7244477 >= (IF(0.7244477 >= 0.7244477) THEN (315.0))) THEN ((333.0 * X1)))) * 0.7244477) + (((211.0 * X1) + 315.0 + ((IF(0.7244477 >= (IF(0.7244477 >= 0.7244477) THEN (315.0))) THEN (315.0)) + (333.0 * 0.7244477))) + X1)) + (333.0 * X1)) + 333.0)) + X1) + (IF(0.7244477 >= (71.0 + 0.0)) THEN ((333.0 * (348.0 * X1))))) + (0.7244477 + ((X1 + (Exp(X2))) + (348.0 * X1) + 0.7244477) + 333.0) + (0.7244477 + (IF(0.7244477 >= (333.0 * 0.7244477)) THEN ((0.7244477 + (4.0 + 0.37233508) + X1))) + X1)) + (333.0 * X1)) + 4.0))$
 Depth of chromosome: 16
 
AND
 
 Best solution fitness: 5.9777374E7 / 15 000 generations
 Best solution: $0.1 + (((X1 / (89.0 + 241.0 + 100.0)) * X1) + (((343.0 * X2) + (IF(267.0 >= 10.0) THEN (1.3)) + (241.0 + (X1 / (241.0 + (343.0 * X2) + 100.0)) + 100.0)) * X1) + ((IF(X1 >= 0.024766982) THEN ((267.0 * X2))) * X2)) + (241.0 + (200.0 + ((89.0 + (((((X1 / (X1 + 241.0 + 100.0)) + 30.0 + 241.0) + X2 + 1.9) * X2) * X2) + 100.0) * ((IF(267.0 >= 10.0) THEN ((1.3 * X2))) + X1 + 241.0)) + 400000.0))$
 Depth of chromosome: 11

 BC 4: Best solution fitness: 3.2821846E7 / 1500 generations
 Best solution: $((X1 * 1.1 * 347.0) + (sine (IF(93.0 >= (IF(20000.0 >= X2) THEN (X2))) THEN (1000.0))) + (273.0 * X2 * X1)) + (sine ((X2 * 1.9 * 1.9) / (0.7 / 10.0))) + 0.9$
 Depth of chromosome: 5

 BC 0,1,5: trivial
 
 BC 17:  Best solution fitness: 18311.376953125 / 1500 generations
 Best solution: $0.6305625 - (268.0 - (((268.0 - X1) / ((IF(X2 >= 0.6305625) THEN (X1) ELSE (200.0)) / 30.0)) - (268.0 - X1)))$
 Depth of chromosome: 6

AND
 
 Best solution fitness: 17436.6494140625 / 5 000 generations
 Best solution: $((X1 - X2) - 367.0) * (sine (1.5 ^ X2))$
 Depth of chromosome: 3
  
 BC 21:  Best solution fitness: 4.64435054E8 / 1500 generations
 Best solution: $((0.12728024 + 1.7 + X2) * (0.12728024 * X1) * (0.12728024 * 1000.0 * 213.0)) - (Exp((0.12728024 / 0.12728024)))$
 Depth of chromosome: 3
 
 BC 25:  Best solution fitness: 1.28571282E8 /  500 generations
 Best solution: $((X1 * 199.0) + (1.3 + 4.0 + ((1.7 ^ X2) * (X1 * 199.0) * (9.0 - X2))) + ((X1 * 199.0) - 199.0)) + ((X1 + X1) + (10.0 * 1000.0) + (X1 * 199.0)) + (X1 * 199.0)$
 Depth of chromosome: 5 
 
 BC 50:  Best solution fitness: 1.3786796E7
 Best solution: $(X1 * 392.0) + (64.0 + (X1 * (IF(35.0 >= X2) THEN (392.0) ELSE ((1.9 + X1 + 5.0))))) + ((X1 * 30.0) * (4.0 + (IF(X2 >= 392.0) THEN ((1.9 + (64.0 + (0.53918666 + (4.0 + (4.0 + (IF(139.0 >= 0.026080012) THEN (1.1) ELSE (100.0)) + 2.0) + 2.0)))))) + (Exp(X2))))$
 Depth of chromosome: 10
 
 BC 51:  Best solution fitness: 6.6340229E7 / 500 generations
 Best solution: ((IF((155.0 + (sine X2) + 356.0) >= X1) THEN (356.0)) + X2 + 356.0) + ((155.0 + X2 + (IF((X2 * (400000.0 - 100.0) * X1) >= X1) THEN (356.0))) + (X1 * ((0.30710447 + ((IF(0.9 >= X1) THEN (356.0)) + (IF((0.30710447 + X2 + X2) >= 0.9) THEN ((IF(X1 >= 0.9) THEN (51.0)))) + X2) + (X2 * 100.0)) + (155.0 + (IF((X2 * 356.0 * X1) >= X1) THEN (356.0)) + (IF(X1 >= 0.9) THEN (51.0))) + (0.30710447 + X2 + X2))) + (155.0 + (IF(X1 >= 0.9) THEN (51.0)) + (X1 * (155.0 + ((IF((155.0 + (0.5 / 0.12519497) + 356.0) >= X1) THEN (356.0)) + (IF(X1 >= 0.9) THEN (51.0)) + 356.0) + X2)))) + X2
 Depth of chromosome: 9
 
 BC 58:  Best solution fitness: 1.0895555E7 / 500 generations
 Best solution: IF((217.0 * X1) >= X2) THEN (((((100.0 * X1 * X2) * (0.7 * 217.0)) / X1) + ((100.0 * X1 * X2) + (217.0 * X1) + (1.3 + (217.0 * X1) + ((268.0 + 203.0) * (IF(217.0 >= 0.02760756) THEN (X1))))) + (IF((X1 + X2 + (X1 / X1)) >= 1.7) THEN (0.02760756)))) ELSE (268.0)
 Depth of chromosome: 6
 
 BC 132: Best solution fitness: 4.1188456E7 / 500 generations
 Best solution: ((X1 + 1.1 + (5.0 + (328.0 * X1 * X2))) + X1) + ((((X1 + 4.0 + (328.0 * X1 * 4.0)) + 223.0 + 121.0) + (X2 + X1) + 223.0) + 223.0 + 121.0) + ((IF(4.0 >= (5.0 + (328.0 * X1 * X2))) THEN ((173.0 * 4.0 * 1.5)) ELSE (X2)) + 223.0 + 121.0)
 Depth of chromosome: 6
 
 BC 160: Best solution fitness: 1.3969437E7 / 500 generations
 Best solution: 4.0 * ((X2 + (0.7 * X1 * 162.0) + (0.7 * X1 * 162.0)) + ((3.0 ^ X2) + (X2 - X2) + ((((0.7 * X1 * 1.5) + (IF((76.0 + 200.0 + 0.1) >= 20000.0) THEN (X1)) + X1) + (((IF(0.9 >= X1) THEN (5.0) ELSE ((0.7 * X1 * (1000.0 ^ X2)))) + 5.0) - X2) + (IF(X1 >= X1) THEN (X1) ELSE (X1))) + X1 + (4.0 / 0.7841332))) + X1)
 Depth of chromosome: 10
 
 BC 161: Best solution fitness: 7.6153224E7 / 500 generations
 Best solution: (1.9 + (X1 + 113.0 + (400000.0 + ((30.0 * 1.1 * 0.34182966) * X1 * 4.0) + (30000.0 / 148.0)))) + 376.0 + ((3.0 + (30000.0 + (X1 - 200.0) + ((113.0 * X2 * X1) + ((113.0 * X1 * 4.0) + 1.3 + (0.7906137 / (30000.0 / 148.0))) + X1)) + (399.0 * X1 * 3.0)) + (((X2 * (X1 + (113.0 * X1 * 4.0) + (X2 - 10.0))) - 10.0) + (0.7906137 / 257.0)) + 376.0)
 Depth of chromosome: 8
 
 BC 190: Best solution fitness: 1.3589769E7 / 500 generations
 Best solution: ((((5.0 + (1.1 * X1 * 10.0)) + (IF(93.0 >= 93.0) THEN (0.5) ELSE (93.0))) + X2) + ((1.9 + ((5.0 * X1 * 93.0) + (5.0 + (1.1 * X1 * 10.0)))) + ((((5.0 * X1 * 93.0) + 183.0) + ((((5.0 * X1 * 93.0) + (1.1 * 5.0 * 5.0)) + 100.0) * X2 * 0.1)) + (5.0 * 5.0 * 5.0)))) + 100.0
 Depth of chromosome: 9
 
 BC 188:  Best solution fitness: 19802.0 / 1500 generations
 Best solution: $X1 + (X1 - ((((X2 + ((X2 + X2 + (((((360.0 + X2 + 360.0) / (Exp(X2))) + (X2 + 28.0 + 5.0) + 360.0) / (Exp(X2))) + X2 + X2)) * 5.0) + X2) / (Exp(X2))) + X2 + X2) + X2 + X2))$
 Depth of chromosome: 13


#####################################################################
#####################################################################


\newpage
\subsection{Tracing and Characterising Parameter usage in Control Flow}
\label{sec:Approach:subsec:Measuring-Tracing}

\begin{itemize}
	\item Measured only on component interface level: incoming and outgoing call / control / data flow
	\begin{itemize}

		\item Signature, provided interface of business logic: \textsl{void uploadFiles(byte[][] inputFiles, int[] inputFileTypes)}
		\item Measured: 
		\begin{itemize}
			\item size of inputFiles[] (inputFiles.length)
			\item size of entries / sub-array (inputFiles[x].length)
			\item size of inputFileTypes[] (inputFiles.length)
			\item value of entries (inputFileTypes[x].value)
		\end{itemize}		

		\item Signature, required interface of business logic: \textsl{byte[] compress(byte[] inputFile)}
		\item Measured: 
		\begin{itemize}
			\item inputFile.length
			\item Incoming data from required components: file size of compressed file returning return.length
			\item number of calls of this service
		\end{itemize}

		\item Signature, required interface of business logic: \textsl{byte[] getMessageDigest(byte[] inputBytes)}
		\item Measured (same as in the previous case): 
		\begin{itemize}
			\item inputBytes.length
			\item Incoming data from required components: file size of compressed file returning return.length
			\item number of calls of this service		
		\end{itemize}
		
		\item Signature, required interface of business logic: \textsl{void storeFile(byte[] file, byte[] fileHash)}
		\item Measured: 
		\begin{itemize}
			\item file.length
			\item fileHash.length (not meaningful but measured)
			\item number of calls
			\item Service is provided by large and small file storage system: each treated indidually
		\end{itemize}						
	\end{itemize}

	\item Assumptions: Domain Experts can say what are important characteristics of interface level data
	\begin{itemize}
		\item Heuristic works in most cases
		\item $\rightarrow$ as all data is made from primitive types
		\item Otherwise manual specification by Domain Expert required		
	\end{itemize}
	
\end{itemize}
