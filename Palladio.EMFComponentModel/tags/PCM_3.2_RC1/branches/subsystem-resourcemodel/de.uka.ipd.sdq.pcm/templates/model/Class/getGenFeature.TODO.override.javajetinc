<%
String derive = null;
EStructuralFeature eFeature = genFeature.getEcoreFeature();
EAnnotation ocl = eFeature.getEAnnotation(oclNsURI);
if (ocl != null) derive = (String) ocl.getDetails().get("derive");
if (derive == null) { %>
		// TODO: implement this method
		// Ensure that you remove @generated or mark it @generated NOT
		throw new UnsupportedOperationException();
<% } else {
	final String expr = genFeature.getSafeName() + "DeriveOCL";
	if (genFeature.isListType()) { // we will need the feature to create the EcoreEList %>
		<%=genModel.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%> eFeature = (<%=genModel.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%>) eClass().getEStructuralFeatures().get(<%=eFeature.getEContainingClass().getEStructuralFeatures().indexOf(eFeature)%>);
	<% } %>
		if (<%=expr%> == null) { <% if (!genFeature.isListType()) { // declare locally for OCL initialization only %>
			<%=genModel.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%> eFeature = (<%=genModel.getImportedName("org.eclipse.emf.ecore.EStructuralFeature")%>) eClass().getEStructuralFeatures().get(<%=eFeature.getEContainingClass().getEStructuralFeatures().indexOf(eFeature)%>);
			<% } %>
			<%=genModel.getImportedName("org.eclipse.emf.ocl.parser.Environment")%> env = <%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.util.ExpressionsUtil")%>.createPropertyContext(eClass(), eFeature);
			
			try {
				<%=expr%> = <%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.util.ExpressionsUtil")%>.createQuery(env, "<%=derive%>", true);
			} catch (<%=genModel.getImportedName("org.eclipse.emf.ocl.parser.ParserException")%> e) {
				throw new UnsupportedOperationException(e.getLocalizedMessage());
			}
		}
		
		<%=genModel.getImportedName("org.eclipse.emf.ocl.query.Query")%> query = <%=genModel.getImportedName("org.eclipse.emf.ocl.query.QueryFactory")%>.eINSTANCE.createQuery(<%=expr%>);
		<%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.util.EvalEnvironment")%> evalEnv = new <%=genModel.getImportedName("org.eclipse.emf.ocl.expressions.util.EvalEnvironment")%>();
		query.setEvaluationEnvironment(evalEnv);
	<% if (genFeature.isListType()) { %>
		<%=genModel.getImportedName("java.util.Collection")%> result = (<%=genModel.getImportedName("java.util.Collection")%>) query.evaluate(this);
		return new <%=genModel.getImportedName("org.eclipse.emf.ecore.util.EcoreEList")%>.UnmodifiableEList(this, eFeature, result.size(), result.toArray());
	<% } else if (genFeature.isPrimitiveType()) { %>
		return ((<%=genFeature.getObjectType()%>) query.evaluate(this)).<%=genFeature.getPrimitiveValueFunction()%>();
	<% } else { %>
		return (<%=genFeature.getImportedType()%>) query.evaluate(this);
	<% } %>
<% } %>
