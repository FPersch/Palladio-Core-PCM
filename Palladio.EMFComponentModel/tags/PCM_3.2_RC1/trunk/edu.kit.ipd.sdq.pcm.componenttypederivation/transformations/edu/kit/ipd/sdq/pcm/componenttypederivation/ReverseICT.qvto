/*
 * The ReverseICT transformation creates corresponding Provides 
 * Component Types (PCT) for Complete Component Types (CCT) and Complete Component
 * Types for Implementation Component Types (ICT) with empty parent components. The "conforms"
 * and "impl-conforms" relations hold after the transformation.
 */

/* Access in transformation does not work? */
import MapRoles;

modeltype PCM uses "http://sdq.ipd.uka.de/PalladioComponentModel/4.0";
modeltype PCM_REP uses "http://sdq.ipd.uka.de/PalladioComponentModel/Repository/4.0";


transformation ReverseICT(inout model : PCM);

main() {
	model.rootObjects()[PCM_REP::Repository]->map addReversedComponents();
}

/* Reverse component types in a repository */
mapping inout PCM_REP::Repository::addReversedComponents() {
 	self.components__Repository += self.subobjects()[PCM_REP::ImplementationComponentType]->map ICTToCCT();
 	self.components__Repository += self.subobjects()[PCM_REP::CompleteComponentType]->map CCTToPCT();
}

/* Create fitting CCT from ICT with all required and providing roles */
mapping inout PCM_REP::ImplementationComponentType::ICTToCCT() : PCM_REP::CompleteComponentType 
  when { self.parentCompleteComponentTypes->isEmpty()}	
{
	entityName := self.entityName;
	providedRoles_InterfaceProvidingEntity := self.providedRoles_InterfaceProvidingEntity->map ProvidedToProvided();
	requiredRoles_InterfaceRequiringEntity := self.requiredRoles_InterfaceRequiringEntity->map RequiredToRequired();
	repository_RepositoryComponent := self.repository_RepositoryComponent;
	resourceRequiredRoles_ResourceInterfaceRequiringEntity := self.resourceRequiredRoles_ResourceInterfaceRequiringEntity->map ResourceToResource();
	
	self.parentCompleteComponentTypes += result;	
}

/* Create fitting PCT from CCT containing only the providing roles */
mapping inout PCM_REP::CompleteComponentType::CCTToPCT() : PCM_REP::ProvidesComponentType
  when { self.parentProvidesComponentTypes->isEmpty() } 
{
	entityName := self.entityName;
	providedRoles_InterfaceProvidingEntity := self.providedRoles_InterfaceProvidingEntity->map ProvidedToProvided();
	repository_RepositoryComponent := self.repository_RepositoryComponent;
	
	self.parentProvidesComponentTypes += result;  	
} 

