«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»
«IMPORT system»
«IMPORT composition»
«IMPORT usagemodel»
«IMPORT entity»
«IMPORT repository»
«IMPORT allocation»

«DEFINE Main FOR UsageModel»
	«FILE "Main.java"»
		public class Main {
			public static void main(String[] args) {
				«FOREACH this.usageScenario_UsageModel AS us»
					«EXPAND WorkloadDriver(us) FOR us.workload_UsageScenario»
				«ENDFOREACH»
			}
		}
	«ENDFILE»
«ENDDEFINE»

«DEFINE WorkloadDriver(UsageScenario u) FOR Workload»
	«ERROR "OAW GENERATION ERROR [m2t_transforms/pojo/usage.xpt]: This should never get called!"»
«ENDDEFINE»

«DEFINE WorkloadDriver(UsageScenario u) FOR OpenWorkload»
	new Thread(new java.lang.Runnable(){
		public void run() {
			while (true) {
				«u.fqn()» us = new «u.fqn()»();
				new Thread(us).run();
                try {
                	// TODO: Wait for specified model time
					Thread.sleep(200);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}).start();
	}
«ENDDEFINE»

«DEFINE WorkloadDriver(UsageScenario u) FOR ClosedWorkload»
	java.util.ArrayList<Thread> threads = new java.util.ArrayList<Thread>();
	for (int i = 0; i < «this.population»; i++) {
		threads.add(new Thread(new java.lang.Runnable(){
			«u.fqn()» us = new «u.fqn()»();
			public void run() {
				while (true) {
					us.run();
                    try {
                    	// TODO: Wait for think time of the model instance
						Thread.sleep(200);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		}));
	}
    for (java.util.Iterator<Thread> it = threads.iterator(); it.hasNext(); )
        it.next().start();
«ENDDEFINE»

«DEFINE UsageScenario(Allocation a) FOR UsageScenario»
	«FILE this.implementationPackage().fqnToDirectoryPath() + "/" + this.javaName() + ".java"»
		package «this.implementationPackage()»;
		public class «this.javaName()» implements java.lang.Runnable
		{
			«EXPAND m2t_transforms::usage::SystemMemberVar FOREACH this.querySystemCalls().providedRole_EntryLevelSystemCall.toSet()»
			«EXPAND UsageScenarioConstructor(a) FOR this»
			
			«EXPAND ScenarioRunner(this) FOR this.scenarioBehaviour_UsageScenario»
			
			public void run() {
				scenarioRunner();
			}
		}
	«ENDFILE»
«ENDDEFINE» 

«DEFINE UsageScenarioConstructor(Allocation a) FOR UsageScenario»
public «this.javaName()»() {
	«EXPAND m2t_transforms::usage::UsageScenarioConstructorContextInit(a) FOR this»
}
«ENDDEFINE»

«DEFINE ScenarioRunner(UsageScenario us) FOR ScenarioBehaviour»
	@org.junit.Test public void scenarioRunner() {
	«PROTECT CSTART '/*' CEND '*/' ID this.id»
		«EXPAND m2t_transforms::sensors::StartResponseTimeMeasurementTM FOR us.entityName.javaString()»
		{
			«EXPAND m2t_transforms::usage::UserActions FOR this.actions_ScenarioBehaviour.typeSelect(Start).get(0)»
		}
		«EXPAND m2t_transforms::sensors::EndResponseTimeMeasurementTM FOR us.entityName.javaString()»
	«ENDPROTECT»
	}
«ENDDEFINE»
