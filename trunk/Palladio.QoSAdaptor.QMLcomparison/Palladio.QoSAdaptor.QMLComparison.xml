<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Palladio.QoSAdaptor.QMLComparison</name>
    </assembly>
    <members>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.IQMLStatConstraint">
            <summary>
            Common interface of all QMLStatConstraints. Used e.g. in 
            QMLAspectConstraint as common interface of all aspects.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.IQMLStatConstraint.Type">
            <summary>
            Getter for the aspect type. Not implemented as property, because
            properties are not allowed in interfaces.
            </summary>
            <returns>The type of implementing aspect. The value is specified in 
            QMLParser.QMLTokenTypes.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint">
            <summary>
            Represents a QML aspect constraint.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLVisitable">
            <summary>
            Interface that should be implemented by all classes that accept an
            IQMLSpecificationVisitor.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLVisitable.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Method to pass a visitor to the visitable class. The implementation
            of the method should call corresponding Visit... method of the 
            given visitor. 
            </summary>
            <param name="visitor">Implemenation of the IQMLSpecificationVisitor 
            interface that implements an operation on QML specification class 
            tree.</param>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.name">
            <summary>
            The name of the aspect constraint
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.statConstraints">
            <summary>
            A list of aspects (IQMLStatConstraint objects)
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLAspectConstraint containing the same information as the AST.
            </summary>
            <param name="aspectConstraint">AST representing a QML aspect 
            constraint.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Implements the IQMLVisitable interface. Calls the 
            VisitQMLSpecification method of the given visitor.
            </summary>
            <param name="visitor">Implemenation of the 
            IQMLSpecificationVisitor interface that implements an operation on 
            the QML specification class tree.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.ToString">
            <summary>
            Returns a new QML aspect constraint string containing all 
            information in this QMLAspectConstraint which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML aspect constraint.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.Name">
            <summary>
            Returns the name (QoS aspect) of this QMLAspectConstraint
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint.StatConstraints">
            <summary>
            Returns the aspects (percentile, mean, variance, frequency) of
            this QMLAspectConstraint.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract">
            <summary>
            Represents a QMLContract
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new QMLContract
            containing the same information as the AST.
            </summary>
            <param name="contract">AST representing a QMLContract.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.#ctor(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Creates an unnamed QMLContract with the given contractExpression.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Implements the IQMLVisitable interface. Calls the 
            VisitQMLSpecification method of the given visitor.
            </summary>
            <param name="visitor">Implemenation of the 
            IQMLSpecificationVisitor interface that implements an operation on 
            the QML specification class tree.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.ToString">
            <summary>
            Returns a new QML contract string containing all information
            in this QMLContract which is compatible to the grammar
            accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML contract specification.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.Equals(System.Object)">
            <summary>
            Defines two QMLContracts to be equal when they have the same name
            and QMLContractExpression with the same names.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.Name">
            <summary>
            Returns the name of this contract.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract.ContractExpression">
            <summary>
            Returns the contract expression belonging to this contract.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression">
            <summary>
            Represents a QML contract expression.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.type">
            <summary>
            The type of this contract expression
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.name">
            <summary>
            The name of the contract expression. Should be the name of the 
            corresponding quality attribute. Else a mapping would be necessary for the
            mismatch search.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.simpleConstraints">
            <summary>
            A list of simple constraints of this expression
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.aspectConstraints">
            <summary>
            A list of aspect constraints of this expression
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLContractExpression containing the same information as the AST.
            </summary>
            <param name="contractExpression">AST representing a QML
            contract expression.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Implements the IQMLVisitable interface. Calls the 
            VisitQMLSpecification method of the given visitor.
            </summary>
            <param name="visitor">Implemenation of the 
            IQMLSpecificationVisitor interface that implements an operation on 
            the QML specification class tree.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.GetAspectConstraint(System.String)">
            <summary>
            If this contract expression contains a aspect constraint with the 
            given name the corresponding QMLAspectConstraint is returned. 
            </summary>
            <param name="name">Name of the seeked aspect constraint.
            </param>
            <returns>Corresponding QMLAspectConstraint or null if no aspect 
            constraint with the given name exists in this contract expression.
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.GetSimpleConstraint(System.String)">
            <summary>
            If this contract expression contains a simple constraint with the 
            given name the corresponding QMLSimpleConstraint is returned. 
            </summary>
            <param name="name">Name of the seeked simple constraint.
            </param>
            <returns>Corresponding QMLSimpleConstraint or null if no simple 
            constraint with the given name exists in this contract expression.
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.ToString">
            <summary>
            Returns a new QML contract expression string containing all 
            information in this QMLContractExpression which is compatible to 
            the grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML contract expression.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.Name">
            <summary>
            The name of this contract expression
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.SimpleConstraints">
            <summary>
            The simple constraints of this contract expression
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression.AspectConstraints">
            <summary>
            The aspect constraints of this contract expression
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType">
            <summary>
            Represents a QML contract type specification.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.name">
            <summary>
            The name of this contract type.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.dimensionDeclarations">
            <summary>
            A list of dimensionDeclarations of this contract type.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new QMLContractType
            containing the same information as the AST.
            </summary>
            <param name="contractType">AST representing a QMLContractType.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.ToString">
            <summary>
            Returns a new QML contract type string containing all information
            in this QMLContractType which is compatible to the grammar
            accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML contract type specification.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.Equals(System.Object)">
            <summary>
            Determines whether this object and the given 
            QMLContractType object have the same value;
            </summary>
            <param name="obj">Object which is asked to equal this object.
            </param>
            <returns>True if this and obj have the name and dimension 
            declarations, else false
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.Name">
            <summary>
            Returns the name of this contract type.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType.DimensionDeclarations">
            <summary>
            Returns a collection of dimension declarations belonging to this 
            contract type.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration">
            <summary>
            Represents a QML dimension declaration.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.name">
            <summary>
            The name of this dimension declaration. For the quality-based 
            interface model this equals a quality subattribute like the delay
            subattribute of the performance attribute.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.dimensionType">
            <summary>
            The dimension type of this dimension declaration.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.unit">
            <summary>
            The unit of this dimension declaration. E.g. msec or mb/msec
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLDimensionDeclaration containing the same information as the AST.
            </summary>
            <param name="dimensionDeclaration">AST representing a 
            QMLDimensionDeclaration.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.ToString">
            <summary>
            Returns a new QML dimension declaration string containing all 
            information in this QMLDimensionDeclaration which is compatible to 
            the grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML dimension declaration.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.Equals(System.Object)">
            <summary>
            Determines whether this object and the given 
            QMLDimensionDeclaration object have the same value;
            </summary>
            <param name="obj">Object which is asked to equal this object.
            </param>
            <returns>True if this and obj have the same name, type and unit, 
            else false
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType">
            <summary>
            Represents a QML dimension type. At the moment only numeric types are
            supported which are saved as a string. 
            TODO: Implement types ENUM_DEF and SET_DEF. Introduce enumeration for 
            	types.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.type">
            <summary>
            The type of this dimension type. In the current implementation only
            NUMERIC is supported. 
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.dimensionOrder">
            <summary>
            The dimension order of this dimension type. In the current 
            implementation only INCREASING and DECREASING are supported.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new QMLDimensionType
            containing the same information as the AST.
            </summary>
            <param name="dimensionType">AST representing a QMLDimensionType.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.ToString">
            <summary>
            Returns a new QML dimension type string containing all information
            in this QMLDimensionType which is compatible to the grammar
            accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML dimension type.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.Equals(System.Object)">
            <summary>
            Determines whether this object and the given QMLDimensionType 
            object have the same value;
            </summary>
            <param name="obj">Object which is asked to equal this object.
            </param>
            <returns>True if this and obj have the same type, else false
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.DimensionType">
            <summary>
            Provides the type of this dimension type.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.Order">
            <summary>
            Returns the dimension order of this dimension type.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.Type">
            <summary>
            Enumeration that defines possible types of a QMLDimensionType.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.Type.ENUMERATION">
            <summary>
            An enumeration of values.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.Type.SET">
            <summary>
            A set of values.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.Type.NUMERIC">
            <summary>
            A numeric value.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.DimensionOrder">
            <summary>
            Defines the order of values of the domain.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.DimensionOrder.NONE">
            <summary>
            NO order is defined for the domain values.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.DimensionOrder.INCREASING">
            <summary>
            Values are ordered increasingly.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType.DimensionOrder.DECREASING">
            <summary>
            Values are ordered decreasingly.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity">
            <summary>
            Represents QMLTokenTypes.ENTITY, QMLTokenTypes.ENTITY_PARM and 
            QMLTokenTypes.ENTITY_RESULT_OF concepts, which are differed by the 
            type attribute.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.type">
            <summary>
            The type of this entity.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.name">
            <summary>
            The name of this entity.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLEntity containing the same information as the AST.
            </summary>
            <param name="entity">AST representing a QML entity.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.ToString">
            <summary>
            Returns a new QML entity string containing all 
            information in this QMLEntity which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML entity.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.Equals(System.Object)">
            <summary>
            Defines two objects to be equal if they are both QMLEntity's and 
            have the same type and name.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.Type">
            <summary>
            The type of this QMLEntity. Types are specified in 
            QMLParser.QMLTokenTypes.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity.Name">
            <summary>
            The name of this QMLEntity.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect">
            <summary>
            Represents a frequency aspect of an aspect constraint.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.type">
            <summary>
            The type of this QMLFrequencyAspect. The value is specified in 
            QMLParser.QMLTokenTypes
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.value">
            <summary>
            The value of this frequency aspect.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.numericOperator">
            <summary>
            The numeric operator of this frequency aspect. Possible values are
            defined as constants in QMLParser.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.percentile">
            <summary>
            The percentile belonging to the value of this frequency aspect.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLFrequencyAspect containing the same information as the AST.
            </summary>
            <param name="frequencyAspect">AST representing a QML frequency 
            aspect.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.ToString">
            <summary>
            Returns a new QML frequency aspect string containing all 
            information in this QMLFrequencyAspect which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML frequency aspect.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect.Type">
            <summary>
            The type of this aspect. The value is specified in 
            QMLParser.QMLTokenTypes.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect">
            <summary>
            Represents a mean aspect of an aspect constraint.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.type">
            <summary>
            The type of this QMLMeanAspect. The value is specified in 
            QMLParser.QMLTokenTypes
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.numericOperator">
            <summary>
            The numeric operator of this mean aspect. Possible values are
            defined as constants in QMLParser.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.value">
            <summary>
            The value of this mean aspect.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLMeanAspect containing the same information as the AST.
            </summary>
            <param name="meanAspect">AST representing a QML mean aspect.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.ToString">
            <summary>
            Returns a new QML mean aspect string containing all 
            information in this QMLMeanAspect which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML mean aspect.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.NumericOperator">
            <summary>
            Returns the numeric operator of this QMLMeanAspect
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.Value">
            <summary>
            Returns the value of this QMLMeanAspect
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect.Type">
            <summary>
            The type of this aspect. The value is specified in 
            QMLParser.QMLTokenTypes.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLNoValidValueException">
            <summary>
            Zusammenfassung für QMLNoValidValueException.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLNoValidValueException.#ctor(System.String)">
            <summary>
            Creates a new instance of this exception with a default
            error message.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect">
            <summary>
            Represents a percentile aspect of an aspect constraint.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.type">
            <summary>
            The type of this QMLPercentileAspect. The value is specified in 
            QMLParser.QMLTokenTypes
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.percentile">
            <summary>
            The percentile of this percentile aspect.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.numericOperator">
            <summary>
            The numeric operator of this percentile aspect. Possible values are
            defined as constants in QMLParser.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.value">
            <summary>
            The value belonging to the percentile of this percentile aspect.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLPercentileAspect containing the same information as the AST.
            </summary>
            <param name="percentileAspect">AST representing a QML percentile 
            aspect.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.ToString">
            <summary>
            Returns a new QML percentile aspect string containing all 
            information in this QMLPercentileAspect which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML percentile aspect.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.Compare(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect)">
            <summary>
            Compares this QMLPercentileAspect to another QMLPercentileAspect.
            Only the percentiles are taken into consideration. The numeric 
            operators and values are not looked at.
            </summary>
            <param name="aspect">A QMLPercentileAspect</param>
            <returns>An int smaller than 0 if this.percentile is smaller than 
            aspect.Percentile. 0 if they are equal and a value greater than 0
            if this.percentile is bigger than aspect.Percentile.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.Percentile">
            <summary>
            Returns the value of the percentile field of this 
            QMLPercentileAspect
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.NumericOperator">
            <summary>
            Returns the numeric operator belonging to this QMLPercentileAspect.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.Value">
            <summary>
            Returns the value belonging to this QMLPercentileAspect.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect.Type">
            <summary>
            The type of this aspect. The value is specified in 
            QMLParser.QMLTokenTypes.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspectComparer">
            <summary>
            Implements an IComparer for QMLPercentileAspects. This is used to sort 
            lists of percentile aspects.
            It is expected that QMLPercentileAspect.Compare() only compares the
            percentiles and not the numeric operators or values.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspectComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two QMLPercentileAspects.
            </summary>
            <param name="aspect1">A QMLPercentileAspect object.</param>
            <param name="aspect2">Another QMLPercentileAspect object.</param>
            <returns>An int smaller than 0 if aspect1 is smaller than 
            aspect2. 0 if they are equal and a value greater than 0
            if aspect1 is bigger than aspect2.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile">
            <summary>
            A QML profile describes QoS requirements for a certain interface.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile.#ctor(antlr.collections.AST,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Constructor that takes an AST and constructs a new QMLProfile 
            containing the same information as the AST.
            </summary>
            <param name="profile">AST representing a QML profile.</param>
            <param name="specification">The QMLSpecification this profile is 
            a part of.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Method from the visitor pattern. The visitor method for this 
            class is called on the given visitor.
            </summary>
            <param name="visitor">Visitor that visits this node.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile.ToString">
            <summary>
            Returns a new QML profile string containing all 
            information in this QMLProfile which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML profile.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile.InterfaceName">
            <summary>
            The interface for which this profile specifies QoS attributes.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile.ProfileExpression">
            <summary>
            The profile expression belonging to this profile.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression">
            <summary>
            Zusammenfassung für QMLProfileExpression.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.type">
            <summary>
            The type of this profile expression. The types are specified in 
            QMLParser.QMLTokenTypes. At the moment only PROFILE_EXP_PROFILE 
            is supported.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.requirementClauses">
            <summary>
            A list of requirement clauses of this profile expression.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.#ctor(antlr.collections.AST,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLProfileExpression containing the same information as the AST.
            </summary>
            <param name="profileExpression">AST representing a QML profile 
            expression.</param>
            /// <param name="specification">The QMLSpecification this profile 
            expression is a part of.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Method from the visitor pattern. The visitor method for this 
            class is called on the given visitor.
            </summary>
            <param name="visitor">Visitor that visits this node.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.ToString">
            <summary>
            Returns a new QML profile eypression string containing all 
            information in this QMLProfileExpression which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML profile expression.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.ExpressionType">
            <summary>
            The type of this QMLProfileExpression.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression.RequirementClauses">
            <summary>
            A list of requirement clauses contained in the profile expression.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause">
            <summary>
            Zusammenfassung für QMLRequirementClause.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.entities">
            <summary>
            Contracts for certain methods
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.contracts">
            <summary>
            Contracts directly associated with an interface
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.#ctor(antlr.collections.AST,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLRequirementClause containing the same information as the AST.
            </summary>
            <param name="requirementClause">AST representing a QML requirement 
            clause.</param>
            /// <param name="specification">The QMLSpecification this 
            requirement clause is defined in.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.CreateEntities(antlr.collections.AST)">
            <summary>
            Creates new QMLEntities for the entrys of the given entity list.
            </summary>
            <param name="entityList">List of qml entities.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.CreateContracts(antlr.collections.AST,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Gets named contracts from the given specification and creates new
            unnamed contracts for unnamed contract expressions in profile
            expression.
            </summary>
            <param name="contracts"></param>
            <param name="specification"></param>
            <returns></returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Method from the visitor pattern. The visitor method for this 
            class is called on the given visitor.
            </summary>
            <param name="visitor">Visitor that visits this node.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.hasEntity(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity)">
            <summary>
            Checks, if this QMLRequirementClause describes the given entity.
            </summary>
            <param name="entity">A QMLEntity.</param>
            <returns>True, if the requirement clause contains the given entity.
            Else false.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.ToString">
            <summary>
            Returns a new QML requirement clause string containing all 
            information in this QMLRequirementClause which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML requirement clause.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.GetContract(System.String)">
            <summary>
            If this requirement clause contains a contract with the given name, 
            the corresponding QMLContract is returned. 
            </summary>
            <param name="contractName">Name of the seeked contract.</param>
            <returns>Corresponding QMLContract or null if no contract with the
            given name exists in this requirement clause.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.Entities">
            <summary>
            A list of all entities describes by this requirement clause.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause.Contracts">
            <summary>
            A list of contracts described in this requirement clause.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint">
            <summary>
            Represents a QML simple constraint.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.name">
            <summary>
            The name of this simple constraint.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.numericOperator">
            <summary>
            The numeric operator of this simple constraint. Values of 
            numericOperator are defined as constants in QMLParser.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.valueLiteral">
            <summary>
            The literal of this simple constraint
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.unit">
            <summary>
            The unit of this simple constraint. The unit is null when no 
            unit is specified. There is no default value.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLSimpleConstraint containing the same information as the AST.
            </summary>
            <param name="simpleConstraint">AST representing a QML simple 
            constraint.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Implements the IQMLVisitable interface. Calls the 
            VisitQMLSpecification method of the given visitor.
            </summary>
            <param name="visitor">Implemenation of the 
            IQMLSpecificationVisitor interface that implements an operation on 
            the QML specification class tree.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.ToString">
            <summary>
            Returns a new QML simple constraint string containing all 
            information in this QMLSimpleConstraint which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML simple constraint.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.Name">
            <summary>
            Returns the name of this QMLSimpleConstraint
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.NumericOperator">
            <summary>
            Returns the numeric operator of this QMLSimpleContraint.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint.ValueLiteral">
            <summary>
            Returns the value of this QMLSimpleConstraint
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification">
            <summary>
            Represents a QML specification.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new QMLSpecification
            containing the same information as the AST.
            </summary>
            <param name="specification">AST representing a QML specification.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.Accept(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor)">
            <summary>
            Implements the IQMLVisitable interface. Calls the 
            VisitQMLSpecification method of the given visitor.
            </summary>
            <param name="visitor">Implemenation of the 
            IQMLSpecificationVisitor interface that implements an operation on 
            the QML specification class tree.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.GetContract(System.String)">
            <summary>
            If this specification contains a contract with the given name the
            corresponding QMLContract is returned. 
            </summary>
            <param name="contractName">Name of the seeked contract.</param>
            <returns>Corresponding QMLContract or null if no contract with the
            given name exists in this specification.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.GetProfile(System.String)">
            <summary>
            If this specification contains a profile with the given interface 
            name the corresponding QMLProfile is returned. Else null is 
            returned.
            </summary>
            <param name="interfaceName">Name of the seeked profile.</param>
            <returns>Corresponding QMLProfile or null if no contract with the
            given name exists in this specification.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.GetContractType(System.String)">
            <summary>
            If this specification contains a contract type with the given name 
            the corresponding QMLContractType is returned. 
            </summary>
            <param name="name">Name of the seeked contract type.
            </param>
            <returns>Corresponding QMLContractType or null if no contract type 
            with the given name exists in this specification.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.ToString">
            <summary>
            Returns a new QML specification string containing all information
            in this QMLSpecification which is compatible to the grammar
            accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML specification.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification.Profiles">
            <summary>
            Provides a collection of the profiles of this specification. 
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecificationConstructionException">
            <summary>
            Zusammenfassung für QMLSpecificationConstructionException.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecificationConstructionException.#ctor(System.String)">
            <summary>
            Creates a new instance of this exception with a default
            error message.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit">
            <summary>
            Represents a QMLUnit.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit.unitString">
            <summary>
            The string representing this QMLUnit.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new QMLUnit
            containing the same information as the AST.
            </summary>
            <param name="unit">AST representing a QMLUnit.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit.ToString">
            <summary>
            Returns a new QML unit string containing all information
            in this QMLUnit which is compatible to the grammar
            accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML unit.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit.Equals(System.Object)">
            <summary>
            Determines whether this object and the given QMLUnit object have 
            the same value;
            </summary>
            <param name="obj">Object which is asked to equal this object.
            </param>
            <returns>True if this and obj have the same unitString, else false
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral">
            <summary>
            Represents a value literal.
            
            TODO: Use polymorphy instead of different types in this class?
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.type">
            <summary>
            The type of this value literal. The type value is 
            specified in QMLParser.QMLTokenTypes
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new QMLValueLiteral
            containing the same information as the AST.
            </summary>
            <param name="valueLiteral">AST representing a QML value literal.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.ToString">
            <summary>
            Returns a new QML value literal string containing all information
            in this QMLValueLiteral which is compatible to the grammar
            accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML value literal.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.Equals(System.Object)">
            <summary>
            Tests if the given object equals this QMLValueLiteral.
            </summary>
            <param name="obj">Object to test.</param>
            <returns>True if the given object is a QMLValueLiteral of the same 
            type as this QMLValueLiteral and has the same value. Else false.
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.GetHashCode">
            <summary>
            Overrides GetHashCode. This is necessary, because Equals is 
            overridden.
            </summary>
            <returns>The hashcode of this object.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.CompareTo(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral)">
            <summary>
            Compares the given QMLValueLiteral to this QMLValueLiteral. Both
            QMLLiterals need to be of the same type.
            </summary>
            <param name="value">A QMLValueLiteral.</param>
            <returns>Integer smaller than 0, if this QMLLiteral is smaller than
            the given QMLLiteral. 0, if both are equal. Integer bigger than 0, 
            if this QMLLiteral is bigger than the given QMLLiteral.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.Type">
            <summary>
            The type of this QMLValueLiteral. The values are specified in 
            QMLParser.QMLTokenTypes.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.NumberValue">
            <summary>
            The number value of this QMLValueLiteral. Only assigned, if 
            Type == QMLTokenTypes.NUMBER
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.NameValue">
            <summary>
            The name value of this QMLValueLiteral. Only assigned, if 
            Type == QMLTokenTypes.NAME
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral.NameListValue">
            <summary>
            The name list value of this QMLValueLiteral. Only assigned, if 
            Type == QMLTokenTypes.NAME_LIST
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect">
            <summary>
            Represents a variance aspect of an aspect constraint.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect.type">
            <summary>
            The type of this variance aspect. The value is specified in 
            QMLParser.QMLTokenTypes
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect.numericOperator">
            <summary>
            The numeric operator of this variance aspect. Possible values are
            defined as constants in QMLParser.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect.value">
            <summary>
            The value of this variance aspect. 
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect.#ctor(antlr.collections.AST)">
            <summary>
            Constructor that takes an AST and constructs a new 
            QMLVarianceAspect containing the same information as the AST.
            </summary>
            <param name="varianceAspect">AST representing a QML variance 
            aspect.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect.ToString">
            <summary>
            Returns a new QML variance aspect string containing all 
            information in this QMLVarianceAspect which is compatible to the 
            grammar accepted by the QMLParser by Lars Karg.
            </summary>
            <returns>QML variance aspect.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect.Type">
            <summary>
            The type of this aspect. The value is specified in 
            QMLParser.QMLTokenTypes.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.AspectConstraintMismatchSearchPercentilesUpperBorderStrategy">
            <summary>
            IAspectConstraintMismatchSearchStrategy that only considers percentile
            aspect. These are interpreted as upper border values. For further 
            interpretations see diploma thesis mentioned in the info region.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IAspectConstraintMismatchSearchStrategy">
            <summary>
            Interface for strategies to find mismatches in aspect constraints.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IAspectConstraintMismatchSearchStrategy.FindAspectConstraintMismatches(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Searches for mismatches between required and provided aspect
            constraints.
            </summary>
            <param name="requiredConstraint">QMLAspectConstraint of the 
            required interface.</param>
            <param name="providedConstraint">QMLAspectConstraint of the 
            required interface.</param>
            <returns>A string that describes details about the found 
            mismatches.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.AspectConstraintMismatchSearchPercentilesUpperBorderStrategy.FindAspectConstraintMismatches(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Searches for mismatches between required and provided aspect
            constraints.
            </summary>
            <param name="requiredConstraint">QMLAspectConstraint of the 
            required interface.</param>
            <param name="providedConstraint">QMLAspectConstraint of the 
            required interface.</param>
            <returns>A string that describes details about the found 
            mismatches.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.AspectConstraintMismatchSearchPercentilesUpperBorderStrategy.FindPercentileMismatches(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Searches for mismatches between required and provided percentile
            definitions.
            </summary>
            <param name="providedPercentiles">ArrayList of 
            QMLPercentileAspects of the provided interface.</param>
            <param name="requiredPercentiles">ArrayList of 
            QMLPercentileAspects of the required interface.</param>
            <returns>A string that describes details about the found 
            mismatches or string.Empty, if at least one of the lists is empty.
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.AspectConstraintMismatchSearchPercentilesUpperBorderStrategy.MatchLessThanPercentiles(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Checks if the function described by the percentiles in 
            providedPercentiles matches the function described by the 
            percentiles in requiredPercentiles. 
            It is assumed that all percentiles have the numeric operator 
            QMLTokenTypes.NUMOP_LTHAN and the lists are sorted by
            percentiles starting with the lowest percentile.
            </summary>
            <param name="providedPercentiles">List of percentiles defined for the
            provided interface.</param>
            <param name="requiredPercentiles">List of percentiles defined for 
            the required interface.</param>
            <returns>string.Empty if thisPercentiles matches requiredPercentiles.
            Else string that provides further details abaout the mismatch.
            </returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.AspectConstraintMismatchSearchPercentilesUpperBorderStrategy.GetSharedNumericOperator(System.Collections.IList,System.Collections.IList)">
            <summary>
            Tries to find and return a shared numeric operator of the given 
            lists. The lists are expected to contain QMLPercentileAspect 
            objects that all have the same numeric operator. If this is not the
            case, -1 is returned. 
            </summary>
            <param name="percentiles1">A list of QMLPercentileAspects.</param>
            <param name="percentiles2">A second list of QMLPercentileAspects.
            </param>
            <returns>The shared numeric operator or -1 if the list do not 
            only contain QMLPercentileAspects or different numeric operators
            are used in the different QMLPercentileAspects. -2 is returned
            if both lists are empty.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor">
            <summary>
            Interface that has to be implemented by all visitors that operate on 
            the QML specification class tree. For every class of the tree this 
            interface provides a method to be called by the accept method of that
            class.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLAspectConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Visit method for an QMLAspectConstraint.
            </summary>
            <param name="aspectConstraint">A QMLAspectConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLContract(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract)">
            <summary>
            Visit method for an QMLContract.
            </summary>
            <param name="contract">A QMLContract whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLContractExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Visit method for an QMLContractExpression.
            </summary>
            <param name="contractExpression">A QMLContractExpression whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLContractType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType)">
            <summary>
            Visit method for an QMLContractType.
            </summary>
            <param name="contractType">A QMLContractType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLDimensionDeclaration(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration)">
            <summary>
            Visit method for an QMLDimensionDeclaration.
            </summary>
            <param name="dimensionDeclaration">A QMLDimensionDeclaration whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLDimensionType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType)">
            <summary>
            Visit method for an QMLDimensionType.
            </summary>
            <param name="dimensionType">A QMLDimensionType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLEntity(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity)">
            <summary>
            Visit method for an QMLEntity.
            </summary>
            <param name="entity">A QMLEntity whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLFrequencyAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect)">
            <summary>
            Visit method for an QMLFrequencyAspect.
            </summary>
            <param name="frequencyAspect">A QMLFrequencyAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLMeanAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect)">
            <summary>
            Visit method for an QMLMeanAspect.
            </summary>
            <param name="meanAspect">A QMLMeanAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLPercentileAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect)">
            <summary>
            Visit method for an QMLPercentileAspect.
            </summary>
            <param name="percentileAspect">A QMLPercentileAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLProfile(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile)">
            <summary>
            Visit method for an QMLProfile.
            </summary>
            <param name="profile">A QMLProfile whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLProfileExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression)">
            <summary>
            Visit method for an QMLProfileExpression.
            </summary>
            <param name="profileExpression">A QMLProfileExpression whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLRequirementClause(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Visit method for an QMLRequirementClause.
            </summary>
            <param name="requirementClause">A QMLRequirementClause whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLSimpleConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint)">
            <summary>
            Visit method for an QMLSimpleConstraint.
            </summary>
            <param name="simpleConstraint">A QMLSimpleConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLSpecification(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Visit method for an QMLSpecification.
            </summary>
            <param name="specification">A QMLSpecification whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLUnit(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit)">
            <summary>
            Visit method for an QMLUnit.
            </summary>
            <param name="unit">A QMLUnit whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLValueLiteral(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral)">
            <summary>
            Visit method for an QMLValueLiteral.
            </summary>
            <param name="valueLiteral">A QMLValueLiteral whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.IQMLSpecificationVisitor.VisitQMLVarianceAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect)">
            <summary>
            Visit method for an QMLVarianceAspect.
            </summary>
            <param name="varianceAspect">A QMLVarianceAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLCompleteCopingException">
            <summary>
            Exception that is thrown during the complete coping check, when an 
            element that is requested by the 
            QMLRequiredSpecificationCompleteCopingVisitor can not be found in the
            provided specification by the 
            QMLProvidedSpecificationCompleteCopingVisitor.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLCompleteCopingException.#ctor(System.String)">
            <summary>
            Constructor that defines a default message and adds the given 
            message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLCompleteCopingUnknownProfileException">
            <summary>
            Thrown by a QMLProvidedSpecificationCompleteCopingVisitor, if the 
            QMLRequiredSpecificationCompleteCopingVisitor trys to push it to 
            a profile that is not existent in the provided specification.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLCompleteCopingUnknownProfileException.#ctor">
            <summary>
            Constructor that calls the parent constructor with an empty 
            message.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLMismatchSearchException">
            <summary>
            Exception thrown if an error occured during a mismatch search.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLMismatchSearchException.#ctor(System.String)">
            <summary>
            Constructor that defines a default message and adds the given 
            message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor">
            <summary>
            Visits the provided specification during the check for complete coping. 
            Is lead through the tree by a 
            QMLRequiredSpecificationCompleteCopingVisitor.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.visitedElements">
            <summary>
            List of visited elements of this visitor. Used to save already 
            visited nodes to know the current node and to provide a 
            functionality to go up in the tree to formerly visited nodes.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.#ctor">
            <summary>
            Constructs a new QMLProvidedSpecificationCompleteCopingVisitor and
            initialises the list of visited elements.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLAspectConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Visit method for an QMLAspectConstraint.
            </summary>
            <param name="aspectConstraint">A QMLAspectConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLContract(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract)">
            <summary>
            Visit method for an QMLContract.
            </summary>
            <param name="contract">A QMLContract whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLContractExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Visit method for an QMLContractExpression.
            </summary>
            <param name="contractExpression">A QMLContractExpression whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLContractType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType)">
            <summary>
            Visit method for an QMLContractType.
            </summary>
            <param name="contractType">A QMLContractType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLDimensionDeclaration(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration)">
            <summary>
            Visit method for an QMLDimensionDeclaration.
            </summary>
            <param name="dimensionDeclaration">A QMLDimensionDeclaration whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLDimensionType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType)">
            <summary>
            Visit method for an QMLDimensionType.
            </summary>
            <param name="dimensionType">A QMLDimensionType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLEntity(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity)">
            <summary>
            Visit method for an QMLEntity.
            </summary>
            <param name="entity">A QMLEntity whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLFrequencyAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect)">
            <summary>
            Visit method for an QMLFrequencyAspect.
            </summary>
            <param name="frequencyAspect">A QMLFrequencyAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLMeanAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect)">
            <summary>
            Visit method for an QMLMeanAspect.
            </summary>
            <param name="meanAspect">A QMLMeanAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLPercentileAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect)">
            <summary>
            Visit method for an QMLPercentileAspect.
            </summary>
            <param name="percentileAspect">A QMLPercentileAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLProfile(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile)">
            <summary>
            Visit method for an QMLProfile.
            </summary>
            <param name="profile">A QMLProfile whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLProfileExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression)">
            <summary>
            Visit method for an QMLProfileExpression.
            </summary>
            <param name="profileExpression">A QMLProfileExpression whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLRequirementClause(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Visit method for an QMLRequirementClause.
            </summary>
            <param name="requirementClause">A QMLRequirementClause whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLSimpleConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint)">
            <summary>
            Visit method for an QMLSimpleConstraint.
            </summary>
            <param name="simpleConstraint">A QMLSimpleConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLSpecification(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Visit method for an QMLSpecification.
            </summary>
            <param name="specification">A QMLSpecification whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLUnit(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit)">
            <summary>
            Visit method for an QMLUnit.
            </summary>
            <param name="unit">A QMLUnit whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLValueLiteral(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral)">
            <summary>
            Visit method for an QMLValueLiteral.
            </summary>
            <param name="valueLiteral">A QMLValueLiteral whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.VisitQMLVarianceAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect)">
            <summary>
            Visit method for an QMLVarianceAspect.
            </summary>
            <param name="varianceAspect">A QMLVarianceAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.GoToProfile(System.String)">
            <summary>
            Moves the visitor to the profile with the given interface name. A
            QMLCompleteCopingException is thrown, when there is no profile 
            with the given name.
            </summary>
            <param name="interfaceName">The interface name of the profile to 
            move to.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.GoToProfileExpression">
            <summary>
            Moves the visitor to the ProfileExpression of the current node 
            which has to be a QMLProfile.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.GoToContract(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract)">
            <summary>
            Pushs the visitor to the given contract.
            </summary>
            <param name="contract">The contract that shall be visited by the 
            visitor.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.GoToContractExpression">
            <summary>
            Moves the visitor to the ContractExpression of the current node 
            which has to be a QMLContract.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor.Current">
            <summary>
            Provides the current profile expression when a profile is visited.
            When there is no current profile expression null is returned.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor">
            <summary>
            Visits the provided specification during the mismatch search. Is lead
            through the tree by a QMLRequiredSpecificationMismatchSearchVisitor.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.visitedElements">
            <summary>
            List of visited elements of this visitor. Used to save already 
            visited nodes to know the current node and to provide a 
            functionality to go up in the tree to formerly visited nodes.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.#ctor">
            <summary>
            Constructs a new QMLProvidedSpecificationMismatchSearchVisitor and
            initialises the list of visited elements.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLAspectConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Visit method for an QMLAspectConstraint.
            </summary>
            <param name="aspectConstraint">A QMLAspectConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLContract(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract)">
            <summary>
            Visit method for an QMLContract.
            </summary>
            <param name="contract">A QMLContract whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLContractExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Visit method for an QMLContractExpression.
            </summary>
            <param name="contractExpression">A QMLContractExpression whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLContractType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType)">
            <summary>
            Visit method for an QMLContractType.
            </summary>
            <param name="contractType">A QMLContractType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLDimensionDeclaration(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration)">
            <summary>
            Visit method for an QMLDimensionDeclaration.
            </summary>
            <param name="dimensionDeclaration">A QMLDimensionDeclaration whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLDimensionType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType)">
            <summary>
            Visit method for an QMLDimensionType.
            </summary>
            <param name="dimensionType">A QMLDimensionType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLEntity(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity)">
            <summary>
            Visit method for an QMLEntity.
            </summary>
            <param name="entity">A QMLEntity whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLFrequencyAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect)">
            <summary>
            Visit method for an QMLFrequencyAspect.
            </summary>
            <param name="frequencyAspect">A QMLFrequencyAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLMeanAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect)">
            <summary>
            Visit method for an QMLMeanAspect.
            </summary>
            <param name="meanAspect">A QMLMeanAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLPercentileAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect)">
            <summary>
            Visit method for an QMLPercentileAspect.
            </summary>
            <param name="percentileAspect">A QMLPercentileAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLProfile(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile)">
            <summary>
            Visit method for an QMLProfile.
            </summary>
            <param name="profile">A QMLProfile whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLProfileExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression)">
            <summary>
            Visit method for an QMLProfileExpression.
            </summary>
            <param name="profileExpression">A QMLProfileExpression whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLRequirementClause(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Visit method for an QMLRequirementClause.
            </summary>
            <param name="requirementClause">A QMLRequirementClause whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLSimpleConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint)">
            <summary>
            Visit method for an QMLSimpleConstraint.
            </summary>
            <param name="simpleConstraint">A QMLSimpleConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLSpecification(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Visit method for an QMLSpecification.
            </summary>
            <param name="specification">A QMLSpecification whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLUnit(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit)">
            <summary>
            Visit method for an QMLUnit.
            </summary>
            <param name="unit">A QMLUnit whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLValueLiteral(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral)">
            <summary>
            Visit method for an QMLValueLiteral.
            </summary>
            <param name="valueLiteral">A QMLValueLiteral whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.VisitQMLVarianceAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect)">
            <summary>
            Visit method for an QMLVarianceAspect.
            </summary>
            <param name="varianceAspect">A QMLVarianceAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor.Current">
            <summary>
            Provides the current profile expression when a profile is visited.
            When there is no current profile expression null is returned.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor">
            <summary>
            Checks the complete coping of a QMLSpecification interpreted as 
            required specification and visited by an object of this class and a
            provided specification visited by an 
            QMLProvidedSpecificationCompleteCopingVisitor.
            After the check which is started by first calling the Accept
            method of the provided specification with the providedVisitor and then 
            calling the Accept method of the required specification with an object
            of this class. 
            When the provided interfaces does not cover the required interface a
            QMLCompleteCopingException will be thrown. The message of the 
            exception provides further information about the incorrect part of the 
            specification.
            Some of the methods of the IQMLSpecificationVisitor interface are not 
            implemented, because the corresponding classes are not needed for the 
            mismatch search. A NotImplementedException is thrown instead.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.providedVisitor">
            <summary>
            Visitor of the corresponding provided specification.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.copingErrors">
            <summary>
            Lists the errors that occurred during the coping check.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.currentProfile">
            <summary>
            Contains the currently visited profile. Used to provide the name
            of the profile in error messages.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.currentEntity">
            <summary>
            Contains the currently visited entity. Used to provide the name
            of the entity in error messages.
            </summary>		
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.currentContract">
            <summary>
            Contains the currently visited contract. Used to provide the name
            of the contract in error messages.
            </summary>		
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.#ctor(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationCompleteCopingVisitor)">
            <summary>
            Constructs a new QMLRequiredSpecificationCompleteCopingVisitor. To
            start the complete coping check the provided specification has to 
            be visited by the given providedVisitor. After that this visitor 
            has to be given to the Accept method of the corresponding 
            QMLSpecification. 
            </summary>
            <param name="providedVisitor">The corresponding visitor of the 
            provided specification.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLAspectConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Visit method for an QMLAspectConstraint.
            </summary>
            <param name="aspectConstraint">A QMLAspectConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLContract(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract)">
            <summary>
            Visit method for an QMLContract.
            </summary>
            <param name="contract">A QMLContract whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLContractExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Visit method for an QMLContractExpression.
            </summary>
            <param name="contractExpression">A QMLContractExpression whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLContractType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType)">
            <summary>
            Visit method for an QMLContractType.
            </summary>
            <param name="contractType">A QMLContractType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLDimensionDeclaration(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration)">
            <summary>
            Visit method for an QMLDimensionDeclaration.
            </summary>
            <param name="dimensionDeclaration">A QMLDimensionDeclaration whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLDimensionType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType)">
            <summary>
            Visit method for an QMLDimensionType.
            </summary>
            <param name="dimensionType">A QMLDimensionType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLEntity(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity)">
            <summary>
            Visit method for an QMLEntity.
            </summary>
            <param name="entity">A QMLEntity whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLFrequencyAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect)">
            <summary>
            Visit method for an QMLFrequencyAspect.
            </summary>
            <param name="frequencyAspect">A QMLFrequencyAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLMeanAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect)">
            <summary>
            Visit method for an QMLMeanAspect.
            </summary>
            <param name="meanAspect">A QMLMeanAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLPercentileAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect)">
            <summary>
            Visit method for an QMLPercentileAspect.
            </summary>
            <param name="percentileAspect">A QMLPercentileAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLProfile(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile)">
            <summary>
            Visit method for an QMLProfile.
            </summary>
            <param name="profile">A QMLProfile whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLProfileExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression)">
            <summary>
            Visit method for an QMLProfileExpression.
            </summary>
            <param name="profileExpression">A QMLProfileExpression whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLRequirementClause(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Visit method for an QMLRequirementClause.
            </summary>
            <param name="requirementClause">A QMLRequirementClause whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLSimpleConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint)">
            <summary>
            Visit method for an QMLSimpleConstraint.
            </summary>
            <param name="simpleConstraint">A QMLSimpleConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLSpecification(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Visit method for an QMLSpecification.
            </summary>
            <param name="specification">A QMLSpecification whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLUnit(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit)">
            <summary>
            Visit method for an QMLUnit.
            </summary>
            <param name="unit">A QMLUnit whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLValueLiteral(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral)">
            <summary>
            Visit method for an QMLValueLiteral.
            </summary>
            <param name="valueLiteral">A QMLValueLiteral whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.VisitQMLVarianceAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect)">
            <summary>
            Visit method for an QMLVarianceAspect.
            </summary>
            <param name="varianceAspect">A QMLVarianceAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.CheckRequirementCoping(System.Collections.IList,System.Collections.IList)">
            <summary>
            Checks if all given requiredRequirementClauses are covered by 
            the given providedRequirementClauses.
            </summary>
            <param name="requiredRequirementClauses">Requirement clauses which 
            shall be covered by the providedRequirementClauses.</param>
            <param name="providedRequirementClauses">Requirement clauses of the
            provided interface.</param>
            <returns>True, if all given requirement clauses are covered.
            Else false.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.CheckForUncoveredContracts(System.Collections.IList,System.Collections.IList)">
            <summary>
            Compares two contract list. Throws an exception, if not all the 
            contracts in requiredContracts are also contained in provided 
            contracts.
            </summary>
            <param name="providedContracts">List of QMLContracts of the 
            provided interfacer</param>
            <param name="requiredContracts">List of QMLContracts of the
            required interface.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.CheckSimpleConstraints(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Checks the given contract expression for uncovered 
            QMLSimpleConstraints.
            </summary>
            <param name="requiredContractExpression">QMLContractExpression of
            the required interface.</param>
            <param name="providedContractExpression">QMLContractExpression of
            the provided interface.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.CheckAspectConstraints(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Checks the given contract expression for uncovered 
            QMLAspectConstraints.
            </summary>
            <param name="requiredContractExpression">QMLContractExpression of
            the required interface.</param>
            <param name="providedContractExpression">QMLContractExpression of
            the provided interface.</param>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.CopingErrors">
            <summary>
            A list of strings that contain error messages for coping errors.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationCompleteCopingVisitor.CopingErrorMessage">
            <summary>
            Returns a list of all errors as one string.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor">
            <summary>
            Searches for mismatches between a QMLSpecification interpreted as 
            required specification and visited by an object of this class and a
            provided specification visited by an 
            QMLProvidedSpecificationMismatchSearchVisitor.
            After the mismatch search which is started by first calling the Accept
            method of the provided specification with the providedVisitor and then 
            calling the Accept method of the required specification with an object
            of this class, the found mismatches can be requested using the 
            Mismatches property.
            Some of the methods of the IQMLSpecificationVisitor interface are not 
            implemented, because the corresponding classes are not needed for the 
            mismatch search. A NotImplementedException is thrown instead.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.providedVisitor">
            <summary>
            Visitor of the provided specification.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.mismatches">
            <summary>
            A list of found mismatches.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.currentInterfaceName">
            <summary>
            The name of the currently visited interface. Null if no interface 
            is currently visited.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.currentEntityName">
            <summary>
            The name of the currently visited interface. Null if no entity is
            currently visited.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.currentMismatchAttribute">
            <summary>
            The name of the current mismatch attribute. Null if there is no 
            current mismatch attribute.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.specification">
            <summary>
            The visited QML specification;
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.currentContract">
            <summary>
            The name of the currently visited contract.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.#ctor(Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLProvidedSpecificationMismatchSearchVisitor)">
            <summary>
            Constructs a new QMLRequiredSpecificationMismatchSearchVisitor. To
            start the mismatch search the provided specification has to be 
            visited by the given providedVisitor. After that this visitor has 
            to be given to the Accept method of the corresponding 
            QMLSpecification. 
            </summary>
            <param name="providedVisitor">The corresponding visitor of the 
            provided specification.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLAspectConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Visit method for an QMLAspectConstraint.
            </summary>
            <param name="aspectConstraint">A QMLAspectConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLContract(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContract)">
            <summary>
            Visit method for an QMLContract.
            </summary>
            <param name="contract">A QMLContract whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLContractExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractExpression)">
            <summary>
            Visit method for an QMLContractExpression.
            </summary>
            <param name="contractExpression">A QMLContractExpression whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLContractType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLContractType)">
            <summary>
            Visit method for an QMLContractType.
            </summary>
            <param name="contractType">A QMLContractType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLDimensionDeclaration(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionDeclaration)">
            <summary>
            Visit method for an QMLDimensionDeclaration.
            </summary>
            <param name="dimensionDeclaration">A QMLDimensionDeclaration whose 
            Accept method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLDimensionType(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLDimensionType)">
            <summary>
            Visit method for an QMLDimensionType.
            </summary>
            <param name="dimensionType">A QMLDimensionType whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLEntity(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLEntity)">
            <summary>
            Visit method for an QMLEntity.
            </summary>
            <param name="entity">A QMLEntity whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLFrequencyAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLFrequencyAspect)">
            <summary>
            Visit method for an QMLFrequencyAspect.
            </summary>
            <param name="frequencyAspect">A QMLFrequencyAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLMeanAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect)">
            <summary>
            Visit method for an QMLMeanAspect.
            </summary>
            <param name="meanAspect">A QMLMeanAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLPercentileAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLPercentileAspect)">
            <summary>
            Visit method for an QMLPercentileAspect.
            </summary>
            <param name="percentileAspect">A QMLPercentileAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLProfile(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfile)">
            <summary>
            Visit method for an QMLProfile.
            </summary>
            <param name="profile">A QMLProfile whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLProfileExpression(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLProfileExpression)">
            <summary>
            Visit method for an QMLProfileExpression.
            </summary>
            <param name="profileExpression">A QMLProfileExpression whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLRequirementClause(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Visit method for an QMLRequirementClause.
            </summary>
            <param name="requirementClause">A QMLRequirementClause whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLSimpleConstraint(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint)">
            <summary>
            Visit method for an QMLSimpleConstraint.
            </summary>
            <param name="simpleConstraint">A QMLSimpleConstraint whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLSpecification(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSpecification)">
            <summary>
            Visit method for an QMLSpecification.
            </summary>
            <param name="specification">A QMLSpecification whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLUnit(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLUnit)">
            <summary>
            Visit method for an QMLUnit.
            </summary>
            <param name="unit">A QMLUnit whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLValueLiteral(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLValueLiteral)">
            <summary>
            Visit method for an QMLValueLiteral.
            </summary>
            <param name="valueLiteral">A QMLValueLiteral whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.VisitQMLVarianceAspect(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLVarianceAspect)">
            <summary>
            Visit method for an QMLVarianceAspect.
            </summary>
            <param name="varianceAspect">A QMLVarianceAspect whose Accept 
            method has been called.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.FindInterfaceRelatedClauseMismatches(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Searches for interface related mismatches for the given
            requirement clause.
            </summary>
            <param name="requiredClause">QMLRequirementClause of the required
            interface.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.FindEntityRelatedClauseMismatches(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLRequirementClause)">
            <summary>
            Searches for entity related mismatches for the given
            requirement clause.
            </summary>
            <param name="requiredClause">QMLRequirementClause of the required
            interface.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.FindSimpleConstraintContractExpressionMismatches(System.Collections.ICollection,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLSimpleConstraint)">
            <summary>
            Checks if the given QMLSimpleConstraint is matched by one of the
            simple constraints defined in the given providedConstraints 
            collection.
            </summary>
            <param name="providedConstraints">List of QMLSimpleConstraints of
            the provided specification.</param>
            <param name="requiredConstraint">QMLSimpleConstraint defined in 
            the required specification.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.FindAspectConstraintContractExpressionMismatches(System.Collections.ICollection,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLAspectConstraint)">
            <summary>
            Checks if the given QMLAspectConstraint is matched by one of the
            aspect constraints defined in the given providedConstraints 
            collection.
            </summary>
            <param name="providedConstraints">List of QMLSimpleConstraints of
            the provided specification.</param>
            <param name="requiredConstraint">QMLAspectConstraint defined in 
            the required specification.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.MeanAspectMatch(Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect,Palladio.QoSAdaptor.QMLComparison.QmlSpecification.QMLMeanAspect)">
            <summary>
            Checks if this QMLMeanAspect matches the given aspect.
            I.e. is better or equal to the given aspect. 
            As part of a mismatch search this aspect should be part of the
            provided specification while the given aspect should be part of the
            required specification.
            </summary>
            <param name="requiredAspect">QMLMeanAspect that is part of the
            required specification.</param>
            <param name="providedAspect">QMLMeanAspect that is part of the
            provided specification.</param>
            <returns>True if this aspect matches the given aspect, 
            else false.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QmlSpecificationVisitors.QMLRequiredSpecificationMismatchSearchVisitor.Mismatches">
            <summary>
            Contains the found mismatches after a mismatch search.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.IQMLComparator">
            <summary>
            Interface provided by the Palladio.QoSAdaptor.QMLComparision component.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.IQMLComparator.CreateQMLSpecification(System.IO.TextReader)">
            <summary>
            Creates a QMLSpecification from the textual QML specification given
            in form of a textReader.
            </summary>
            <param name="textReader">TextReader containing a textual 
            representation of a QML specification.</param>
            <returns></returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QMLComparator">
            <summary>
            Compares QML specifications in order to find mismatches.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLComparator.#ctor">
            <summary>
            Standard constructor.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLComparator.CheckCompleteCoping(Palladio.QoSAdaptor.Interfaces.IInterfaceModelSpecification,Palladio.QoSAdaptor.Interfaces.IInterfaceModelSpecification)">
            <summary>
            Checks if the given provided specification covers the same 
            interfaces and contracts as the given required specification.
            If this is not the case an IncompleteInterfaceCopingException is 
            thrown.
            </summary>
            <param name="requiredSpecification">QML specification of the 
            required interface.</param>
            <param name="providedSpecification">QML specification of the 
            provided interface.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLComparator.FindMismatches(Palladio.QoSAdaptor.Interfaces.IInterfaceModelSpecification,Palladio.QoSAdaptor.Interfaces.IInterfaceModelSpecification)">
            <summary>
            Searches for mismatches in the two given QML specifications. 
            CheckCompleteCoping has to be called before.
            </summary>
            <param name="requiredSpecification">TextReader representing the specification 
            for the required interface.</param>
            <param name="providedSpecification">TextReader representing the specification 
            for the provided interface.</param>
            <returns>A list of QMLMismatch objects.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLComparator.Parse(System.IO.TextReader)">
            <summary>
            Parses the given QML specification, builds an internal model of the
            specification and returns its string representation.
            Can e.g. be used for debugging of the parser. 
            </summary>
            <param name="specificationReader">A TextReader representing a QML
            specification.</param>
            <returns>The string representation of the internal model of the
            QML specification.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLComparator.CreateQMLSpecification(System.IO.TextReader)">
            <summary>
            Creates a QMLSpecification from the textual QML specification given
            in form of a textReader.
            </summary>
            <param name="textReader">TextReader containing a textual 
            representation of a QML specification.</param>
            <returns></returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QMLMismatch">
            <summary>
            Represents a mismatch that was found in the comparison of two 
            QMLSpecification's. A mismatch object holds the interface and the
            entity for which the mismatch occured and the QoS aspect that 
            mismatched (e.g Performance or Reliability).
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.interfaceName">
            <summary>
            The interface for which a mismatch occurred.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.entity">
            <summary>
            The entity for which a mismatch occurred.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.mismatchedQoSAttribute">
            <summary>
            The mismatched QoS attribute.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.mismatchedQoSSubAttribute">
            <summary>
            The mismatched QoS subattribute.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.mismatchDetails">
            <summary>
            Further details about the mismatch.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="interfaceName">The interface for which the mismatch 
            occurred.</param>
            <param name="entity">The entitiy for which the mismatch 
            occurred.</param>
            <param name="mismatch">The mismatched QoS aspect.</param>
            <param name="mismatchedSubAttribute">The mismatches QoS subaspect
            </param>
            <param name="mismatchDetails">Further details about the mismatch.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.ToString">
            <summary>
            Create string representation of this mismatch.
            </summary>
            <returns>String representation of this mismatch.</returns>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.InterfaceName">
            <summary>
            Returns the name of the interface belonging to this Mismatch
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.Entity">
            <summary>
            Returns the name of the entity belonging to this Mismatch
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.MismatchAttribute">
            <summary>
            Returns the name of the mismatched QoS attribute belonging to this 
            Mismatch
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.MismatchSubAttribute">
            <summary>
            Returns the name of the mismatched QoS subattribute belonging to 
            this Mismatch
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.QMLComparison.QMLMismatch.MismatchDetails">
            <summary>
            Provides further details about the mismatch and its occurrence.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.QMLComparison.QMLParserTest">
            <summary>
            Zusammenfassung für QMLParserTest.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.QMLComparison.QMLParserTest.CreateSpecification(System.IO.TextReader)">
            <summary>
            Creates a specification needed to test the parser. 
            </summary>
            <param name="textReader">TextReader representing a QML 
            specification</param>
            <returns>A QMLSpecification object that equals the given 
            specification.</returns>
        </member>
    </members>
</doc>
