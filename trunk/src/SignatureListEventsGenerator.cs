//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith.
//     Version: 2.5.14.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using Palladio.Identifier;

namespace Palladio.ComponentModel
{
	public class SignatureListChangeEventArgs
	{
		protected ChangeTimeEnum time;
		protected ChangeTypeEnum type;
		protected bool actionAllowed = true;
		protected Exception abortException;
		protected ISignature signature;

		public ISignature Signature
		{
			get
			{
				return signature;
			}
		}
		 
		public ChangeTimeEnum ChangeTime
		{
			get
			{
				return time;
			}
		}

		public ChangeTypeEnum ChangeType
		{
			get
			{
				return type;
			}
		}

		public bool ActionAllowed 
		{
			get
			{
				return actionAllowed;
			}
			set
			{
				actionAllowed = value;
			}
		}

		public Exception ReasonForAbort
		{
			get
			{
				return abortException;
			}
			set
			{
				abortException = value;
			}
		}
		
		public SignatureListChangeEventArgs(ISignature sig, ChangeTimeEnum time, ChangeTypeEnum type)
		{
			this.time = time;
			this.type = type;
			this.signature = sig;
		}
	}

	public delegate void SignatureListChangeEventHandler(object sender, SignatureListChangeEventArgs args);

	/// <summary>
	/// Summary description for IAuxiliaryInformation.
	/// </summary>
	/// <remarks><pre>
	/// $Log$
	/// Revision 1.1  2004/06/03 14:37:28  sbecker
	/// Added the possibility to attach auxiliary specifications to a basic component
	///
	///
	/// </pre></remarks>
	public interface IAuxiliaryInterfaceSpecification
	{
		void SignatureListChangeEventHandler(object sender, SignatureListChangeEventArgs args);
	}
	
	public class SignatureWithRoleListChangeEventArgs
	{
		protected ChangeTimeEnum time;
		protected ChangeTypeEnum type;
		protected bool actionAllowed = true;
		protected Exception abortException;
		protected ISignatureWithRole signature;

		public ISignatureWithRole Signature
		{
			get
			{
				return signature;
			}
		}
		 
		public ChangeTimeEnum ChangeTime
		{
			get
			{
				return time;
			}
		}

		public ChangeTypeEnum ChangeType
		{
			get
			{
				return type;
			}
		}

		public bool ActionAllowed 
		{
			get
			{
				return actionAllowed;
			}
			set
			{
				actionAllowed = value;
			}
		}

		public Exception ReasonForAbort
		{
			get
			{
				return abortException;
			}
			set
			{
				abortException = value;
			}
		}
		
		public SignatureWithRoleListChangeEventArgs(ISignatureWithRole sig, ChangeTimeEnum time, ChangeTypeEnum type)
		{
			this.time = time;
			this.type = type;
			this.signature = sig;
		}
	}

	public delegate void SignatureWithRoleListChangeEventHandler(object sender, SignatureWithRoleListChangeEventArgs args);

	/// <summary>
	/// Summary description for IAuxiliaryInformation.
	/// </summary>
	/// <remarks><pre>
	/// $Log$
	/// Revision 1.1  2004/06/03 14:37:28  sbecker
	/// Added the possibility to attach auxiliary specifications to a basic component
	///
	///
	/// </pre></remarks>
	public interface IAuxiliaryServiceEffectSpecification
	{
		void SignatureWithRoleListChangeEventHandler(object sender, SignatureWithRoleListChangeEventArgs args);
	}
}
