//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith.
//     Version: 2.5.14.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using Palladio.Identifier;

namespace Palladio.ComponentModel
{
	#region ISignatureList
	/// <summary>
	/// A SignatureList is  an InterfaceModel just
	/// containing a set of signatures.
	/// </summary>
	public interface ISignatureList : ICloneable
	{
		#region Properties

		/// <summary>
		/// Signatures of the interface.
		/// </summary>
		ISignature[] Signatures
		{
			get;
		}
		
		/// <summary>
		/// Indexer to access the sigantures easily.
		/// </summary>
		ISignature this[int index]
		{
			get;
		}

		/// <summary>
		/// Adds an array of signatures to the interface.
		/// </summary>
		/// <param name="aSigArray">Signatures to add.</param>
		void AddSignatures( params ISignature[] aSigArray );

		/// <summary>
		/// Deletes a set of signatures from the interface.
		/// </summary>
		/// <param name="aSigArray">Signatures to delete.</param>
		void DeleteSignatures( params ISignature[] aSigArray );

		bool ContainsSignature( ISignature aSignature );

		ISignature[] GetSignaturesByID( IIdentifier aName );

		#endregion
	}
	#endregion
	
	#region ISignatureWithRoleList
	/// <summary>
	/// A SignatureList is  an InterfaceModel just
	/// containing a set of signatures.
	/// </summary>
	public interface ISignatureWithRoleList : ICloneable
	{
		#region Properties

		/// <summary>
		/// Signatures of the interface.
		/// </summary>
		ISignatureWithRole[] Signatures
		{
			get;
		}
		
		/// <summary>
		/// Indexer to access the sigantures easily.
		/// </summary>
		ISignatureWithRole this[int index]
		{
			get;
		}

		/// <summary>
		/// Adds an array of signatures to the interface.
		/// </summary>
		/// <param name="aSigArray">Signatures to add.</param>
		void AddSignatures( params ISignatureWithRole[] aSigArray );

		/// <summary>
		/// Deletes a set of signatures from the interface.
		/// </summary>
		/// <param name="aSigArray">Signatures to delete.</param>
		void DeleteSignatures( params ISignatureWithRole[] aSigArray );

		bool ContainsSignature( ISignatureWithRole aSignature );

		ISignatureWithRole[] GetSignaturesByID( IIdentifier aName );

		#endregion
	}
	#endregion
}
