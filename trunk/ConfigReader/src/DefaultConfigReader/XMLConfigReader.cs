using System;
using System.Diagnostics;
using System.IO;
using System.Xml;
using Altova.Types;
using WebserverXML;

namespace Palladio.Webserver.ConfigReader
{
	/// <summary>
	/// XMLConfigReader.
	/// </summary>
	/// 
	/// 
	/// <remarks>
	/// <pre>
	/// Version history:
	///
	/// $Log$
	/// Revision 1.7  2004/10/23 14:08:35  kelsaka
	/// first steps on reading xml-config-files
	///
	/// Revision 1.6  2004/10/23 11:55:08  kelsaka
	/// added some parts of the building process
	///
	/// Revision 1.5  2004/10/22 16:19:56  kelsaka
	/// even more interface changes; configuration-alternative on loading the webserver
	///
	/// Revision 1.4  2004/10/22 09:37:19  kelsaka
	/// minor changes
	///
	/// Revision 1.3  2004/10/22 08:39:23  kelsaka
	/// added html-test-documents, xml-types generated by xmlspy, and first xml-config-files
	///
	/// Revision 1.2  2004/10/21 15:02:02  kelsaka
	/// added some more interfaces
	///
	/// Revision 1.1  2004/10/17 17:25:09  kelsaka
	/// initial cvs-version; added general project structure
	///
	///
	/// </pre>
	/// </remarks>
	public class XMLConfigReader : IConfigReader
	{

		/// <summary>
		/// The configuration root-object.
		/// </summary>
		private ConfigType configRoot;



		public XMLConfigReader()
		{

		}


		/// <summary>
		/// Read the configuration at the specified path. Afterwards the setting can be accessed by GetValue.
		/// </summary>
		/// <param name="configFilePath">Path to XML-config-file</param>
		public void ReadConfiguration (string configFilePath)
		{		

			WebserverXMLDoc doc = new WebserverXMLDoc();
			doc.SetRootElementName("", "Config");
			

			ConfigType root = new ConfigType();

			try 
			{
				root = new ConfigType(doc.Load(configFilePath));
			}
			catch (FileNotFoundException e)
			{
				Debug.WriteLine(e);
			}
			catch (XmlException e)
			{
				Debug.WriteLine(e);
			}

			this.configRoot = root;

		}


		/// <summary>
		/// Deliveres the configuration root-object. First run ReadConfiguration().
		/// </summary>
		/// <returns>The ConfigType-root-object.</returns>
		public ConfigType GetRoot()
		{
			return configRoot;
		}




	}
}
