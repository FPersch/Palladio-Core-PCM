<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SchemaExplorer</name>
    </assembly>
    <members>
        <member name="M:SchemaExplorer.Design.DatabaseSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ITableSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </summary>
            <remarks>
            <b>ITableSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaCollection.CopyTo(SchemaExplorer.TableSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ITableSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TableSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableSchema"/> elements copied from the <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ITableSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ITableSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ITableSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ITableSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ITableSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ITableSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITableSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.TableSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ITableSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Add(SchemaExplorer.TableSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.TableSchema"/> to the end
            of the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ITableSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Contains(SchemaExplorer.TableSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITableSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.TableSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ITableSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITableSchemaList"/>
            contains a <see cref="T:SchemaExplorer.TableSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TableSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ITableSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Contains(System.String,System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITableSchemaList"/>
            contains a <see cref="T:SchemaExplorer.TableSchema"/> with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the <see cref="T:SchemaExplorer.TableSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </param>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TableSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="owner"/> and <paramref name="name"/> combination is found in the
            <see cref="T:SchemaExplorer.ITableSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.IndexOf(SchemaExplorer.TableSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.TableSchema"/> in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ITableSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ITableSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.IndexOf(System.String,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="owner"/> and <paramref name="name"/> combination in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <param name="owner">The <paramref name="owner"/>
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </param>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="owner"/> and <paramref name="name"/> combination
            in the <see cref="T:SchemaExplorer.ITableSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Insert(System.Int32,SchemaExplorer.TableSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.TableSchema"/> element into the
            <see cref="T:SchemaExplorer.ITableSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ITableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.Remove(SchemaExplorer.TableSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.TableSchema"/>
            from the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ITableSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ITableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ITableSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ITableSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.TableSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ITableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ITableSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaList.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the 
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITableSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </summary>
            <remarks>
            <b>ITableSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.TableSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.TableSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ITableSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ITableSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.TableSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </summary>
            <remarks>
            <b>TableSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.TableSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor(SchemaExplorer.TableSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor(SchemaExplorer.TableSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.TableSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Add(SchemaExplorer.TableSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.TableSchema"/> to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.AddRange(SchemaExplorer.TableSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.AddRange(SchemaExplorer.TableSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.TableSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.BinarySearch(SchemaExplorer.TableSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.TableSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.TableSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.TableSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Contains(SchemaExplorer.TableSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.TableSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.TableSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.TableSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TableSchema"/>
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.TableSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Contains(System.String,System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.TableSchema"/> with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the <see cref="T:SchemaExplorer.TableSchema"/>
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </param>
            <param name="name">The <paramref name="TableSchemaCollection"/> of the <see cref="T:SchemaExplorer.TableSchema"/>
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="owner"/> and <paramref name="name"/> combination is found in the
            <see cref="T:SchemaExplorer.TableSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.TableSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.CopyTo(SchemaExplorer.TableSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.TableSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TableSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableSchema"/> elements copied from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.TableSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.CopyTo(SchemaExplorer.TableSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TableSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableSchema"/> elements copied from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.TableSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableSchema"/> elements copied from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.TableSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.TableSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ITableSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ITableSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.IndexOf(SchemaExplorer.TableSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.TableSchema"/> in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.IndexOf(System.String,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="owner"/> and <paramref name="name"/> combination in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="owner">The <paramref name="owner"/>
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </param>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="owner"/> and <paramref name="name"/> combination
            in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Insert(System.Int32,SchemaExplorer.TableSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.TableSchema"/> element into the
            <see cref="T:SchemaExplorer.TableSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.TableSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.ReadOnly(SchemaExplorer.TableSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Remove(SchemaExplorer.TableSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.TableSchema"/>
            from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.TableSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.TableSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.Synchronized(SchemaExplorer.TableSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.TableSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.TableSchema"/> elements in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.TableSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.TableSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.TableSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.TableSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.TableSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.TableSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the 
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TableSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.TableSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TableSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.TableSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.TableSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.TableSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.TableSchema">
            <summary>
            Provides information about a database table.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TabularObjectBase">
            <summary>
            Provides a common base for all tabular schema objects.
            </summary>
        </member>
        <member name="T:SchemaExplorer.SchemaObjectBase">
            <summary>
            Provides a base for all schema objects to derive from.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.#ctor">
            <summary>
            The default constructor for this object.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.Refresh">
            <summary>
            Allows the object to be refreshed.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.Description">
            <summary>
            The description of the object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.ExtendedProperties">
            <summary>
            Used to store any additional information about the schema object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.Database">
            <summary>
            Allows access to the DatabaseSchema object that contains this schema object.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:SchemaExplorer.TableSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.TableSchema.Refresh">
            <summary>
            Allows you to refresh the information for this table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableSchema.ToString">
            <summary>
            Returns the name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.TableSchema.Equals(System.Object)">
            <summary>
            Determines if another table is the same as this table.
            </summary>
            <param name="obj">The table to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.TableSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.TableSchema.IsDependantOf(SchemaExplorer.TableSchema)">
            <summary>
            Determines whether the current table is a dependant of the supplied table.
            </summary>
            <param name="table">The table to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.TableSchema.GetTableData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Owner">
            <summary>
            Returns the owner of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TableSchema.FullName">
            <summary>
            Returns the owner and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TableSchema.DateCreated">
            <summary>
            Returns the date this table was created.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.PrimaryKey">
            <summary>
            Provides information about the primary key of the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.ForeignKeys">
            <summary>
            Provides information about the foreign keys (keys where the current table is the foreign table) contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.PrimaryKeys">
            <summary>
            Provides information about the primary keys (keys where the current table is the primary table) contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Keys">
            <summary>
            Provides information about the keys contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Indexes">
            <summary>
            Provides information about the indexes contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Columns">
            <summary>
            Provides information about the table columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.NonPrimaryKeyColumns">
            <summary>
            Provides information about all non-primary key table columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.NonKeyColumns">
            <summary>
            Provides information about all non-key columns.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.CommandSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IDbSchemaProvider">
            <summary>
            This interface is used to implement a custom schema provider for
            SchemaExplorer.  To create your own schema provider simply create a
            new assembly which includes a public class that implements this interface.
            Also, the assembly name must end with SchemaProvider.dll
            (ie. MySampleSchemaProvider.dll).  Once you have done this, just
            put the assembly in the same directory as CodeSmith and that's it.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetDatabaseName(System.String)">
            <summary>
            Gets the name of the database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <returns>The name of the database</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetExtendedProperties(System.String,SchemaExplorer.SchemaObjectBase)">
            <summary>
            Gets the extended properties for a given schema object.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="schemaObject"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTables(System.String,SchemaExplorer.DatabaseSchema)">
            <summary>
            Gets all of the tables available in the database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableColumns(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets all columns for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViews(System.String,SchemaExplorer.DatabaseSchema)">
            <summary>
            Gets all the views available for a given database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViewColumns(System.String,SchemaExplorer.ViewSchema)">
            <summary>
            Gets the columns for a given view.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViewText(System.String,SchemaExplorer.ViewSchema)">
            <summary>
            Gets the definition for a given view.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTablePrimaryKey(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets the primary key for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableKeys(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets all of the table keys for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableIndexes(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gats all of the indexes for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableData(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets the data from the given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViewData(System.String,SchemaExplorer.ViewSchema)">
            <summary>
            Gets the data from a given view.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommands(System.String,SchemaExplorer.DatabaseSchema)">
            <summary>
            Gets all commands for the given database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="database"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommandParameters(System.String,SchemaExplorer.CommandSchema)">
            <summary>
            Gets the parameters for a given command.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommandText(System.String,SchemaExplorer.CommandSchema)">
            <summary>
            Gets the definition for a given command.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommandResultSchemas(System.String,SchemaExplorer.CommandSchema)">
            <summary>
            Gets schema information about the results of a given command.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProvider.Name">
            <summary>
            Gets the name of this schema provider.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProvider.Description">
            <summary>
            Gets the description for this schema provider.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ITableKeySchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </summary>
            <remarks>
            <b>ITableKeySchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaCollection.CopyTo(SchemaExplorer.TableKeySchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TableKeySchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableKeySchema"/> elements copied from the <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ITableKeySchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ITableKeySchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ITableKeySchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITableKeySchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.TableKeySchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ITableKeySchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.Add(SchemaExplorer.TableKeySchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.TableKeySchema"/> to the end
            of the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ITableKeySchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableKeySchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableKeySchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.Contains(SchemaExplorer.TableKeySchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.TableKeySchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ITableKeySchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>
            contains a <see cref="T:SchemaExplorer.TableKeySchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TableKeySchema"/>
            to locate in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ITableKeySchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.IndexOf(SchemaExplorer.TableKeySchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.TableKeySchema"/> in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.Insert(System.Int32,SchemaExplorer.TableKeySchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.TableKeySchema"/> element into the
            <see cref="T:SchemaExplorer.ITableKeySchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ITableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableKeySchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.Remove(SchemaExplorer.TableKeySchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.TableKeySchema"/>
            from the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableKeySchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ITableKeySchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ITableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITableKeySchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ITableKeySchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ITableKeySchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.TableKeySchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.TableKeySchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableKeySchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ITableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ITableKeySchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableKeySchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TableKeySchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableKeySchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITableKeySchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </summary>
            <remarks>
            <b>ITableKeySchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITableKeySchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.TableKeySchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.TableKeySchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ITableKeySchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ITableKeySchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.TableKeySchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </summary>
            <remarks>
            <b>TableKeySchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor(SchemaExplorer.TableKeySchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor(SchemaExplorer.TableKeySchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.TableKeySchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableKeySchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Add(SchemaExplorer.TableKeySchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.TableKeySchema"/> to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.AddRange(SchemaExplorer.TableKeySchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.AddRange(SchemaExplorer.TableKeySchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.TableKeySchema"/> array
            to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableKeySchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.BinarySearch(SchemaExplorer.TableKeySchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> for an
            <see cref="T:SchemaExplorer.TableKeySchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Contains(SchemaExplorer.TableKeySchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.TableKeySchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.TableKeySchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TableKeySchema"/>
            to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.CopyTo(SchemaExplorer.TableKeySchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TableKeySchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableKeySchema"/> elements copied from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.CopyTo(SchemaExplorer.TableKeySchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TableKeySchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableKeySchema"/> elements copied from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TableKeySchema"/> elements copied from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.TableKeySchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ITableKeySchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ITableKeySchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.IndexOf(SchemaExplorer.TableKeySchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.TableKeySchema"/> in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Insert(System.Int32,SchemaExplorer.TableKeySchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.TableKeySchema"/> element into the
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to insert into the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.ReadOnly(SchemaExplorer.TableKeySchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Remove(SchemaExplorer.TableKeySchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.TableKeySchema"/>
            from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TableKeySchema"/> object
            to remove from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.Synchronized(SchemaExplorer.TableKeySchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TableKeySchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TableKeySchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.TableKeySchema"/> elements in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.TableKeySchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.TableKeySchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableKeySchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableKeySchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TableKeySchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TableKeySchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TableKeySchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.TableKeySchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TableKeySchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.TableDependancyComparer">
            <summary>
            Sorts TableSchema objects based on their dependancies.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandSchema">
            <summary>
            Provides information about a command.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            Creates a new instance of the CommandSchema object.
            </summary>
            <param name="database">The database that the command belongs to.</param>
            <param name="name">The name of the command.</param>
            <param name="owner">The owner of the command.</param>
            <param name="dateCreated">The date this command was created.</param>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the CommandSchema object.
            </summary>
            <param name="database">The database that the command belongs to.</param>
            <param name="name">The name of the command.</param>
            <param name="owner">The owner of the command.</param>
            <param name="dateCreated">The date this command was created.</param>
            <param name="extendedProperties">The array of extended properties for the command.</param>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.Refresh">
            <summary>
            Refresh this instance.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.ToString">
            <summary>
            Returns the name of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.Equals(System.Object)">
            <summary>
            Determines if another command is the same as this command.
            </summary>
            <param name="obj">The command to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database and name of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.Owner">
            <summary>
            Returns the owner of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.FullName">
            <summary>
            Returns the owner and name of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.DateCreated">
            <summary>
            Returns the date this command was created.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.Parameters">
            <summary>
            Parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.CommandResults">
            <summary>
            Provides access to information about the results and column schema information returned when executing this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.InputParameters">
            <summary>
            Input parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.OutputParameters">
            <summary>
            Output parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.InputOutputParameters">
            <summary>
            InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.AllInputParameters">
            <summary>
            Input and InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.AllOutputParameters">
            <summary>
            Output and InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.NonReturnValueParameters">
            <summary>
            All parameters except the return value parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.ReturnValueParameter">
            <summary>
            The return value parameter for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.CommandText">
            <summary>
            Gets the command text for this command.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ViewColumnSchema">
            <summary>
            Provides information about a view column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.DataObjectBase">
            <summary>
            Provides a common base for all schema objects that describe a data field.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.DataType">
            <summary>
            The data type for this data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.SystemType">
            <summary>
            The system type that for this data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.NativeType">
            <summary>
            The native data type for this data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Size">
            <summary>
            The size of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Precision">
            <summary>
            The precision of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Scale">
            <summary>
            The scale of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.AllowDBNull">
            <summary>
            Whether or not the data object allows null values.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32)">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="extendedProperties">The array of extended properties for this column.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for this column.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.Equals(System.Object)">
            <summary>
            Determines if another view column is the same as this view column.
            </summary>
            <param name="obj">The view column to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, view and name of the view column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchema.View">
            <summary>
            The view that contains this column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IIDbSchemaProviderCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </summary>
            <remarks>
            <b>IIDbSchemaProviderCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderCollection.CopyTo(SchemaExplorer.IDbSchemaProvider[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements copied from the <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IIDbSchemaProviderEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IIDbSchemaProviderEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IIDbSchemaProviderCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IIDbSchemaProviderList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IIDbSchemaProviderList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.Add(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> to the end
            of the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIDbSchemaProviderList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIDbSchemaProviderList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.Contains(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>
            contains the specified <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to locate in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>
            contains a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            to locate in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.IndexOf(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to locate in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.Insert(System.Int32,SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element into the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to insert into the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IIDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIDbSchemaProviderList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.Remove(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            from the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to remove from the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIDbSchemaProviderList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IIDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIDbSchemaProviderList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IIDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IIDbSchemaProviderList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IIDbSchemaProviderEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </summary>
            <remarks>
            <b>IIDbSchemaProviderEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIDbSchemaProviderEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIDbSchemaProviderEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IIDbSchemaProviderEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IIDbSchemaProviderEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.IDbSchemaProviderCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </summary>
            <remarks>
            <b>IDbSchemaProviderCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor(SchemaExplorer.IDbSchemaProviderCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor(SchemaExplorer.IDbSchemaProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Add(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.AddRange(SchemaExplorer.IDbSchemaProviderCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.AddRange(SchemaExplorer.IDbSchemaProvider[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> array
            to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.BinarySearch(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> for an
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Contains(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            contains the specified <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            contains a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.CopyTo(SchemaExplorer.IDbSchemaProvider[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements copied from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.CopyTo(SchemaExplorer.IDbSchemaProvider[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements copied from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements copied from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IIDbSchemaProviderEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IIDbSchemaProviderEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.IndexOf(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Insert(System.Int32,SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element into the
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to insert into the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.ReadOnly(SchemaExplorer.IDbSchemaProviderCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Remove(SchemaExplorer.IDbSchemaProvider)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> object
            to remove from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Synchronized(SchemaExplorer.IDbSchemaProviderCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IDbSchemaProvider"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDbSchemaProviderCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.IDbSchemaProviderCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.IDbSchemaProvider"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.DatabaseSchema">
            <summary>
            This class allows programmatic discovery of a database schema.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.#ctor(SchemaExplorer.IDbSchemaProvider,System.String)">
            <summary>
            This constructor allows you to specify your own schema provider and set the connection string.
            </summary>
            <param name="provider">The provider to use for this instance.</param>
            <param name="connectionString">The connection string to use for this instance.</param>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.GetProviders">
            <summary>
            Returns a collection of available providers.
            </summary>
            <returns>IDbSchemaProviderCollection</returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.ToString">
            <summary>
            Returns the name of the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.GetProvider(System.String)">
            <summary>
            Gets a provider by name.
            </summary>
            <param name="name">The name of the provider.</param>
            <returns>IDbSchemaProvider</returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.Refresh">
            <summary>
            Allows for programmatic refreshing of the database schema.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.Equals(System.Object)">
            <summary>
            Determines if another database is the same as this database.
            </summary>
            <param name="obj">The database to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.ProviderSearchDirectories">
            <summary>
            Allows you to specify additional directories to search when looking for providers.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Provider">
            <summary>
            Gets or sets the current provider for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.ConnectionString">
            <summary>
            Gets or sets the current connection string for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Name">
            <summary>
            The name of the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Tables">
            <summary>
            Provides access to the tables contained in the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Views">
            <summary>
            Provides access to the views contained in the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Commands">
            <summary>
            Provides access to the commands contained in the database.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ISchemaObjectBaseCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </summary>
            <remarks>
            <b>ISchemaObjectBaseCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseCollection.CopyTo(SchemaExplorer.SchemaObjectBase[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ISchemaObjectBaseEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ISchemaObjectBaseEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ISchemaObjectBaseCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ISchemaObjectBaseList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ISchemaObjectBaseList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.Add(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.SchemaObjectBase"/> to the end
            of the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ISchemaObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ISchemaObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.Contains(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>
            contains the specified <see cref="T:SchemaExplorer.SchemaObjectBase"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>
            contains a <see cref="T:SchemaExplorer.SchemaObjectBase"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            to locate in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.IndexOf(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.Insert(System.Int32,SchemaExplorer.SchemaObjectBase)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.SchemaObjectBase"/> element into the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to insert into the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ISchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ISchemaObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.Remove(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            from the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to remove from the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ISchemaObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ISchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ISchemaObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.SchemaObjectBase"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.SchemaObjectBase"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ISchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ISchemaObjectBaseList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.SchemaObjectBase"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.SchemaObjectBase"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ISchemaObjectBaseEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </summary>
            <remarks>
            <b>ISchemaObjectBaseEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectBaseEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectBaseEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.SchemaObjectBase"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.SchemaObjectBase"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ISchemaObjectBaseEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ISchemaObjectBaseEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.SchemaObjectBaseCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </summary>
            <remarks>
            <b>SchemaObjectBaseCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor(SchemaExplorer.SchemaObjectBaseCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor(SchemaExplorer.SchemaObjectBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Add(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.SchemaObjectBase"/> to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.AddRange(SchemaExplorer.SchemaObjectBaseCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.AddRange(SchemaExplorer.SchemaObjectBase[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.SchemaObjectBase"/> array
            to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.BinarySearch(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> for an
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Contains(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            contains the specified <see cref="T:SchemaExplorer.SchemaObjectBase"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            contains a <see cref="T:SchemaExplorer.SchemaObjectBase"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.CopyTo(SchemaExplorer.SchemaObjectBase[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.CopyTo(SchemaExplorer.SchemaObjectBase[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.SchemaObjectBase"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ISchemaObjectBaseEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ISchemaObjectBaseEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.IndexOf(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Insert(System.Int32,SchemaExplorer.SchemaObjectBase)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.SchemaObjectBase"/> element into the
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to insert into the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.ReadOnly(SchemaExplorer.SchemaObjectBaseCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Remove(SchemaExplorer.SchemaObjectBase)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.SchemaObjectBase"/> object
            to remove from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.Synchronized(SchemaExplorer.SchemaObjectBaseCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.SchemaObjectBase"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>SchemaObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> elements in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.SchemaObjectBase"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.SchemaObjectBase"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.SchemaObjectBase"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.SchemaObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.SchemaObjectBase"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.SchemaObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.SchemaObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBaseCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IIndexSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </summary>
            <remarks>
            <b>IIndexSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaCollection.CopyTo(SchemaExplorer.IndexSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IIndexSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.IndexSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IndexSchema"/> elements copied from the <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IIndexSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IIndexSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IIndexSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IIndexSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IIndexSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IIndexSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IIndexSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.IndexSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IIndexSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.Add(SchemaExplorer.IndexSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.IndexSchema"/> to the end
            of the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IIndexSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIndexSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIndexSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.Contains(SchemaExplorer.IndexSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IIndexSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.IndexSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IIndexSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IIndexSchemaList"/>
            contains a <see cref="T:SchemaExplorer.IndexSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.IndexSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IIndexSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.IndexOf(SchemaExplorer.IndexSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.IndexSchema"/> in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IIndexSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.Insert(System.Int32,SchemaExplorer.IndexSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.IndexSchema"/> element into the
            <see cref="T:SchemaExplorer.IIndexSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IIndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIndexSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.Remove(SchemaExplorer.IndexSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.IndexSchema"/>
            from the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIndexSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IIndexSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IIndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IIndexSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IIndexSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IIndexSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.IndexSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.IndexSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IndexSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IIndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IIndexSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.IndexSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.IndexSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IndexSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IIndexSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </summary>
            <remarks>
            <b>IIndexSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IIndexSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IIndexSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.IndexSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.IndexSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IIndexSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IIndexSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.IndexSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </summary>
            <remarks>
            <b>IndexSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor(SchemaExplorer.IndexSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor(SchemaExplorer.IndexSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.IndexSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IndexSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Add(SchemaExplorer.IndexSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.IndexSchema"/> to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.AddRange(SchemaExplorer.IndexSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.AddRange(SchemaExplorer.IndexSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.IndexSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IndexSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.BinarySearch(SchemaExplorer.IndexSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.IndexSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.IndexSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Contains(SchemaExplorer.IndexSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.IndexSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.IndexSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.IndexSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.CopyTo(SchemaExplorer.IndexSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.IndexSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IndexSchema"/> elements copied from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.CopyTo(SchemaExplorer.IndexSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.IndexSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IndexSchema"/> elements copied from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.IndexSchema"/> elements copied from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.IndexSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IIndexSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IIndexSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.IndexOf(SchemaExplorer.IndexSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.IndexSchema"/> in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Insert(System.Int32,SchemaExplorer.IndexSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.IndexSchema"/> element into the
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.ReadOnly(SchemaExplorer.IndexSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Remove(SchemaExplorer.IndexSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.IndexSchema"/>
            from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.IndexSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.Synchronized(SchemaExplorer.IndexSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.IndexSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IndexSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.IndexSchema"/> elements in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.IndexSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.IndexSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.IndexSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IndexSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.IndexSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.IndexSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.IndexSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.IndexSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.IndexSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IndexSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.IndexSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IExtendedPropertyCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </summary>
            <remarks>
            <b>IExtendedPropertyCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyCollection.CopyTo(SchemaExplorer.ExtendedProperty[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ExtendedProperty"/> elements copied from the <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IExtendedPropertyEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IExtendedPropertyEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IExtendedPropertyCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IExtendedPropertyList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.ExtendedProperty"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IExtendedPropertyList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.Add(SchemaExplorer.ExtendedProperty)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ExtendedProperty"/> to the end
            of the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IExtendedPropertyList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IExtendedPropertyList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IExtendedPropertyList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.Contains(SchemaExplorer.ExtendedProperty)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>
            contains the specified <see cref="T:SchemaExplorer.ExtendedProperty"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to locate in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IExtendedPropertyList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>
            contains a <see cref="T:SchemaExplorer.ExtendedProperty"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ExtendedProperty"/>
            to locate in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IExtendedPropertyList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.IndexOf(SchemaExplorer.ExtendedProperty)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ExtendedProperty"/> in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to locate in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.Insert(System.Int32,SchemaExplorer.ExtendedProperty)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ExtendedProperty"/> element into the
            <see cref="T:SchemaExplorer.IExtendedPropertyList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to insert into the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IExtendedPropertyList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.Remove(SchemaExplorer.ExtendedProperty)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ExtendedProperty"/>
            from the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to remove from the <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IExtendedPropertyList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IExtendedPropertyList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IExtendedPropertyList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IExtendedPropertyList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IExtendedPropertyList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ExtendedProperty"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ExtendedProperty"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ExtendedProperty"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IExtendedPropertyList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ExtendedProperty"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ExtendedProperty"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ExtendedProperty"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IExtendedPropertyEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </summary>
            <remarks>
            <b>IExtendedPropertyEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IExtendedPropertyEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IExtendedPropertyEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.ExtendedProperty"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.ExtendedProperty"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IExtendedPropertyEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IExtendedPropertyEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.ExtendedPropertyCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </summary>
            <remarks>
            <b>ExtendedPropertyCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor(SchemaExplorer.ExtendedPropertyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor(SchemaExplorer.ExtendedProperty[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.ExtendedProperty"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ExtendedProperty"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Add(SchemaExplorer.ExtendedProperty)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ExtendedProperty"/> to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.AddRange(SchemaExplorer.ExtendedPropertyCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.AddRange(SchemaExplorer.ExtendedProperty[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.ExtendedProperty"/> array
            to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.BinarySearch(SchemaExplorer.ExtendedProperty)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> for an
            <see cref="T:SchemaExplorer.ExtendedProperty"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Contains(SchemaExplorer.ExtendedProperty)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            contains the specified <see cref="T:SchemaExplorer.ExtendedProperty"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            contains a <see cref="T:SchemaExplorer.ExtendedProperty"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ExtendedProperty"/>
            to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.CopyTo(SchemaExplorer.ExtendedProperty[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ExtendedProperty"/> elements copied from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.CopyTo(SchemaExplorer.ExtendedProperty[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ExtendedProperty"/> elements copied from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ExtendedProperty"/> elements copied from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.ExtendedProperty"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IExtendedPropertyEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IExtendedPropertyEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.IndexOf(SchemaExplorer.ExtendedProperty)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ExtendedProperty"/> in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Insert(System.Int32,SchemaExplorer.ExtendedProperty)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ExtendedProperty"/> element into the
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to insert into the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.ReadOnly(SchemaExplorer.ExtendedPropertyCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Remove(SchemaExplorer.ExtendedProperty)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ExtendedProperty"/>
            from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ExtendedProperty"/> object
            to remove from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.Synchronized(SchemaExplorer.ExtendedPropertyCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ExtendedProperty"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ExtendedPropertyCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.ExtendedProperty"/> elements in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ExtendedProperty"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ExtendedProperty"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ExtendedProperty"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ExtendedProperty"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ExtendedProperty"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ExtendedProperty"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ExtendedPropertyCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.ExtendedProperty"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ExtendedPropertyCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.PrimaryKeySchema">
            <summary>
            Provides information about a table primary key.
            </summary>
        </member>
        <member name="M:SchemaExplorer.PrimaryKeySchema.Equals(System.Object)">
            <summary>
            Determines if another primary key is the same as this primary key.
            </summary>
            <param name="obj">The primary key to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.PrimaryKeySchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the primary key.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.PrimaryKeySchema.Table">
            <summary>
            The table that contains this primary key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.PrimaryKeySchema.MemberColumns">
            <summary>
            The primary key's member columns.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandResultColumnSchema">
            <summary>
            Provides information about a command result column.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchema.#ctor(SchemaExplorer.CommandSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the CommandResultColumnSchema object.
            </summary>
            <param name="command">The command that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchema.#ctor(SchemaExplorer.CommandSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the CommandResultColumnSchema object.
            </summary>
            <param name="command">The command that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for the column.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchema.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchema.Command">
            <summary>
            The command that contains this column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IViewColumnSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>IViewColumnSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaCollection.CopyTo(SchemaExplorer.ViewColumnSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IViewColumnSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IViewColumnSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IViewColumnSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IViewColumnSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IViewColumnSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.Add(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ViewColumnSchema"/> to the end
            of the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.Contains(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.ViewColumnSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>
            contains a <see cref="T:SchemaExplorer.ViewColumnSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.IndexOf(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.Insert(System.Int32,SchemaExplorer.ViewColumnSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ViewColumnSchema"/> element into the
            <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.Remove(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            from the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IViewColumnSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ViewColumnSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewColumnSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IViewColumnSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ViewColumnSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewColumnSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IViewColumnSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>IViewColumnSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewColumnSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.ViewColumnSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.ViewColumnSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IViewColumnSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IViewColumnSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.ViewColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>ViewColumnSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor(SchemaExplorer.ViewColumnSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor(SchemaExplorer.ViewColumnSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Add(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ViewColumnSchema"/> to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.AddRange(SchemaExplorer.ViewColumnSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.AddRange(SchemaExplorer.ViewColumnSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.ViewColumnSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.BinarySearch(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Contains(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.ViewColumnSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.ViewColumnSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.CopyTo(SchemaExplorer.ViewColumnSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.CopyTo(SchemaExplorer.ViewColumnSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.ViewColumnSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IViewColumnSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IViewColumnSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.IndexOf(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Insert(System.Int32,SchemaExplorer.ViewColumnSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ViewColumnSchema"/> element into the
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.ReadOnly(SchemaExplorer.ViewColumnSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Remove(SchemaExplorer.ViewColumnSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewColumnSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.Synchronized(SchemaExplorer.ViewColumnSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewColumnSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ViewColumnSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewColumnSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ViewColumnSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ViewColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewColumnSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ViewColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.ViewColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IndexSchema">
            <summary>
            Provides information about an index.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IndexSchema.Equals(System.Object)">
            <summary>
            Determines if another index is the same as this index.
            </summary>
            <param name="obj">The index to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.IndexSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the index.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.Table">
            <summary>
            The table that contains this index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.IsPrimaryKey">
            <summary>
            Whether this is the index for the primary key or not.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.IsUnique">
            <summary>
            Whether this is a unique index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.IsClustered">
            <summary>
            Whether this is a clustered index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.MemberColumns">
            <summary>
            The columns that make up this index.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.DataSourceManagerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ICommandResultColumnSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>ICommandResultColumnSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaCollection.CopyTo(SchemaExplorer.CommandResultColumnSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ICommandResultColumnSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ICommandResultColumnSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandResultColumnSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ICommandResultColumnSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.Add(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> to the end
            of the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.Contains(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>
            contains a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.IndexOf(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.Insert(System.Int32,SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element into the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ICommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.Remove(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            from the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ICommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ICommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ICommandResultColumnSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandResultColumnSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>ICommandResultColumnSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultColumnSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ICommandResultColumnSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ICommandResultColumnSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.CommandResultColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>CommandResultColumnSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor(SchemaExplorer.CommandResultColumnSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor(SchemaExplorer.CommandResultColumnSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Add(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.AddRange(SchemaExplorer.CommandResultColumnSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.AddRange(SchemaExplorer.CommandResultColumnSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.BinarySearch(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Contains(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.CopyTo(SchemaExplorer.CommandResultColumnSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.CopyTo(SchemaExplorer.CommandResultColumnSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ICommandResultColumnSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ICommandResultColumnSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.IndexOf(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Insert(System.Int32,SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element into the
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.ReadOnly(SchemaExplorer.CommandResultColumnSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Remove(SchemaExplorer.CommandResultColumnSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.Synchronized(SchemaExplorer.CommandResultColumnSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandResultColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.CommandResultColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.CommandResultColumnSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IParameterSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </summary>
            <remarks>
            <b>IParameterSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaCollection.CopyTo(SchemaExplorer.ParameterSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IParameterSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ParameterSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ParameterSchema"/> elements copied from the <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IParameterSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IParameterSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IParameterSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IParameterSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IParameterSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IParameterSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IParameterSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.ParameterSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IParameterSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.Add(SchemaExplorer.ParameterSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ParameterSchema"/> to the end
            of the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IParameterSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IParameterSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IParameterSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.Contains(SchemaExplorer.ParameterSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IParameterSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.ParameterSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IParameterSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IParameterSchemaList"/>
            contains a <see cref="T:SchemaExplorer.ParameterSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ParameterSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IParameterSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.IndexOf(SchemaExplorer.ParameterSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ParameterSchema"/> in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IParameterSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.Insert(System.Int32,SchemaExplorer.ParameterSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ParameterSchema"/> element into the
            <see cref="T:SchemaExplorer.IParameterSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IParameterSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.Remove(SchemaExplorer.ParameterSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ParameterSchema"/>
            from the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IParameterSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IParameterSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IParameterSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IParameterSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IParameterSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ParameterSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ParameterSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ParameterSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IParameterSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ParameterSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ParameterSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ParameterSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IParameterSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </summary>
            <remarks>
            <b>IParameterSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IParameterSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.ParameterSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.ParameterSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IParameterSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IParameterSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.ParameterSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </summary>
            <remarks>
            <b>ParameterSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor(SchemaExplorer.ParameterSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor(SchemaExplorer.ParameterSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.ParameterSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ParameterSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Add(SchemaExplorer.ParameterSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ParameterSchema"/> to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.AddRange(SchemaExplorer.ParameterSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.AddRange(SchemaExplorer.ParameterSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.ParameterSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ParameterSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.BinarySearch(SchemaExplorer.ParameterSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.ParameterSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Contains(SchemaExplorer.ParameterSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.ParameterSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.ParameterSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ParameterSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.CopyTo(SchemaExplorer.ParameterSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ParameterSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ParameterSchema"/> elements copied from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.CopyTo(SchemaExplorer.ParameterSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ParameterSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ParameterSchema"/> elements copied from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ParameterSchema"/> elements copied from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.ParameterSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IParameterSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IParameterSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.IndexOf(SchemaExplorer.ParameterSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ParameterSchema"/> in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Insert(System.Int32,SchemaExplorer.ParameterSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ParameterSchema"/> element into the
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.ReadOnly(SchemaExplorer.ParameterSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Remove(SchemaExplorer.ParameterSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ParameterSchema"/>
            from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ParameterSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.Synchronized(SchemaExplorer.ParameterSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ParameterSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ParameterSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.ParameterSchema"/> elements in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ParameterSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ParameterSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ParameterSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ParameterSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ParameterSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ParameterSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ParameterSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.ParameterSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ParameterSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITabularObjectBaseCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </summary>
            <remarks>
            <b>ITabularObjectBaseCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseCollection.CopyTo(SchemaExplorer.TabularObjectBase[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TabularObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ITabularObjectBaseEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ITabularObjectBaseEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ITabularObjectBaseCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITabularObjectBaseList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.TabularObjectBase"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ITabularObjectBaseList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.Add(SchemaExplorer.TabularObjectBase)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.TabularObjectBase"/> to the end
            of the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITabularObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITabularObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.Contains(SchemaExplorer.TabularObjectBase)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>
            contains the specified <see cref="T:SchemaExplorer.TabularObjectBase"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>
            contains a <see cref="T:SchemaExplorer.TabularObjectBase"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TabularObjectBase"/>
            to locate in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.IndexOf(SchemaExplorer.TabularObjectBase)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.TabularObjectBase"/> in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.Insert(System.Int32,SchemaExplorer.TabularObjectBase)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.TabularObjectBase"/> element into the
            <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to insert into the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ITabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITabularObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.Remove(SchemaExplorer.TabularObjectBase)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.TabularObjectBase"/>
            from the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to remove from the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITabularObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ITabularObjectBaseList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ITabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ITabularObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.TabularObjectBase"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.TabularObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TabularObjectBase"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ITabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ITabularObjectBaseList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TabularObjectBase"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TabularObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TabularObjectBase"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ITabularObjectBaseEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </summary>
            <remarks>
            <b>ITabularObjectBaseEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ITabularObjectBaseEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ITabularObjectBaseEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.TabularObjectBase"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.TabularObjectBase"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ITabularObjectBaseEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ITabularObjectBaseEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.TabularObjectBaseCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </summary>
            <remarks>
            <b>TabularObjectBaseCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor(SchemaExplorer.TabularObjectBaseCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor(SchemaExplorer.TabularObjectBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.TabularObjectBase"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TabularObjectBase"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Add(SchemaExplorer.TabularObjectBase)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.TabularObjectBase"/> to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.AddRange(SchemaExplorer.TabularObjectBaseCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.AddRange(SchemaExplorer.TabularObjectBase[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.TabularObjectBase"/> array
            to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.BinarySearch(SchemaExplorer.TabularObjectBase)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> for an
            <see cref="T:SchemaExplorer.TabularObjectBase"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Contains(SchemaExplorer.TabularObjectBase)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            contains the specified <see cref="T:SchemaExplorer.TabularObjectBase"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            contains a <see cref="T:SchemaExplorer.TabularObjectBase"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.TabularObjectBase"/>
            to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.CopyTo(SchemaExplorer.TabularObjectBase[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TabularObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.CopyTo(SchemaExplorer.TabularObjectBase[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TabularObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.TabularObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.TabularObjectBase"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ITabularObjectBaseEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ITabularObjectBaseEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.IndexOf(SchemaExplorer.TabularObjectBase)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.TabularObjectBase"/> in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Insert(System.Int32,SchemaExplorer.TabularObjectBase)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.TabularObjectBase"/> element into the
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to insert into the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.ReadOnly(SchemaExplorer.TabularObjectBaseCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Remove(SchemaExplorer.TabularObjectBase)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.TabularObjectBase"/>
            from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.TabularObjectBase"/> object
            to remove from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.Synchronized(SchemaExplorer.TabularObjectBaseCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TabularObjectBase"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.TabularObjectBase"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>TabularObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.TabularObjectBase"/> elements in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.TabularObjectBase"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.TabularObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TabularObjectBase"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TabularObjectBase"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.TabularObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.TabularObjectBase"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.TabularObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.TabularObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBaseCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ParameterSchema">
            <summary>
            Provides information about a parameter.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ParameterSchema.Refresh">
            <summary>
            Refresh the parameter.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ParameterSchema.Equals(System.Object)">
            <summary>
            Determines if another parameter is the same as this parameter.
            </summary>
            <param name="obj">The parameter to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.ParameterSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, command and name of the parameter.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ParameterSchema.Command">
            <summary>
            The command that contains this parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ParameterSchema.Direction">
            <summary>
            The parameter direction.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ViewSchema">
            <summary>
            Provides information about a database table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.Refresh">
            <summary>
            Allows you to refresh the information for this table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.ToString">
            <summary>
            Returns the name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.GetViewData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.Equals(System.Object)">
            <summary>
            Determines if another view is the same as this view.
            </summary>
            <param name="obj">The view to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database and name of the view.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.Owner">
            <summary>
            Returns the owner of the view.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.FullName">
            <summary>
            Returns the owner and name of the view.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.DateCreated">
            <summary>
            Returns the date this view was created.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.Columns">
            <summary>
            Provides information about the view columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.ViewText">
            <summary>
            Gets the view text for this view.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IDataSourceCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.DataSource"/> elements.
            </summary>
            <remarks>
            <b>IDataSourceCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataSource"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceCollection.CopyTo(SchemaExplorer.DataSource[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IDataSourceCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.DataSource"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataSource"/> elements copied from the <see cref="T:SchemaExplorer.IDataSourceCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IDataSourceCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IDataSourceEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IDataSourceCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IDataSourceEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IDataSourceCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IDataSourceCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IDataSourceCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IDataSourceCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IDataSourceCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IDataSourceCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IDataSourceCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IDataSourceList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.DataSource"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IDataSourceList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataSource"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.Add(SchemaExplorer.DataSource)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.DataSource"/> to the end
            of the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IDataSourceList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataSourceList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataSourceList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.Contains(SchemaExplorer.DataSource)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDataSourceList"/>
            contains the specified <see cref="T:SchemaExplorer.DataSource"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to locate in the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IDataSourceList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDataSourceList"/>
            contains a <see cref="T:SchemaExplorer.DataSource"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.DataSource"/>
            to locate in the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IDataSourceList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.IndexOf(SchemaExplorer.DataSource)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.DataSource"/> in the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to locate in the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IDataSourceList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IDataSourceList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.Insert(System.Int32,SchemaExplorer.DataSource)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.DataSource"/> element into the
            <see cref="T:SchemaExplorer.IDataSourceList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to insert into the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IDataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataSourceList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.Remove(SchemaExplorer.DataSource)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.DataSource"/>
            from the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to remove from the <see cref="T:SchemaExplorer.IDataSourceList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataSourceList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IDataSourceList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IDataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataSourceList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IDataSourceList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IDataSourceList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.DataSource"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.DataSource"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataSource"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IDataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IDataSourceList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.DataSource"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.DataSource"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataSource"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IDataSourceEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.DataSource"/> elements.
            </summary>
            <remarks>
            <b>IDataSourceEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataSource"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataSourceEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataSourceEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.DataSource"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.DataSource"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IDataSourceEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IDataSourceEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.DataSourceCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.DataSource"/> elements.
            </summary>
            <remarks>
            <b>DataSourceCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataSource"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.DataSourceCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor(SchemaExplorer.DataSourceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataSourceCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor(SchemaExplorer.DataSource[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.DataSource"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataSource"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Add(SchemaExplorer.DataSource)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.DataSource"/> to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.DataSourceCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataSource"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.DataSourceCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataSource"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.AddRange(SchemaExplorer.DataSourceCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataSourceCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.AddRange(SchemaExplorer.DataSource[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.DataSource"/> array
            to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataSource"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.BinarySearch(SchemaExplorer.DataSource)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.DataSourceCollection"/> for an
            <see cref="T:SchemaExplorer.DataSource"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.DataSourceCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.DataSourceCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Contains(SchemaExplorer.DataSource)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.DataSourceCollection"/>
            contains the specified <see cref="T:SchemaExplorer.DataSource"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.DataSourceCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.DataSourceCollection"/>
            contains a <see cref="T:SchemaExplorer.DataSource"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.DataSource"/>
            to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.DataSourceCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.DataSourceCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataSource"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.DataSourceCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataSource"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.CopyTo(SchemaExplorer.DataSource[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.DataSourceCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.DataSourceCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.DataSource"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataSource"/> elements copied from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.DataSourceCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.CopyTo(SchemaExplorer.DataSource[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.DataSourceCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.DataSource"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataSource"/> elements copied from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.DataSourceCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.DataSourceCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataSource"/> elements copied from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.DataSourceCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.DataSource"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IDataSourceEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IDataSourceEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.DataSourceCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.DataSourceCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.IndexOf(SchemaExplorer.DataSource)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.DataSource"/> in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.DataSourceCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.DataSourceCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataSource"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.DataSourceCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataSource"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Insert(System.Int32,SchemaExplorer.DataSource)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.DataSource"/> element into the
            <see cref="T:SchemaExplorer.DataSourceCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to insert into the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.DataSourceCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataSource"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataSource"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.ReadOnly(SchemaExplorer.DataSourceCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataSourceCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Remove(SchemaExplorer.DataSource)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.DataSource"/>
            from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataSource"/> object
            to remove from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataSource"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataSource"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.DataSourceCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.DataSourceCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.DataSourceCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.DataSourceCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Synchronized(SchemaExplorer.DataSourceCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataSourceCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.DataSourceCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataSource"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataSource"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataSourceCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.DataSourceCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.DataSource"/> elements in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.DataSourceCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.DataSourceCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.DataSourceCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.DataSourceCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.DataSourceCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.DataSourceCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.DataSource"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.DataSource"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataSource"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.DataSource"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.DataSource"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataSource"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.DataSource"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.DataSourceCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.DataSource"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.DataSourceCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.DataSourceCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.TableKeySchema">
            <summary>
            Provides information about a table key.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.Refresh">
            <summary>
            Refresh this object.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.Equals(System.Object)">
            <summary>
            Determines if another table key is the same as this table key.
            </summary>
            <param name="obj">The table key to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the table key.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.ForeignKeyTable">
            <summary>
            The foreign key table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.ForeignKeyMemberColumns">
            <summary>
            The foreign key table columns that make up this key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.PrimaryKeyTable">
            <summary>
            The primary key table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.PrimaryKeyMemberColumns">
            <summary>
            The primary key table columns that make up this key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.PrimaryKey">
            <summary>
            The primary key for the table that this key refers to.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.ViewSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandResultSchema">
            <summary>
            Summary description for CommandResultSchema.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchema.#ctor(SchemaExplorer.CommandSchema,System.String,SchemaExplorer.CommandResultColumnSchema[])">
            <summary>
            
            </summary>
            <param name="command">The command that the command result schema belongs to.</param>
            <param name="name">The name of this command result schema.</param>
            <param name="columns">The columns that make up this command result schema.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchema.#ctor(SchemaExplorer.CommandSchema,System.String,SchemaExplorer.CommandResultColumnSchema[],SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="command">The command that the command result schema belongs to.</param>
            <param name="name">The name of this command result schema.</param>
            <param name="columns">The columns that make up this command result schema.</param>
            <param name="extendedProperties">The array of extended properties for the column.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchema.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchema.Command">
            <summary>
            Provides access to the command that this command result schema belongs to.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchema.Item(System.Int32)">
            <summary>
            Index to allow easy access to the columns in this command result schema.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchema.Columns">
            <summary>
            Provides information about the command result columns.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IDataObjectBaseCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </summary>
            <remarks>
            <b>IDataObjectBaseCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseCollection.CopyTo(SchemaExplorer.DataObjectBase[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.DataObjectBase"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IDataObjectBaseEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IDataObjectBaseEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IDataObjectBaseCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IDataObjectBaseList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.DataObjectBase"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IDataObjectBaseList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.Add(SchemaExplorer.DataObjectBase)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.DataObjectBase"/> to the end
            of the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IDataObjectBaseList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.Contains(SchemaExplorer.DataObjectBase)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>
            contains the specified <see cref="T:SchemaExplorer.DataObjectBase"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IDataObjectBaseList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>
            contains a <see cref="T:SchemaExplorer.DataObjectBase"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.DataObjectBase"/>
            to locate in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IDataObjectBaseList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.IndexOf(SchemaExplorer.DataObjectBase)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.DataObjectBase"/> in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.Insert(System.Int32,SchemaExplorer.DataObjectBase)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.DataObjectBase"/> element into the
            <see cref="T:SchemaExplorer.IDataObjectBaseList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to insert into the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IDataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.Remove(SchemaExplorer.DataObjectBase)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.DataObjectBase"/>
            from the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to remove from the <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IDataObjectBaseList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IDataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IDataObjectBaseList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IDataObjectBaseList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IDataObjectBaseList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.DataObjectBase"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.DataObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataObjectBase"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IDataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IDataObjectBaseList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.DataObjectBase"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.DataObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataObjectBase"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IDataObjectBaseEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </summary>
            <remarks>
            <b>IDataObjectBaseEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IDataObjectBaseEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IDataObjectBaseEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.DataObjectBase"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.DataObjectBase"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IDataObjectBaseEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IDataObjectBaseEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.DataObjectBaseCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </summary>
            <remarks>
            <b>DataObjectBaseCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor(SchemaExplorer.DataObjectBaseCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor(SchemaExplorer.DataObjectBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.DataObjectBase"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataObjectBase"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Add(SchemaExplorer.DataObjectBase)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.DataObjectBase"/> to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.AddRange(SchemaExplorer.DataObjectBaseCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.AddRange(SchemaExplorer.DataObjectBase[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.DataObjectBase"/> array
            to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataObjectBase"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.BinarySearch(SchemaExplorer.DataObjectBase)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> for an
            <see cref="T:SchemaExplorer.DataObjectBase"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Contains(SchemaExplorer.DataObjectBase)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            contains the specified <see cref="T:SchemaExplorer.DataObjectBase"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            contains a <see cref="T:SchemaExplorer.DataObjectBase"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.DataObjectBase"/>
            to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.CopyTo(SchemaExplorer.DataObjectBase[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.DataObjectBase"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.CopyTo(SchemaExplorer.DataObjectBase[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.DataObjectBase"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.DataObjectBase"/> elements copied from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.DataObjectBase"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IDataObjectBaseEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IDataObjectBaseEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.IndexOf(SchemaExplorer.DataObjectBase)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.DataObjectBase"/> in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Insert(System.Int32,SchemaExplorer.DataObjectBase)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.DataObjectBase"/> element into the
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to insert into the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.ReadOnly(SchemaExplorer.DataObjectBaseCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Remove(SchemaExplorer.DataObjectBase)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.DataObjectBase"/>
            from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.DataObjectBase"/> object
            to remove from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.Synchronized(SchemaExplorer.DataObjectBaseCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.DataObjectBase"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>DataObjectBaseCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.DataObjectBase"/> elements in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.DataObjectBase"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.DataObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataObjectBase"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.DataObjectBase"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.DataObjectBase"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.DataObjectBase"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.DataObjectBaseCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.DataObjectBase"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.DataObjectBaseCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </summary>
            <remarks>
            <b>ICommandSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaCollection.CopyTo(SchemaExplorer.CommandSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ICommandSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandSchema"/> elements copied from the <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ICommandSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ICommandSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ICommandSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ICommandSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ICommandSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ICommandSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.CommandSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ICommandSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Add(SchemaExplorer.CommandSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.CommandSchema"/> to the end
            of the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ICommandSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Contains(SchemaExplorer.CommandSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.CommandSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ICommandSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandSchemaList"/>
            contains a <see cref="T:SchemaExplorer.CommandSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ICommandSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Contains(System.String,System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandSchemaList"/>
            contains a <see cref="T:SchemaExplorer.CommandSchema"/> with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the <see cref="T:SchemaExplorer.CommandSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </param>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="owner"/> and <paramref name="name"/> combination is found in the
            <see cref="T:SchemaExplorer.ICommandSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.IndexOf(SchemaExplorer.CommandSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.CommandSchema"/> in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.IndexOf(System.String,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="owner"/> and <paramref name="name"/> combination in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <param name="owner">The <paramref name="owner"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </param>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="owner"/> and <paramref name="name"/> combination
            in the <see cref="T:SchemaExplorer.ICommandSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Insert(System.Int32,SchemaExplorer.CommandSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.CommandSchema"/> element into the
            <see cref="T:SchemaExplorer.ICommandSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ICommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.Remove(SchemaExplorer.CommandSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.CommandSchema"/>
            from the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ICommandSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ICommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ICommandSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ICommandSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.CommandSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ICommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ICommandSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaList.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the 
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </summary>
            <remarks>
            <b>ICommandSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.CommandSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.CommandSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ICommandSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ICommandSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.CommandSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </summary>
            <remarks>
            <b>CommandSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor(SchemaExplorer.CommandSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor(SchemaExplorer.CommandSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.CommandSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Add(SchemaExplorer.CommandSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.CommandSchema"/> to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.AddRange(SchemaExplorer.CommandSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.AddRange(SchemaExplorer.CommandSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.CommandSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.BinarySearch(SchemaExplorer.CommandSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.CommandSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.CommandSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Contains(SchemaExplorer.CommandSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.CommandSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.CommandSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandSchema"/>
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Contains(System.String,System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.CommandSchema"/> with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the <see cref="T:SchemaExplorer.CommandSchema"/>
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </param>
            <param name="name">The <paramref name="CommandSchemaCollection"/> of the <see cref="T:SchemaExplorer.CommandSchema"/>
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="owner"/> and <paramref name="name"/> combination is found in the
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.CopyTo(SchemaExplorer.CommandSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.CopyTo(SchemaExplorer.CommandSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.CommandSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ICommandSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ICommandSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.IndexOf(SchemaExplorer.CommandSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.CommandSchema"/> in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.IndexOf(System.String,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="owner"/> and <paramref name="name"/> combination in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="owner">The <paramref name="owner"/>
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </param>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="owner"/> and <paramref name="name"/> combination
            in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Insert(System.Int32,SchemaExplorer.CommandSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.CommandSchema"/> element into the
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.ReadOnly(SchemaExplorer.CommandSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Remove(SchemaExplorer.CommandSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.CommandSchema"/>
            from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.Synchronized(SchemaExplorer.CommandSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.CommandSchema"/> elements in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.CommandSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.CommandSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the 
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.CommandSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.CommandSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.Design.DataSourceUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ExtendedProperty.Name">
            <summary>
            The name of this extended property.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ExtendedProperty.Value">
            <summary>
            The value of this extended property.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ExtendedProperty.DataType">
            <summary>
            The data type of this extended property.
            </summary>
        </member>
        <member name="T:SchemaExplorer.SchemaUtility">
            <summary>
            Summary description for SchemaUtility.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IViewSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </summary>
            <remarks>
            <b>IViewSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaCollection.CopyTo(SchemaExplorer.ViewSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IViewSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ViewSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewSchema"/> elements copied from the <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IViewSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IViewSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IViewSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IViewSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IViewSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IViewSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IViewSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.ViewSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IViewSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Add(SchemaExplorer.ViewSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ViewSchema"/> to the end
            of the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IViewSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Contains(SchemaExplorer.ViewSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IViewSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.ViewSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IViewSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IViewSchemaList"/>
            contains a <see cref="T:SchemaExplorer.ViewSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ViewSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IViewSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Contains(System.String,System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IViewSchemaList"/>
            contains a <see cref="T:SchemaExplorer.ViewSchema"/> with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the <see cref="T:SchemaExplorer.ViewSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </param>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ViewSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="owner"/> and <paramref name="name"/> combination is found in the
            <see cref="T:SchemaExplorer.IViewSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.IndexOf(SchemaExplorer.ViewSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ViewSchema"/> in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IViewSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IViewSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.IndexOf(System.String,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="owner"/> and <paramref name="name"/> combination in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <param name="owner">The <paramref name="owner"/>
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </param>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="owner"/> and <paramref name="name"/> combination
            in the <see cref="T:SchemaExplorer.IViewSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Insert(System.Int32,SchemaExplorer.ViewSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ViewSchema"/> element into the
            <see cref="T:SchemaExplorer.IViewSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.Remove(SchemaExplorer.ViewSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ViewSchema"/>
            from the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IViewSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IViewSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IViewSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IViewSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ViewSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IViewSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaList.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the 
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IViewSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </summary>
            <remarks>
            <b>IViewSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IViewSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IViewSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.ViewSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.ViewSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IViewSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IViewSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.ViewSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </summary>
            <remarks>
            <b>ViewSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor(SchemaExplorer.ViewSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor(SchemaExplorer.ViewSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.ViewSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Add(SchemaExplorer.ViewSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ViewSchema"/> to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.AddRange(SchemaExplorer.ViewSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.AddRange(SchemaExplorer.ViewSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.ViewSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.BinarySearch(SchemaExplorer.ViewSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.ViewSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.ViewSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Contains(SchemaExplorer.ViewSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.ViewSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.ViewSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ViewSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Contains(System.String,System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.ViewSchema"/> with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the <see cref="T:SchemaExplorer.ViewSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </param>
            <param name="name">The <paramref name="ViewSchemaCollection"/> of the <see cref="T:SchemaExplorer.ViewSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="owner"/> and <paramref name="name"/> combination is found in the
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.CopyTo(SchemaExplorer.ViewSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ViewSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewSchema"/> elements copied from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.CopyTo(SchemaExplorer.ViewSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ViewSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewSchema"/> elements copied from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ViewSchema"/> elements copied from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.ViewSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IViewSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IViewSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.IndexOf(SchemaExplorer.ViewSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ViewSchema"/> in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.IndexOf(System.String,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="owner"/> and <paramref name="name"/> combination in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="owner">The <paramref name="owner"/>
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </param>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="owner"/> and <paramref name="name"/> combination
            in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Insert(System.Int32,SchemaExplorer.ViewSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ViewSchema"/> element into the
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.ReadOnly(SchemaExplorer.ViewSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Remove(SchemaExplorer.ViewSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ViewSchema"/>
            from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ViewSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.Synchronized(SchemaExplorer.ViewSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ViewSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ViewSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.ViewSchema"/> elements in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.ViewSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ViewSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination.
            </summary>
            <param name="owner">The <paramref name="owner"/> of the 
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ViewSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ViewSchema"/> element with the specified <paramref name="owner"/> and <paramref name="name"/> combination or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ViewSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.ViewSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ViewSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ViewSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IColumnSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>IColumnSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaCollection.CopyTo(SchemaExplorer.ColumnSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.IColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ColumnSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.IColumnSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IColumnSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IColumnSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.IColumnSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.IColumnSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.IColumnSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IColumnSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.ColumnSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>IColumnSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.Add(SchemaExplorer.ColumnSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ColumnSchema"/> to the end
            of the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.IColumnSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.Contains(SchemaExplorer.ColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IColumnSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.ColumnSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.IColumnSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.IColumnSchemaList"/>
            contains a <see cref="T:SchemaExplorer.ColumnSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ColumnSchema"/>
            to locate in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.IColumnSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.IndexOf(SchemaExplorer.ColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ColumnSchema"/> in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.IColumnSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.Insert(System.Int32,SchemaExplorer.ColumnSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ColumnSchema"/> element into the
            <see cref="T:SchemaExplorer.IColumnSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.IColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.Remove(SchemaExplorer.ColumnSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ColumnSchema"/>
            from the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.IColumnSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>IColumnSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IColumnSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IColumnSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ColumnSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ColumnSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.IColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.IColumnSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ColumnSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ColumnSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.IColumnSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>IColumnSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.IColumnSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IColumnSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.ColumnSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.ColumnSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.IColumnSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.IColumnSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.ColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>ColumnSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor(SchemaExplorer.ColumnSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor(SchemaExplorer.ColumnSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.ColumnSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ColumnSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Add(SchemaExplorer.ColumnSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.ColumnSchema"/> to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.AddRange(SchemaExplorer.ColumnSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.AddRange(SchemaExplorer.ColumnSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.ColumnSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ColumnSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.BinarySearch(SchemaExplorer.ColumnSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.ColumnSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Contains(SchemaExplorer.ColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.ColumnSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.ColumnSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.ColumnSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.CopyTo(SchemaExplorer.ColumnSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ColumnSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.CopyTo(SchemaExplorer.ColumnSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.ColumnSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.ColumnSchema"/> elements copied from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.ColumnSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.IColumnSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.IColumnSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.IndexOf(SchemaExplorer.ColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.ColumnSchema"/> in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Insert(System.Int32,SchemaExplorer.ColumnSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.ColumnSchema"/> element into the
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.ReadOnly(SchemaExplorer.ColumnSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Remove(SchemaExplorer.ColumnSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.ColumnSchema"/>
            from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.Synchronized(SchemaExplorer.ColumnSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.ColumnSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ColumnSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.ColumnSchema"/> elements in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.ColumnSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.ColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ColumnSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.ColumnSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.ColumnSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.ColumnSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.ColumnSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.ColumnSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ColumnSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.Design.ErrorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SchemaExplorer.DataSource">
            <summary>
            Used to store information about a data source.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ColumnSchema">
            <summary>
            Provides information about a table column.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.#ctor(SchemaExplorer.TableSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the ColumnSchema object.
            </summary>
            <param name="table">The table that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.#ctor(SchemaExplorer.TableSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ColumnSchema object.
            </summary>
            <param name="table">The table that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for the column.</param>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.Equals(System.Object)">
            <summary>
            Determines if another column is the same as this column.
            </summary>
            <param name="obj">The column to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.Table">
            <summary>
            The table that contains this column.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.IsPrimaryKeyMember">
            <summary>
            Whether or not the column is a primary key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.IsForeignKeyMember">
            <summary>
            Whether or not the column is a foreign key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.IsUnique">
            <summary>
            Whether or not this column is unique.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ICommandResultSchemaCollection">
            <summary>
            Defines size, enumerators, and synchronization methods for strongly
            typed collections of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </summary>
            <remarks>
            <b>ICommandResultSchemaCollection</b> provides an <see cref="T:System.Collections.ICollection"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaCollection.CopyTo(SchemaExplorer.CommandResultSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultSchema"/> elements copied from the <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/> is greater
            than the available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ICommandResultSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ICommandResultSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the
            <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.
            </summary>
            <value>The number of elements contained in the
            <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the
            <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/> is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize access
            to the <see cref="T:SchemaExplorer.ICommandResultSchemaCollection"/>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ICollection.SyncRoot"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandResultSchemaList">
            <summary>
            Represents a strongly typed collection of <see cref="T:SchemaExplorer.CommandResultSchema"/>
            objects that can be individually accessed by index.
            </summary>
            <remarks>
            <b>ICommandResultSchemaList</b> provides an <see cref="T:System.Collections.IList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.Add(SchemaExplorer.CommandResultSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.CommandResultSchema"/> to the end
            of the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> index at which
            the <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.Contains(SchemaExplorer.CommandResultSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>
            contains the specified <see cref="T:SchemaExplorer.CommandResultSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>
            contains a <see cref="T:SchemaExplorer.CommandResultSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandResultSchema"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.IndexOf(SchemaExplorer.CommandResultSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.CommandResultSchema"/> in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.IList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.Insert(System.Int32,SchemaExplorer.CommandResultSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.CommandResultSchema"/> element into the
            <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which
            <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than
            <see cref="P:SchemaExplorer.ICommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.Remove(SchemaExplorer.CommandResultSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.CommandResultSchema"/>
            from the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the
            <see cref="T:SchemaExplorer.ICommandResultSchemaList"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ICommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>ICommandResultSchemaList</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaList.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaList.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.IList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.CommandResultSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.CommandResultSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than
            <see cref="P:SchemaExplorer.ICommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.ICommandResultSchemaList"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.IList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaList.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandResultSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandResultSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:SchemaExplorer.ICommandResultSchemaEnumerator">
            <summary>
            Supports type-safe iteration over a collection that
            contains <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </summary>
            <remarks>
            <b>ICommandResultSchemaEnumerator</b> provides an <see cref="T:System.Collections.IEnumerator"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><c>true</c> if the enumerator was successfully advanced to the next element;
            <c>false</c> if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.MoveNext"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.ICommandResultSchemaEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position,
            which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.IEnumerator.Reset"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchemaEnumerator.Current">
            <summary>
            Gets the current <see cref="T:SchemaExplorer.CommandResultSchema"/> element in the collection.
            </summary>
            <value>The current <see cref="T:SchemaExplorer.CommandResultSchema"/> element in the collection.</value>
            <exception cref="T:System.InvalidOperationException"><para>The enumerator is positioned
            before the first element of the collection or after the last element.</para>
            <para>-or-</para>
            <para>The collection was modified after the enumerator was created.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.IEnumerator.Current"/> for details, but note
            that <b>Current</b> fails if the collection was modified since the last successful
            call to <see cref="M:SchemaExplorer.ICommandResultSchemaEnumerator.MoveNext"/> or <see cref="M:SchemaExplorer.ICommandResultSchemaEnumerator.Reset"/>.</remarks>
        </member>
        <member name="T:SchemaExplorer.CommandResultSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </summary>
            <remarks>
            <b>CommandResultSchemaCollection</b> provides an <see cref="T:System.Collections.ArrayList"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class
            that is empty and has the default initial capacity.
            </summary>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class
            that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is initially capable of storing.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity"/> is less than zero.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor(SchemaExplorer.CommandResultSchemaCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class
            that contains elements copied from the specified collection and
            that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            whose elements are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor(SchemaExplorer.CommandResultSchema[])">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class
            that contains elements copied from the specified <see cref="T:SchemaExplorer.CommandResultSchema"/>
            array and that has the same initial capacity as the number of elements copied.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultSchema"/>
            elements that are copied to the new collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Add(SchemaExplorer.CommandResultSchema)">
            <summary>
            Adds a <see cref="T:SchemaExplorer.CommandResultSchema"/> to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to be added to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:System.Object"/> to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="value">
            The object to be added to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> index at which the
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.AddRange(SchemaExplorer.CommandResultSchemaCollection)">
            <overloads>
            Adds a range of elements to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </overloads>
            <summary>
            Adds the elements of another collection to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> whose elements
            should be added to the end of the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.AddRange(SchemaExplorer.CommandResultSchema[])">
            <summary>
            Adds the elements of a <see cref="T:SchemaExplorer.CommandResultSchema"/> array
            to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="array">An <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements
            that should be added to the end of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.ToString">
            <summary>
            Builds a comma delimited list of items in the collection.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.BinarySearch(SchemaExplorer.CommandResultSchema)">
            <summary>
            Searches the entire sorted <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> for an
            <see cref="T:SchemaExplorer.CommandResultSchema"/> element using the default comparer
            and returns the zero-based index of the element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>The zero-based index of <paramref name="value"/> in the sorted
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>, if <paramref name="value"/> is found;
            otherwise, a negative number, which is the bitwise complement of the index
            of the next element that is larger than <paramref name="value"/> or, if there
            is no larger element, the bitwise complement of <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</returns>
            <exception cref="T:System.InvalidOperationException">
            Neither <paramref name="value"/> nor the elements of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            implement the <see cref="T:System.IComparable"/> interface.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Clear">
            <summary>
            Removes all elements from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clear"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Clone">
            <summary>
            Creates a shallow copy of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <returns>A shallow copy of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Clone"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Contains(SchemaExplorer.CommandResultSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            contains the specified <see cref="T:SchemaExplorer.CommandResultSchema"/> element.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.CommandResultSchema"/> with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the <see cref="T:SchemaExplorer.CommandResultSchema"/>
            to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </param>
            <returns><c>true</c> if <paramref name="name"/> is found in the
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> contains the specified element.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.CopyTo(SchemaExplorer.CommandResultSchema[])">
            <overloads>
            Copies the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> or a portion of it to a one-dimensional array.
            </overloads>
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is greater
            than the available space in the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.CopyTo(SchemaExplorer.CommandResultSchema[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>
            of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> to a one-dimensional <see cref="T:System.Array"/>,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the
            <see cref="T:SchemaExplorer.CommandResultSchema"/> elements copied from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            The <b>Array</b> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/>
            at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><para>
            <paramref name="array"/> is multidimensional.
            </para><para>-or-</para><para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para><para>-or-</para><para>
            The number of elements in the source <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is greater than the
            available space from <paramref name="arrayIndex"/> to the end of the destination
            <paramref name="array"/>.</para></exception>
            <exception cref="T:System.InvalidCastException">
            The <see cref="T:SchemaExplorer.CommandResultSchema"/> type cannot be cast automatically
            to the type of the destination <paramref name="array"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.CopyTo(System.Array)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.GetEnumerator">
            <summary>
            Returns an <see cref="T:SchemaExplorer.ICommandResultSchemaEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:SchemaExplorer.ICommandResultSchemaEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can
            iterate through the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/>
            for the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.GetEnumerator"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.IndexOf(SchemaExplorer.CommandResultSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.CommandResultSchema"/> in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.IndexOf(System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <paramref name="name"/> in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="name">The <paramref name="name"/>
            to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="name"/>
            in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:System.Object"/> in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Insert(System.Int32,SchemaExplorer.CommandResultSchema)">
            <summary>
            Inserts a <see cref="T:SchemaExplorer.CommandResultSchema"/> element into the
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to insert into the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/>
            should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.ReadOnly(SchemaExplorer.CommandResultSchemaCollection)">
            <summary>
            Returns a read-only wrapper for the specified <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> to wrap.</param>
            <returns>A read-only wrapper around <paramref name="collection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Remove(SchemaExplorer.CommandResultSchema)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:SchemaExplorer.CommandResultSchema"/>
            from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.CommandResultSchema"/> object
            to remove from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:System.Object"/>
            from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            This argument must be compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.
            This argument can be a null reference.
            </param>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/>
            is not compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes the specified range of elements from the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Reverse">
            <overloads>
            Reverses the order of the elements in the 
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Reverses the order of the elements in the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to reverse.</param>
            <param name="count">The number of elements to reverse.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Reverse"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Sort">
            <overloads>
            Sorts the elements in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> or a portion of it.
            </overloads>
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            using the <see cref="T:System.IComparable"/> implementation of each element.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the elements in the specified range 
            using the specified <see cref="T:System.Collections.IComparer"/> interface.
            </summary>
            <param name="index">The zero-based starting index of the range
            of elements to sort.</param>
            <param name="count">The number of elements to sort.</param>
            <param name="comparer">
            <para>The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</para>
            <para>-or-</para>
            <para>A null reference to use the <see cref="T:System.IComparable"/> implementation 
            of each element.</para></param>
            <exception cref="T:System.ArgumentException">
            <paramref name="index"/> and <paramref name="count"/> do not denote a
            valid range of elements in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="count"/> is less than zero.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Sort"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.Synchronized(SchemaExplorer.CommandResultSchemaCollection)">
            <summary>
            Returns a synchronized (thread-safe) wrapper
            for the specified <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <param name="collection">The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> to synchronize.</param>
            <returns>
            A synchronized (thread-safe) wrapper around <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="collection"/> is a null reference.</exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> to a new
            <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </summary>
            <returns>A one-dimensional <see cref="T:System.Array"/> of <see cref="T:SchemaExplorer.CommandResultSchema"/>
            elements containing copies of the elements of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.ToArray"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            <para>The <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</para>
            <para>-or-</para>
            <para>The <b>CommandResultSchemaCollection</b> has a fixed size.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.TrimToSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.InnerArray">
            <summary>
            Gets the list of elements contained in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> instance.
            </summary>
            <value>
            A one-dimensional <see cref="T:System.Array"/> with zero-based indexing that contains all 
            <see cref="T:SchemaExplorer.CommandResultSchema"/> elements in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </value>
            <remarks>
            Use <b>InnerArray</b> to access the element array of a <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            instance that might be a read-only or synchronized wrapper. This is necessary because
            the element array field of wrapper classes is always a null reference.
            </remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.Capacity">
            <summary>
            Gets or sets the capacity of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <value>The number of elements that the
            <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> can contain.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <b>Capacity</b> is set to a value that is less than <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Capacity"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <value>
            The number of elements contained in the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Count"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> has a fixed size.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> has a fixed size;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsFixedSize"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.
            </summary>
            <value><c>true</c> if the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only;
            otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsReadOnly"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>
            is synchronized (thread-safe).
            </summary>
            <value><c>true</c> if access to the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is
            synchronized (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.</value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.IsSynchronized"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:SchemaExplorer.CommandResultSchema"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:SchemaExplorer.CommandResultSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultSchema"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.CommandResultSchema"/> element with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The <paramref name="name"/> of the 
            <see cref="T:SchemaExplorer.CommandResultSchema"/> element to get or set.</param>
            <value>
            The <see cref="T:SchemaExplorer.CommandResultSchema"/> element with the specified <paramref name="name"/> or null if no such element can be found.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>
            The element at the specified <paramref name="index"/>. When the property
            is set, this value must be compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <see cref="P:SchemaExplorer.CommandResultSchemaCollection.Count"/>.</para>
            </exception>
            <exception cref="T:System.InvalidCastException">The property is set to a value
            that is not compatible with <see cref="T:SchemaExplorer.CommandResultSchema"/>.</exception>
            <exception cref="T:System.NotSupportedException">
            The property is set and the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> is read-only.</exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchemaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </summary>
            <value>An object that can be used to synchronize
            access to the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/>.
            </value>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.SyncRoot"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.Design.TableSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
