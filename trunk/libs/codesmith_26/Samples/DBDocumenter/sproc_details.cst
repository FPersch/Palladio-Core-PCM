<%-- 
CodeSmith DBDocumenter Templates
Author:  Jason Alexander (jason@ngallery.org)
Website: http://www.ngallery.org/dbdocumenter/
%>
<%@ CodeTemplate Language="C#" TargetLanguage="HTML" Description="Template description here." %>
<%@ Property Name="SourceCommand" Type="SchemaExplorer.CommandSchema" Category="Context" Description="Stored procedure that the documentation should be based on." %>
<%@ Property Name="CommandIndex" Type="System.Int32" Category="Context" Description="The index of the command in the overall collection." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<script runat="template">


public void PrintParameterDocumentation(ParameterSchema parameter)
{
	Response.WriteLine("        <tr>");

	Response.WriteLine("          <td align=\"center\">");
	// Is the parameter nullable?
	if (parameter.AllowDBNull)
	{
		Response.WriteLine("            <img src=\"images/check_icon.gif\" border=\"0\">");
	}
	else
	{
		Response.WriteLine("            <img src=\"images/unchecked_icon.gif\" border=\"0\">");
	}
	Response.WriteLine("          </td>");
	
	Response.WriteLine("		  <td>");
	Response.WriteLine("            <span class=\"bodyText\">" + parameter.Name + "</span>");
	Response.WriteLine("          </td>");
	Response.WriteLine("          <td>");
	Response.WriteLine("            <span class=\"bodyText\">" + parameter.NativeType + "</span>");
	Response.WriteLine("          </td>");

	Response.WriteLine("          <td>");
	Response.WriteLine("            <span class=\"bodyText\">" + parameter.Size);
	
	if (parameter.NativeType == "numeric")
	{
		if (parameter.Precision != 0)
		{
			Response.WriteLine("            (" + parameter.Precision + ", " + parameter.Scale + ")");
		}
	}
	
	Response.WriteLine("          </span></td>");	

	Response.WriteLine("          <td>");
	
	// Does this column have a default value?
	if (parameter.ExtendedProperties["CS_Default"].Value != "")
	{
		Response.WriteLine("            <span class=\"bodyText\">" + parameter.ExtendedProperties["CS_Default"].Value + "</span>");
	}
	
	Response.WriteLine("          </td>");	
	
	Response.WriteLine("        </tr>");

	if (parameter.ExtendedProperties["CS_Description"].Value != "")
	{
		Response.WriteLine("        <tr>");
		Response.WriteLine("          <td>&nbsp;</td>");
		Response.WriteLine("          <td class=\"descriptionBlock\" colspan=\"4\">");
		Response.WriteLine("            " + parameter.ExtendedProperties["CS_Description"].Value);
		Response.WriteLine("          </td>");
		Response.WriteLine("        </tr>");
	}

}


</script>
<html>
<head>
	<title>Stored Procedure Details</title>
	<link href="dbdocs.css" type="text/css" rel="stylesheet" />	
</head>
<body>

<center>
<table border="0" width="80%">
	<tr>
		<td class="sprocheaderbar" width="85%">
			<img src="images/stored_proc_icon.gif" border="0">&nbsp;&nbsp;<%= SourceCommand.FullName %>&nbsp;&nbsp;<i>(Created <%= SourceCommand.DateCreated %>)</i>
		</td>
		<td class="sprocheaderbar" align="center">
			[<a href="sproc_<%= CommandIndex %>.html">View</a>]
		</td>
	</tr>
<%
	if (SourceCommand.Description != "")
	{
%>	
	<tr>
		<td class="descriptionBlock" colspan="2">
			<%= SourceCommand.Description %>
		</td>
	</tr>
<%
	}
%>
	<tr>
		<td align="center" colspan="2">
<%		
		// Input Parameters
		if (SourceCommand.InputParameters.Count != 0)
		{
%>
			<table border="0" width="80%">
				<tr>
					<td><span class="subheader">Input Parameters</span></td>
				</tr>
				<tr>
					<td class="columnheaderbar">Nulls</td>
					<td class="columnheaderbar">Name</td>
					<td class="columnheaderbar">Data Type</td>
					<td class="columnheaderbar">Size(Precision,Scale)</td>
					<td class="columnheaderbar">Default</td>
				</tr>
<%			
			for (int j = 0; j < SourceCommand.InputParameters.Count; j++)
			{
				this.PrintParameterDocumentation(SourceCommand.InputParameters[j]);
			}
%>
			</table>
			<br>
<%
		}
		
		// Output Parameters
		if (SourceCommand.OutputParameters.Count != 0)
		{
%>
			<table border="0" width="80%">
				<tr>
					<td><span class="subheader">Output Parameters</span></td>
				</tr>
				<tr>
					<td class="columnheaderbar">Nulls</td>
					<td class="columnheaderbar">Name</td>
					<td class="columnheaderbar">Data Type</td>
					<td class="columnheaderbar">Size(Precision,Scale)</td>
					<td class="columnheaderbar">Default</td>
				</tr>
<%
			for (int j = 0; j < SourceCommand.OutputParameters.Count; j++)
			{
				this.PrintParameterDocumentation(SourceCommand.OutputParameters[j]);			
			}
%>			
			</table>
<%
		}
		
		// If a proc has neither input or output parameters, spit something out.
		if (SourceCommand.InputParameters.Count == 0 &&
		    SourceCommand.OutputParameters.Count == 0)
		{
%>		
			<center><span class="bodyText">This stored procedure has no parameters.</span></center>
<%			
		}
%>
		
		</td>
	</tr>
	<tr>
		<td>
			&nbsp;<br>
		</td>
	</tr>
</table>
</center>

</body>
</html>