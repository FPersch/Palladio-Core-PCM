CSLA CodeSmith Templates C# Version

TODO:

History:
1.2.0	By: Ricky Supit
This version contain changes that intended to clean up any non applicable property.
- added IsSaveable property on all editable templates
- removed non common properties from CSLAHelper.cs then moved them inside template.  
	Except for GUIRender, every template is now contain only related properties.
- NameValueList will use a newly added NameValueList.cs code-behind file.
- rearranged properties for easier access.
- added Validate function in GUIRender to check for required property based on selected template.
- modified setProperties function in GUIRender to set property based on selected template.
- fix declaration and scope bug.


1.1.0	By: Ricky Supit
This version contains all BO structures based on CSLA .NET as described in Rocky's book.
It also support the Nov 1, 2003 cummulative update, which better support code generation and developer code.
- convert CustomCodeClass.cst, GUIRender.cst.
- convert ReadOnly.cst, ReadOnlyCollection.cst.
- corrected CRUD functions when using ado transaction. 
	root object always create connection and transaction then pass down the transaction to its child(ren).
	child object always receive transaction then use it to get db connection.
- Add CheckRules() which contain centralized (object level) BrokenRules, I use Petar's solution which I found more
	usefull for my projects compare to Rocky's centralized (app level) BrokenRules (which is still in BETA)
- Change New<ObjectName> to always call DataPortal.Create() this allow developer's constructor to be private.
- Moved OutputDirectory property out fron CSLAHelper.cs into GUIRender.cst
- Add Structure option on several functions in CSLAHelper.
- use relative level (instead of hardcoded) in all csts to allow better indentation
- few cosmetic fixed.

1.0.0	By: Ricky Supit
My fist attempt to convert Matthew Altadonna's code (1.3.1205) to C# Version
The work is no where near close to the original code, but enough to support all included templates
Base Class creation is available to support BaseClass-->Class Methodology, 
but has not been tested because CustomCodeClass.cst is not yet converted.
- Convert CSLAHelper.vb to CSLAHelper.vb 
- Convert EditableRoot.cst
- Convert EditableChild.cst
- Convert EditableRootCollection.cst
- Convert EditableChildCollection.cst
- Convert NameValueList.cst
- Convert EditableSwitchable.cst