<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Palladio.QoSAdaptor.PatternSelection</name>
    </assembly>
    <members>
        <member name="T:Palladio.QoSAdaptor.PatternSelection.DetailView">
            <summary>
            This class implements a detailed view for a 
            PatternDescription. The view is realized as a ListView
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.DetailView.pattern">
            <summary>
            The pattern that shall be shown in detail. 
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.DetailView.listView">
            <summary>
            The list view containing all detail information.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.#ctor(Palladio.QoSAdaptor.Pattern.IPatternDescription)">
            <summary>
            Constructor. 
            </summary>
            <param name="pattern">The PatternDescription of the 
            chosen pattern</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.Dispose(System.Boolean)">
            <summary>
            Die verwendeten Ressourcen bereinigen.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.InitializeComponent">
            <summary>
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.InitializeListView">
            <summary>
            This method creates the listView of the pattern given
            in the constructor. 
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.CreateItems">
            <summary>
            Method used by InitializeListView to encapsulate the 
            creation of the ListItems.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.AddGeneralItems">
            <summary>
            Adds the general information of the pattern to the list view.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.AddMismatchItems">
            <summary>
            Adds the items corresponding to the mismatch attributes of the 
            current pattern.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.AddAdaptorTemplateItems">
            <summary>
            Adds the items corresponding to the adaptor templates of the 
            current pattern.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.AddPredictionModelItems">
            <summary>
            Adds the items corresponding to the prediction models of the 
            current pattern.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.AddItem(System.String,System.String,System.Boolean)">
            <summary>
            Adds an item to this.listView. The text is always put into one 
            item. If the subtext is longer than 120 characters than it is 
            split and additional items with an empty first column are added.
            </summary>
            <param name="text">Text in the first column.</param>
            <param name="subtext">Text in the second column.</param>
            <param name="highlight">True, if text shall be highlighted, i.e.
            is a heading.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.DetailView.GetSubStrings(System.String,System.Int32,System.Char[])">
            <summary>
            Splits the string in substrings. The maximum lenghth of the 
            substrings can be given. Strings are split at ' ' so that words 
            are not split. 
            To use this method in a generic context it should be checked 
            that the longest word in words is shorter than length. This is not
            implemented yet since the method is defined in a fixed context.
            </summary>
            <param name="text">The text that shall be split into substrings.
            </param>
            <param name="length">The maximum length of a substring.</param>
            <param name="separators">One or more separators that indicate 
            where the text can be split.</param>
            <returns>A ICollection of strings containing the computed 
            substrings.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.PatternSelection.ISelector">
            <summary>
            The provided interface of the Palladio.QoSAdaptor.PatternSelection
            component.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.ISelector.StartSelection(Palladio.Utils.Collections.Hashmap,System.String,System.String)">
            <summary>
            Starts the selection process, using a GUI where the user gets an 
            overview over found mismatches and patterns that are able to 
            correct these mismatches and returns a pattern chosen by the user. 
            </summary>
            <param name="mismatchSolvingPatterns">A hashmap containing 
            mismatches and a list of PatternsDescriptions of patterns able to 
            correct these mismatches.</param>
            <param name="requiredSpecification">Textual representation of the 
            required specification.</param>
            <param name="providedSpecification">Textual representation of the 
            provided specification.</param>
            <returns>The PatternsDescription of the chosen pattern.</returns>
        </member>
        <member name="T:Palladio.QoSAdaptor.PatternSelection.SelectionDialog">
            <summary>
            This class implements a window in which one of the 
            recommended patterns can be chosen. 
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.components">
            <summary>
            Erforderliche Designervariable.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.#ctor(Palladio.Utils.Collections.Hashmap,Palladio.QoSAdaptor.PatternSelection.Selector)">
            <summary>
            Constructor. 
            </summary>
            <param name="mismatchSolvingPatterns">A hashmap with mismatches as
            keys and lists of patterns that are able to solve the 
            corresponding mismatches as values.</param>
            <param name="controller">The controller that handles the events
            of this form.</param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.Dispose(System.Boolean)">
            <summary>
            Die verwendeten Ressourcen bereinigen.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.InitializeComponent">
            <summary>
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.InitialiseChoice">
            <summary>
            This method creates a choice view for different
            design patterns. It also creates buttons which lead
            to a detailed view of the corresponding
            PatternDescriptions.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.AddMismatch(Palladio.QoSAdaptor.Interfaces.IMismatch)">
            <summary>
            Adds the mismatch text and the belonging patterns to the GUI.
            </summary>
            <param name="mismatch"></param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.AddGeneratorButton">
            <summary>
            Adds the "Generate Adaptor" and "Generate Prediction Model" buttons
            to the GUI.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.AddSpecificationButtons">
            <summary>
            Adds the "Provided Specification" and "Required Specification" 
            buttons to the GUI.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.ListPatterns(System.Collections.IList)">
            <summary>
            Lists the given patterns and creates a choice and a details button
            for each pattern.
            </summary>
            <param name="mismatchPatterns">A list of patterns.</param>
        </member>
        <member name="P:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.RButtons">
            <summary>
            A list of all radio buttons of the GUI. Each button is linked to a
            certain pattern.
            </summary>
        </member>
        <member name="P:Palladio.QoSAdaptor.PatternSelection.SelectionDialog.GeneratorButton">
            <summary>
            The button pressed to generate an adaptor.
            </summary>
        </member>
        <member name="T:Palladio.QoSAdaptor.PatternSelection.Selector">
            <summary>
            Main class of the PatterSelection component. Controls the the GUI for 
            user choice.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.Selector.mismatchSolvingPatterns">
            <summary>
            Hashmap that contains all mismatches and a list of patterns for 
            each mismatch that is able to correct the mismatch.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.Selector.selectionDialog">
            <summary>
            Instance of the selection GUI
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.Selector.requiredSpecification">
            <summary>
            Interface model specification of the required interface.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.Selector.providedSpecification">
            <summary>
            Interface model specification of the provided interface.
            </summary>
        </member>
        <member name="F:Palladio.QoSAdaptor.PatternSelection.Selector.selectedPattern">
            <summary>
            The selected pattern.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.Selector.StartSelection(Palladio.Utils.Collections.Hashmap,System.String,System.String)">
            <summary>
            Starts the selection process, using a GUI where the user gets an 
            overview over found mismatches and patterns that are able to 
            correct these mismatches and returns a pattern chosen by the user. 
            
            TODO: Use graphical representations of the specifications?
            </summary>
            <param name="mismatchSolvingPatterns">A hashmap containing 
            mismatches and a list of PatternsDescriptions of patterns able to 
            correct these mismatches.</param>
            <param name="requiredSpecification">Textual representation of the 
            required specification.</param>
            <param name="providedSpecification">Textual representation of the 
            provided specification.</param>
            <returns>The PatternsDescription of the chosen pattern.</returns>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.Selector.Button_Click(System.Object,System.EventArgs)">
            <summary>
            This method is called, when one of the buttons for the
            detailed view is clicked. 
            The method opens a new window which lists the details
            of the chosen pattern. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.Selector.Generator_Click(System.Object,System.EventArgs)">
            <summary>
            This method is called, when a generator button has 
            been clicked. 
            The method opens a new instance of CodeSmith for 
            every template that is listed in the 
            PatternDescription of the chosen pattern. 
            If no pattern is chosen a MessageBox is opened. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.Selector.Specification_Click(System.Object,System.EventArgs)">
            <summary>
            This method is called, when a specification button has 
            been clicked. 
            The method opens a new TextBox is open showing the chosen QML
            specification.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.Selector.ChoosePattern(System.String)">
            <summary>
            This is a helper method for generator_Click which
            chooses the selected pattern and calls another
            functions to open the corresponding templates.
            </summary>
            <param name="buttonName">The name of the selected 
            radio button.</param>
        </member>
        <member name="T:Palladio.QoSAdaptor.PatternSelection.TextWindow">
            <summary>
            Creates a new window including a text box.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.TextWindow.#ctor(System.String,System.String)">
            <summary>
            Creates a new TextWindow. 
            </summary>
            <param name="name">The name of the window.</param>
            <param name="text">The text shown in the TextBox of this window.
            </param>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.TextWindow.Dispose(System.Boolean)">
            <summary>
            Die verwendeten Ressourcen bereinigen.
            </summary>
        </member>
        <member name="M:Palladio.QoSAdaptor.PatternSelection.TextWindow.InitializeComponent">
            <summary>
            Erforderliche Methode für die Designerunterstützung. 
            Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
            </summary>
        </member>
    </members>
</doc>
