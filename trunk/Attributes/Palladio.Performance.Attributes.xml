<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Attributes</name>
    </assembly>
    <members>
        <member name="T:Palladio.Performance.Attributes.PercentileAspect">
            <summary>
            Class representing a percentile aspect of the QML.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.PercentileAspect.ToString">
            <summary>
            Creates a string representation of thew object.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.PercentileAspect.#ctor(System.Double,System.Int64)">
            <summary>
            Constructor. 
            </summary>
            <param name="percentile">Percentile.</param>
            <param name="timeValue">Time value.</param>
        </member>
        <member name="P:Palladio.Performance.Attributes.PercentileAspect.Percentile">
            <summary>
            Percentile.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.PercentileAspect.TimeValue">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:Palladio.Performance.Attributes.QMLAttribute">
            <summary>
            Describes the time behavior of a service by a list of percentile aspects of the
            Quality of Service Modeling Language. 
            Usage:   Percentile   |   Value
                         20%          20ms
                         40%          77ms
                         100%         100ms
            
            A percentile and a value together builds a qml aspect. The first line means that 20% of all execution
            of a service is below 20 ms.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.1  2005/08/12 07:59:19  helgeh
            Initial impot after refactoring.

            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add

            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.

            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.

            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.

            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.

            RegularExpressions:
            - No changes.

            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.

            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.

            Unit Tests added.
            Updated documentation.

            
            </pre>
            </remarks>
        </member>
        <member name="F:Palladio.Performance.Attributes.QMLAttribute.aspects">
            <summary>
            A list of percentile aspects.
            </summary>
        </member>
        <member name="F:Palladio.Performance.Attributes.QMLAttribute.attributeType">
            <summary>
            Define the AttributeType.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.#ctor(System.Double[],System.Int64[])">
            <summary>
            Constructor.
            </summary>
            <param name="percentile">Percentile.</param>
            <param name="values">Time Consumtion.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.SetAspectValues(System.Double[],System.Int64[])">
            <summary>
            Sets the aspect values-
            </summary>
            <param name="percentile">Percentile.</param>
            <param name="values">Time consumption.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.Validate(System.Double[],System.Int64[])">
            <summary>
            Checks whether the aspects are in ascending order and the highest percentile is not bigger than
            100%.
            </summary>
            <param name="percentile">Percentiles of the aspect.</param>
            <param name="values">values of the aspect.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.GetMaxTime">
            <summary>
            Returns the maximum time value.
            </summary>
            <returns>Maximum time value.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.GetQmlDensityFunction">
            <summary>
            Returns the density function of the QMLAttribute.
            </summary>
            <returns>Density function of the QMLAttribute</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.GetAttribute(Palladio.Attributes.IAttributable)">
            <summary>
            Returns the QMLAttribute of the object. If it
            has no QMLAttribute null is returned.
            </summary>
            <param name="obj">Object for which the <c>QMLAttribute</c> is requested.</param>
            <returns><c>QMLAttribute</c> of the object.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.ToString">
            <summary>
            Creates a string representation of thew object.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.Equals(System.Object)">
            <summary>
            Compares both objects of equality.
            </summary>
            <param name="obj">Object which is compared with this.</param>
            <returns>True if both objects are equal. False else.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.GetHashCode">
            <summary>
            Hash function.
            </summary>
            <returns>Hashcode.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.SaveAsXml(System.String)">
            <summary>
            Stores the <c>QMLAttribute</c> as file.
            </summary>
            <param name="file">Name of the file.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.QMLAttribute.Clone">
            <summary>
            Returns a flat copy of the QMLAttribute.
            </summary>
            <returns>Copy of the <c>QMLAttribute</c>.</returns>
        </member>
        <member name="P:Palladio.Performance.Attributes.QMLAttribute.AttributeType">
            <summary>
            AttributeType of the QmlAttribute.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.QMLAttribute.Length">
            <summary>
            Number of aspects.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.QMLAttribute.Aspects">
            <summary>
            A list of percentile aspects.
            </summary>
        </member>
        <member name="T:Palladio.Performance.Attributes.QmlDensityFunction">
            <summary>
            Containing the probabilities of the density function and the distance between the values. 
            This function is not equidistant.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.QmlDensityFunction.#ctor(System.Int32)">
            <summary>
            Constructor. 
            </summary>
            <param name="length">Number of function values.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.QmlDensityFunction.GetDistance">
            <summary>
            Returns an array 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palladio.Performance.Attributes.QmlDensityFunction.QmlDensityFunctionValues">
            <summary>
            Function values.
            </summary>
        </member>
        <member name="T:Palladio.Performance.Attributes.QmlDensityFunctionValue">
            <summary>
            Class representing a function value.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.QmlDensityFunctionValue.#ctor(System.Int64,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="value">x-value of the function value.</param>
            <param name="probability">y-value of the function value.</param>
        </member>
        <member name="P:Palladio.Performance.Attributes.QmlDensityFunctionValue.Value">
            <summary>
            x-value of the function value.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.QmlDensityFunctionValue.Probability">
            <summary>
            y-value of the function value.
            </summary>
        </member>
        <member name="T:Palladio.Performance.Attributes.AttributeTransformer">
            <summary>
            Class for transforming or generating Attributes. All methods are static.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.1  2005/08/12 07:59:19  helgeh
            Initial impot after refactoring.

            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add

            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.

            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.

            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.

            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.

            RegularExpressions:
            - No changes.

            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.

            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.

            Unit Tests added.
            Updated documentation.

            
            </pre>
            </remarks>
        </member>
        <member name="M:Palladio.Performance.Attributes.AttributeTransformer.CreateProbabilityAttributeForTransition(Palladio.FiniteStateMachines.ITransition)">
            <summary>
            Creates a ProbabilityAttribute for a transition. The probability depends on the measure:
            NumberOfVisits(transition)/NumberOfVisits(sourceState)
            </summary>
            <param name="transition">A Transition with a MeasureAttribute. The source state also must have 
            a Measure Attribute</param>
            <returns>Probability for the transition.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.AttributeTransformer.MeasureAttribute2RandomVariable(Palladio.Performance.Attributes.MeasureAttribute,System.Int32)">
            <summary>
            Creates a new Random Variable out of the MeasureAttribute. 
            </summary>
            <param name="measure">Attribute containing all measures</param>
            <param name="samplingrate">SamplingRate of the new random variable</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.AttributeTransformer.DetermineFrequencyOfEcexutionTimes(Palladio.Performance.Attributes.MeasureAttribute)">
            <summary>
            Determines the frequency of each execution time of the <c>MeasureAttribute</c>.
            </summary>
            <param name="measure"><c>MeasureAttribute</c> containing the measures.</param>
            <returns>Hashtable that contains the frequency for each execution time.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.AttributeTransformer.RandomVariable2QML(Palladio.Performance.Attributes.RandomVariable)">
            <summary>
            Converts a RandomVariable to a QMLAttribute. 
            This is a conversion from density function to distribution function.
            </summary>
            <param name="rand"><c>RandomVariable</c> to be transformed.</param>
            <returns>A new QMLAttribute equivalent to the RandomVariable.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.AttributeTransformer.Qml2RandomVariable(Palladio.Performance.Attributes.QMLAttribute)">
            <summary>
            Creates a RandomVariable out of a QML Specification. This is a conversion from distribution function
            to density function.
            The aspects must be defined in ascending order. 
            </summary>
            <param name="qml">The QMLAttribute.</param>
            <returns>A new RandomVariable which density function has a fixed samplingrate.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.AttributeTransformer.ComputeProbabilities(Palladio.Performance.Attributes.QMLAttribute)">
            <summary>
            Computes the probabilities for an equidistant probability density function.
            </summary>
            <param name="qml"><c>QMLAttribute</c> which shall be converted.</param>
            <returns>Probabilities for an equidistant probability density function.</returns>
        </member>
        <member name="T:Palladio.Performance.Attributes.FourierAttribute">
            <summary>
            Attribute containing the fourier transformed probability density function.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.1  2005/08/12 07:59:19  helgeh
            Initial impot after refactoring.

            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add

            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.

            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.

            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.

            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.

            RegularExpressions:
            - No changes.

            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.

            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.

            Unit Tests added.
            Updated documentation.

            
            </pre>
            </remarks>
        </member>
        <member name="F:Palladio.Performance.Attributes.FourierAttribute.function">
            <summary>
            Fourier transformed probability density function.
            </summary>
        </member>
        <member name="F:Palladio.Performance.Attributes.FourierAttribute.attributeType">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.FourierAttribute.#ctor(Palladio.Performance.Math.IFourierFunction)">
            <summary>
            Constructor
            </summary>
            <param name="ff">Fourier transformed function.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.FourierAttribute.GetAttribute(Palladio.Attributes.IAttributable)">
            <summary>
            Returns the FourierAttribute of the <c>IAttributable</c>. If it
            has no FourierTimeAttribute null is returned.
            </summary>
            <param name="obj"><c>IAttributable</c> for which the FourierAttribute is requested.</param>
            <returns><c>FourierAttribute</c> of the <c>IAttributable</c> or null if it has no.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.FourierAttribute.SetAttribute(Palladio.Attributes.IAttributable,Palladio.Performance.Attributes.FourierAttribute)">
            <summary>
            Attaches a <c>FourierAttribute</c> to an object.
            </summary>
            <param name="obj"><c>IAttributable</c> to which the FourierAttribute shall be added.</param>
            <param name="fourier">The <c>FourierAttribute</c> which shall be added to the object.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.FourierAttribute.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.FourierAttribute.Deserialize(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.FourierAttribute.Clone">
            <summary>
            Creates a Copy of the <c>FourierAttribute</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palladio.Performance.Attributes.FourierAttribute.Function">
            <summary>
            Fourier transformed probability density function.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.FourierAttribute.AttributeType">
            <summary>
            Type of the FourierTimeAttribute.
            </summary>
        </member>
        <member name="T:Palladio.Performance.Attributes.Measure">
            <summary>
            Class holding a measure value.
            </summary>
        </member>
        <member name="F:Palladio.Performance.Attributes.Measure.executionTime">
            <summary>
            Execution time of the measure.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.Measure.#ctor(System.Int64)">
            <summary>
            Constructor. Creates a new Measure object.
            </summary>
            <param name="executionTime">Execution time of the measure.</param>
        </member>
        <member name="T:Palladio.Performance.Attributes.MeasureAttribute">
            <summary>
            Attribute containing measured execution times.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.1  2005/08/12 07:59:19  helgeh
            Initial impot after refactoring.

            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add

            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.

            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.

            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.

            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.

            RegularExpressions:
            - No changes.

            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.

            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.

            Unit Tests added.
            Updated documentation.

            
            </pre>
            </remarks>
        </member>
        <member name="F:Palladio.Performance.Attributes.MeasureAttribute.measures">
            <summary>
            A list of measures.
            </summary>
        </member>
        <member name="F:Palladio.Performance.Attributes.MeasureAttribute.attributeType">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.#ctor">
            <summary>
            Constructor. Creates a new MeasureAttribute.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.AddMesaure(System.Int64)">
            <summary>
            Adds a new measure to the MeasureAttribute.
            </summary>
            <param name="executionTime">Execution time of the measure.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.AddMeasure(System.Int64,System.String)">
            <summary>
            Adds a new measure to the MeasureAttribute.
            </summary>
            <param name="executionTime">Execution time of the measure.</param>
            <param name="number">Call number of the measure.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.GetAttribute(Palladio.Attributes.IAttributable)">
            <summary>
            Returns the MeasureAttribute of a given object.
            </summary>
            <param name="obj">Object which contains a MeasureAttribute.</param>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.AddMeasure(Palladio.Attributes.IAttributable,System.Int64)">
            <summary>
            Adds a new measure to the MeasureAttribute of the <c>IAttributable</c>
            </summary>
            <param name="attributable">An <c>IAttributable</c> that contains a MeasureAttribute.</param>
            <param name="executionTime">Execution time of the measure.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.Deserialize(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.MeasureAttribute.Clone">
            <summary>
            Creates a flat copy of the MeasureAttribute.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palladio.Performance.Attributes.MeasureAttribute.AttributeType">
            <summary>
            Returns the AttributeType.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.MeasureAttribute.MinMeasure">
            <summary>
            Returns the minimal execution time of all measures.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.MeasureAttribute.MaxMeasure">
            <summary>
            Returns the maximum execution time of all measures.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.MeasureAttribute.Item(System.Int32)">
            <summary>
            Measures.
            </summary>
        </member>
        <member name="T:Palladio.Performance.Attributes.ProbabilityAttribute">
            <summary>
            Attribute containig the probability of a transition. Each transition in a 
            service-effect-automaton should have an ProbabilityAttribute
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.1  2005/08/12 07:59:19  helgeh
            Initial impot after refactoring.

            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add

            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.

            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.

            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.

            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.

            RegularExpressions:
            - No changes.

            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.

            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.

            Unit Tests added.
            Updated documentation.

            
            </pre>
            </remarks>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.ToString">
            <summary>
            Retrieves a string representation of the object.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.GetAttribute(Palladio.Attributes.IAttributable)">
            <summary>
            Returns the ProbabilityAttribute of the object. If it
            has no Probability null is returned.
            </summary>
            <param name="obj"><c>IAttributable</c> for which a <c>ProbabilityAttribute</c> is requested.</param>
            <returns><c>ProbabilityAttribute</c> of the <c>IAttributable</c> or null if it has none.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.SetAttribute(Palladio.Attributes.IAttributable,System.Double)">
            <summary>
            Attaches a ProbabilityAttribute to an object.
            </summary>
            <param name="obj">Object where the Attribute shall be attached.</param>
            <param name="aValue">Probability.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.Equals(System.Object)">
            <summary>
            Compares both objects of equality.
            </summary>
            <param name="obj">Object which is compared with this.</param>
            <returns>True if both objects are equal. False else.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.GetHashCode">
            <summary>
            Hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.#ctor(System.Double)">
            <summary>
            Create a new ProbabilityAttribute and assigns aValue to it. 
            </summary>
            <param name="aValue">Probability value. It can only be inbetween 0 and 1.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.#ctor">
            <summary>
            Default Constructor with a probability of 1.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.Deserialize(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.ProbabilityAttribute.Clone">
            <summary>
            Returns a copy of the ProbabilityAttribute.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palladio.Performance.Attributes.ProbabilityAttribute.Probability">
            <summary>
            The value of the ProbabilityAttribute.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.ProbabilityAttribute.AttributeType">
            <summary>
            Type of the ProbabilityAttribute.
            </summary>
            
        </member>
        <member name="T:Palladio.Performance.Attributes.RandomVariable">
            <summary>
            Represents a random variable of a service-effect-transition or state. It
            defines the time behavior of a state or a transition in a service effect automaton.
            </summary>
            <remarks>
            <pre>
            Version history:
            
            $Log$
            Revision 1.1  2005/08/12 07:59:19  helgeh
            Initial impot after refactoring.

            Math:
            - Added DiscretePDFunction.
            - Added Fast Fourier Transformation and FourierFunction.
            - Changed operations of DiscreteFunction. The operations are independent of the sampling rate. For a probability density  function the sum of function values is a value in [0,1].
            - Added to interface IDiscreteFunction: Sum,ExpandDomainPo2, Crop, NumberOfNullValues, AdjustSamplingRate,  FunctionWithNValues, ToFile, ValueAt, DismissValuesSmalerThanN, ValueOf, MaximumDataValue
            - Altered MEthods: ExpandDomain, Scale, GetScaled, Convolution, Add

            FSMTransformer:
            - Method SEFFValidity added.
            - The Method FSMWithIntermediateState now returns a FSM, where all time consumption is contained by the input symbols of the  transitions.

            WebserverSeffFactory:
            - All service effect automaton are now IFiniteStateMachines. No use of the PAlladio.ComponentModel.

            WebserverAnalyser:
            - Data class for configuration added.
            - ConfigReader added.

            RegExASTVisitor:
            - There are now two visitors. One for the calculation in time domain and one for the calculation in frequency domain.

            RegularExpressions:
            - No changes.

            XmlSeffParser:
            - Data class for configuration added.
            - ConfigReader added.

            PerformanceCalculator:
            - Added interface IPerformanceCalculator. Added CalculatorFactory.

            Unit Tests added.
            Updated documentation.

            
            </pre>
            </remarks>
        </member>
        <member name="F:Palladio.Performance.Attributes.RandomVariable.probabilityDensityFunction">
            <summary>
            Time behavior of the RandomVariable
            </summary>
        </member>
        <member name="F:Palladio.Performance.Attributes.RandomVariable.attributeType">
            <summary>
            AttributeType.
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.GetAttribute(Palladio.Attributes.IAttributable)">
            <summary>
            Returns the RandomVariable of an object. If the RandomVariable doesn´t have a RandomVariable
            an exception is thrown.
            </summary>
            <param name="obj">Object which contains a RandomVariable.</param>
            <returns>RandomVariable of the object.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.SetAttribute(Palladio.Attributes.IAttributable,Palladio.Performance.Attributes.RandomVariable)">
            <summary>
            Attaches a RandomVariable to an object.
            </summary>
            <param name="obj">Object to which the RandomVariable shall be added.</param>
            <param name="attr">The RandomVariable which shall be added to the object.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.#ctor">
            <summary>
            Deault Constructor. The pdf has the execution time of 0 and a samplingrate of 0. 
            </summary>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.#ctor(Palladio.Performance.Math.IDiscreteFunction)">
            <summary>
            Constructor. 
            </summary>
            <param name="function">Probability density function.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.#ctor(System.Int64,Palladio.Performance.Math.IDiscreteFunction)">
            <summary>
            Constructor for RandomVariable.
            </summary>
            <param name="samplingRate">New sampling rate for the function.</param>
            <param name="function">Probability density function for the <c>RandomVariable</c>.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.#ctor(System.Int64,System.Int64,System.Double[])">
            <summary>
            Constructor for RandomVariable.
            </summary>
            <param name="minTime">Minimal execution time.</param>
            <param name="samplingRate">Distance between two values.</param>
            <param name="values">y-values of the probability density function.</param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.#ctor(Palladio.Performance.Attributes.RandomVariable)">
            <summary>
            Copy Constructor for RandomVariable.
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.AdjustSamplingRate(Palladio.Performance.Attributes.RandomVariable@,Palladio.Performance.Attributes.RandomVariable@)">
            <summary>
            Adjusts the samplingrate of both <c>RandomVariable</c> to the same value.
            </summary>
            <param name="r1"></param>
            <param name="r2"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.ToString">
            <summary>
            Returns a string representation of the PDF. Only values unlike 0 are listed.
            </summary>
            <returns>String representation of the RandomVariable.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.Equals(System.Object)">
            <summary>
            Compares both objects of equality.
            </summary>
            <param name="obj">Object which is compared with this.</param>
            <returns>True if both objects are equal. False else.</returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.GetHashCode">
            <summary>
            Hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.Serialize(System.Xml.XmlTextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.Deserialize(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Palladio.Performance.Attributes.RandomVariable.Clone">
            <summary>
            Returns a copy of the RandomVariable.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palladio.Performance.Attributes.RandomVariable.AttributeType">
            <summary>
            Attribute type.
            </summary>
        </member>
        <member name="P:Palladio.Performance.Attributes.RandomVariable.ProbabilityDensityFunction">
            <summary>
            Time consumption as a probability density function.
            </summary>
        </member>
    </members>
</doc>
