<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="FSMHelper.cs" Inherits="FSMHelper" Debug="False" Description="Template description here." %>
<%@ Import Namespace="System.Diagnostics" %>
<%@ Property Name="FSMDefStrings" Type="System.String" Category="Options" Description="Transitions of the FSM. Each transition has the following form: sourceID - methodName - destinationID" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

using System.Collections;
using Palladio.FiniteStateMachines;

namespace Palladio.Reliability.WebserverComponentModel
{
	/// <summary>
	/// </summary>
	public class WebserverProvidesFactory : WebserverModelHelper
	{
<% 
	long cBase = 0000;
	string[] fsmStrings = FSMDefStrings.Split('$');
	foreach( string fsmDefString in fsmStrings)
	{
		if (fsmDefString.Trim().Equals(""))
			continue;
		FSMInfo info = ParseFSMDefString(fsmDefString);
%>
		
		#region <%= info.InterfaceName %>
		
		public static void CreateProvidesFsmFor<%=info.InterfaceName%> (IEditableFiniteStateMachine fsm, Hashtable methodHash)
		{
			IState[] states = CreateStates(<%=CreateStateList(cBase, info.NumOfStates)%>);
			fsm.AddStates(states);
			fsm.StartState = GetState(<%=cBase + info.StartState%>);
			fsm.FinalStates = new IState[] { <%=CreateFinalStateList(cBase, info.FinalStates)%> };
<%
		long cnt = info.NumOfStates + 1;
		foreach(TransitionInfo transitionInfo in info.Transitions)
		{
%>
			AddTransition(<%=cBase + cnt%>, ref fsm, <%=cBase + transitionInfo.SourceID%>, <%=cBase + transitionInfo.DestID%>, methodHash["<%=transitionInfo.MethodName%>"]);
<%
		cnt++;
		}
%>
		}
		
		#endregion
<%
		cBase += 1000;
	}
%>
		
		private WebserverProvidesFactory()
		{
		}
	}
}
