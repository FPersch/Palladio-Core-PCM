import de::uka::ipd::sdq::pcm::repository;
import de::uka::ipd::sdq::pcm::seff;
import de::uka::ipd::sdq::pcm::system;
import de::uka::ipd::sdq::pcm::usagemodel;

String head():
	"// TODO ";

String returnValue(String type):
	head() + " return a result of type " + type;

String handleException(repository::ExceptionType ex):
	head() + "handle exception " + ex.exceptionName + "\n// "
	+ ex.exceptionMessage;

String calculateCondition():
	head() + "define and test condition";

String calculateSteps():
	head() + "fill up the for-loop";

String methodStub():
	head() + "Auto-generated method stub";

String classStub():
	head() + "Auto-generated class - fill up with non-generated code";

String testClass():
	head() + "test the system - fill up with non-generated code";

String implAction(usagemodel::AbstractUserAction a):
	head() + "warning: some unspecified action";

String implAction(usagemodel::Loop a):
	head() + "implement loop with " + a.iterations + " iterations";

String implAction(usagemodel::Branch a):
	head() + "implement branch";

String implAction(seff::AbstractAction a):
	head() + "warning: some unspecified action " + a.entityName;

String implAction(seff::LoopAction a):
	head() + "implement loop for " + a.entityName;

String implAction(seff::InternalAction a):
	head() + "implement internals of " + a.entityName;

String implAction(seff::ForkAction a):
	head() + "implement fork of " + a.entityName;

String implAction(seff::AquireAction a):
	head() + "acquire resource " + a.resourceType_Aquire.entityName;

String implAction(seff::ReleaseAction a):
	head() + "release resource " + a.resourceType_Release.entityName;