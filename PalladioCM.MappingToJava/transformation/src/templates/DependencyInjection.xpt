«EXTENSION templates::Names»
«EXTENSION templates::SystemNames»

«REM» builds one xml-file for all connectors in the system including 
assembly contexts, 
composite components, 
system borders

additional mappings for other frameworks could be added
«ENDREM»
«DEFINE glassfish(String basePackage, String subclass, String portType) FOR system::System»
	«FILE "ejb-jar.xml"»
	<?xml version="1.0" encoding="UTF-8"?>
	<ejb-jar xmlns="http://java.sun.com/xml/ns/javaee" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd" 
		version="3.0">

		<enterprise-beans>
			<!-- the following components can be accessed from clients outside the system -->
			«EXPAND beans(basePackage) FOREACH systemProvidedRole_System»
			<!-- the following components are implemented in this system -->
			«EXPAND beans(basePackage) FOR assembly_System»
			<!-- the following components are not implemented in this system 
				 and must be provided by other libraries or applications -->
			«EXPAND beans(basePackage) FOREACH requiredDelegationConnector_System»
		</enterprise-beans>
	</ejb-jar>
	«ENDFILE»
«ENDDEFINE»

«REM» configuration of Enterprise Java Beans 3.0
	  in the file /META-INF/ejb-jar.xml
«ENDREM»
«DEFINE beans(String basePackage) FOR system::SystemProvidedRole»
	«LET providedDelegationConnector_SystemProvidedRole.assemblyContext_SystemProvidedDelegationConnector AS context»
	<session> <!-- Port for «entityName» -->
		<ejb-name> «id» </ejb-name>
			<ejb-ref>
				<injection-target>
					<ejb-ref-name>ejb/component</ejb-ref-name>
					<ejb-ref-type>Session</ejb-ref-type>
					<remote> runtime.IComponentInstance </remote>
					<ejb-link> «context.id» </ejb-link>
					<injection-target-class>
						«fullQualifiedName(basePackage, context.encapsulatedComponent__AssemblyContext, interface_SystemProvidedRole)»
					</injection-target-class>
				<injection-target-name> component </injection-target-name>
			</injection-target>
		</ejb-ref>
	</session>
	«ENDLET»
	«REM» implementation class is generated in another template «ENDREM»
«ENDDEFINE»

«DEFINE beans(String basePackage) FOR system::SystemRequiredDelegationConnector»
	«LET assemblyContext_SystemRequiredDelegationConnector AS context»
	«LET systemRequiredRole_SystemRequiredDelegationConnector AS sysreq»
	<session> <!-- Port for «entityName» -->
		<ejb-name> «id» </ejb-name>
		<ejb-ref>
			<injection-target>
				<ejb-ref-name>ejb/component</ejb-ref-name>
				<ejb-ref-type>Session</ejb-ref-type>
				<remote> runtime.IComponentInstance </remote>
				<ejb-link> «context.id» </ejb-link>
				<injection-target-class>
				«fullQualifiedName(basePackage, sysreq, sysreq.interface_SystemRequiredRole)»
				</injection-target-class>
			</injection-target>
			<injection-target-name> component </injection-target-name>
		</ejb-ref>
	</session>

	<session>  <!-- Implementation for «entityName» -->
		<ejb-name> «context.id» </ejb-name>
		<ejb-ref>
			<injection-target>

			</injection-target>
			<injection-target-name>  </injection-target-name>
		</ejb-ref>
	</session>
	«ENDLET»
	«ENDLET»
«ENDDEFINE»

«DEFINE beans(String basePackage) FOR assembly::Assembly»
	«FOREACH assemblycontexts_Assembly AS context»

	<!-- Component «context.encapsulatedComponent__AssemblyContext.entityName» [«context.id»] -->
	<!-- Provided Roles -->
	«FOREACH context.encapsulatedComponent__AssemblyContext.providedRoles__ProvidesComponentType AS provRole»
		«LET provRole.providedInterface__ProvidedRole AS interface»
		<session>
			<ejb-name> «provRole.id» </ejb-name>
			<ejb-ref>
				<injection-target>
					<ejb-ref-name> ejb/component </ejb-ref-name>
					<ejb-ref-type>Session</ejb-ref-type>
					«REM» hier wird es absurd, wenn ich das Port-Konzept realisiere 
					und extra Schnittstellen für die Impl-Klasse generieren muss 
					anstatt bloß die abstrakte Oberklasse «ENDREM»
					<remote> runtime.IComponentInstance </remote>
					<ejb-link> «context.id» </ejb-link>
					<injection-target-class>
						«fullQualifiedName(basePackage, context.encapsulatedComponent__AssemblyContext)»
					</injection-target-class>
					<injection-target-name> component </injection-target-name>
				</injection-target>
			</ejb-ref>
		</session>
		«ENDLET»
	«ENDFOREACH»
	<!-- Required Roles -->
	<session>
		<ejb-name> «context.id» </ejb-name>
		«FOREACH assemblyConnectors_Assembly AS connector»
			«IF context==connector.requiringContext_SystemAssemblyConnector»
			«LET connector.requiredRole_SystemAssemblyConnector AS req»
			«LET connector.providedRole_SystemAssemblyConnector AS prov»
			<ejb-ref>
				<injection-target>
					<ejb-ref-name> ejb/«req.id» </ejb-ref-name>
					<ejb-ref-type>Session</ejb-ref-type>
					<remote> «fullQualifiedName(basePackage, req.requiredInterface__RequiredRole)» </remote>
					<ejb-link> «prov.id» </ejb-link>
					<injection-target-class>
						«fullQualifiedName(basePackage, context.encapsulatedComponent__AssemblyContext)»
					</injection-target-class>
					<injection-target-name> «prov.id» </injection-target-name>
				</injection-target>
			</ejb-ref>
			«ENDLET»
			«ENDLET»
			«ENDIF»
		«ENDFOREACH»
	</session>
	«ENDFOREACH»
«ENDDEFINE»