<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="sensorframework"
    nsURI="http://sdq.ipd.uka.de/SensorFramework/2.0.0" nsPrefix="de.uka.ipd.sdq">
  <eClassifiers xsi:type="ecore:EClass" name="AggregatedMeasurements" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="measurementRange" ordered="false"
        lowerBound="1" eType="#//MeasurementRange" eOpposite="#//MeasurementRange/aggregatedMeasurements"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="distinctValuesBeforeAggregation"
        ordered="false" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong"
        volatile="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The number of distinct data values before aggregation.&#xD;&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="distinctValuesAfterAggregation"
        ordered="false" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The number of distinct data values after aggregation.&#xD;&#xA;&#xD;&#xA;For example if measurements were aggregated to three different groups the number is three."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MeasurementRange">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The collected data can be split into several measurement ranges. A range is specified as time interval and all measurements falling into a range's interval belong to that range. And only these measurements. The intervals of different ranges are not allowed to overlap. They have to be disjunct. There might be time betweenthe end of one interval and the beginning of the next."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rawMeasurements" ordered="false"
        eType="#//RawMeasurements" containment="true" eOpposite="#//RawMeasurements/measurementRange"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="endTime" ordered="false"
        lowerBound="1" eType="#//EJSDurationMeasure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Time passed since the start of the measuring. It refers to the right end of the time interval for which the measurements are captured in this range.&#xD;&#xA;&#xD;&#xA;For example, in a simulation environment this would mean simulation time passed since the start of the simulation. In a real world environment this would be the real time passed after the measurement has been started."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="startTime" ordered="false"
        lowerBound="1" eType="#//EJSDurationMeasure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Time passed since the start of the measuring. It refers to the left end of the time interval for which the measurements are captured in this range.&#xD;&#xA;&#xD;&#xA;For example, in a simulation environment this would mean simulation time passed since the start of the simulation. In a real world environment this would be the real time passed after the measurement has been started."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="collectedData" ordered="false"
        lowerBound="1" eType="#//CollectedData" eOpposite="#//CollectedData/measurementRange"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="aggregatedMeasurements"
        ordered="false" upperBound="-1" eType="#//AggregatedMeasurements" containment="true"
        eOpposite="#//AggregatedMeasurements/measurementRange"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RawMeasurements" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Raw measurements contains an orderered list of measurements for a sensor. For each measurement at least the time when the measurement was taken is stored. Hence, n measurements lead to an array size of event time of n. I.e. inheriting classes have to ensure the same number and ordering for additionally stored measurements."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rawXValues" ordered="false"
        lowerBound="1" eType="#//RawXValues" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rawYValues" ordered="false"
        lowerBound="1" eType="#//RawYValues" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="measurementRange" ordered="false"
        lowerBound="1" eType="#//MeasurementRange" eOpposite="#//MeasurementRange/rawMeasurements"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RawXValues" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="RawYValues" abstract="true">
    <eOperations name="Statisticsonlyformeasurablevalues" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.statistics->size()=1 implies not self.oclIsKindOf(StateMeasurements)"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
      <eParameters name="context" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="statistics" ordered="false"
        eType="#//Statistics" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Statistics">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="minimum" ordered="false"
        lowerBound="1" eType="#//EJSMeasure"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="mean" ordered="false" lowerBound="1"
        eType="#//EJSMeasure"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="maximum" ordered="false"
        lowerBound="1" eType="#//EJSMeasure"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="EJSMeasure" instanceClassName="javax.measure.Measure"/>
  <eClassifiers xsi:type="ecore:EDataType" name="EJSDurationMeasure" instanceClassName="javax.measure.Measure"/>
  <eClassifiers xsi:type="ecore:EClass" name="CollectedData" eSuperTypes="#//Propertyable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="There is exactly one instance of this class for each combination of experiment run and corresponding sensor declaration."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sensor" ordered="false"
        lowerBound="1" eType="#//SensorDeclaration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="experimentRun" ordered="false"
        lowerBound="1" eType="#//ExperimentRun" eOpposite="#//ExperimentRun/collectedData"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="measurementRange" ordered="false"
        upperBound="-1" eType="#//MeasurementRange" containment="true" eOpposite="#//MeasurementRange/collectedData"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Propertyable" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="additionalInformation"
        ordered="false" upperBound="-1" eType="#//EStringtoEObjectMapEntry" containment="true"
        resolveProxies="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EStringtoEObjectMapEntry" instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" ordered="false" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SensorDeclaration" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="TODO&#xD;&#xA;&#xD;&#xA;The abstract SensorDeclaration class needs to be subclassed to create concrete Sensors that can handle specific data. Visualisations can later use the specific subtype to know the best way how to visualise the data. "/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningExperiment" ordered="false"
        lowerBound="1" eType="#//ExperimentSetting" eOpposite="#//ExperimentSetting/sensors"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="measureCharacterization"
        ordered="false" lowerBound="1" eType="#//MeasureCharacterization" containment="true"
        eOpposite="#//MeasureCharacterization/sensorDeclaration"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="persistencyKind" ordered="false"
        lowerBound="1" eType="#//PersistenceKindOptions"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExperimentSetting" eSuperTypes="#//Propertyable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An experiment setting belongs to an experiment group and consists of a fixed experimental setting, meaning all independent variables are fixed. This includes variables influencing the generation of the test data, for example the duration of a simulation run leading to the generation of the collected data (later stored in an experiment run). Such a set of collected data is stored as an experiment run. For example, an experiment setting allows repeating a single setting to study statistical significance and variance."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="experimentName" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="experimentRuns" ordered="false"
        upperBound="-1" eType="#//ExperimentRun" containment="true" eOpposite="#//ExperimentRun/experimentSetting"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sensors" ordered="false"
        upperBound="-1" eType="#//SensorDeclaration" containment="true" eOpposite="#//SensorDeclaration/owningExperiment"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExperimentRun" eSuperTypes="#//Propertyable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Experiment runs contain the collected data (results) for each replication of an experiment. The data is collected for each sensor declared in the experiment setting. There is one instance of collected data for each declared sensor.&#xD;&#xA;&#xD;&#xA;The time when the experiment was started and how long it took are stored as attributes. The end of the experiment run can be calculated by: endTime = startTime + duration."/>
    </eAnnotations>
    <eOperations name="ExactlyOneDataCollectionPerSensor" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.experimentSetting.sensors->size()=collectedData->size() and &#xD;&#xA;self.experimentSetting.sensors->forAll(s|self.collectedData->collect(sensor)->select(s2|s=s2)->size()=1)"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
      <eParameters name="context" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="collectedData" ordered="false"
        upperBound="-1" eType="#//CollectedData" containment="true" eOpposite="#//CollectedData/experimentRun"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="startTime" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Instant at which the experiment run is started."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="duration" ordered="false"
        lowerBound="1" eType="#//EJSDurationMeasure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Length of the duration in milli-seconds."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="experimentSetting" ordered="false"
        lowerBound="1" eType="#//ExperimentSetting" eOpposite="#//ExperimentSetting/experimentRuns"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MeasureCharacterization" eSuperTypes="#//Propertyable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Characterizes the meaning of the sensor's data. The Characerization is propertyable if additional context-specific information should be stored for the sensor.&#xD;&#xA;&#xD;&#xA;For example measuring the response time of a request to a system in milliseconds could result in the following values of the attributes: metric='Response Time', measuredObject='System External Requests', and unitOfMeasurements='ms'. Another example is the number of lines of code of the class java.lang.System: metric='LOC', measuredObject='Class java.lang.System', and unitOfMeasurement='Positive Integer'."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="measuredObject" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="metric" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sensorDeclaration" ordered="false"
        lowerBound="1" eType="#//SensorDeclaration" eOpposite="#//SensorDeclaration/measureCharacterization"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="PersistenceKindOptions">
    <eLiterals name="BinaryLong"/>
    <eLiterals name="BinaryDouble" value="1"/>
    <eLiterals name="XmlJScience" value="2"/>
    <eLiterals name="Emf" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LongMeasurements" eSuperTypes="#//RawYValues">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        unique="false" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="State">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stateLiteral" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateMeasurements" eSuperTypes="#//RawYValues">
    <eStructuralFeatures xsi:type="ecore:EReference" name="observedStates" ordered="false"
        upperBound="-1" eType="#//State"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StateSensor" eSuperTypes="#//SensorDeclaration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Sensor which allows to store predescribed state(s)."/>
    </eAnnotations>
    <eOperations name="PersistenceKindOnlyEmfAllowed" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.persistencyKind = PersistenceKindOptions::Emf"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
      <eParameters name="context" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="definedSensorStates" ordered="false"
        lowerBound="1" upperBound="-1" eType="#//State" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="initialState" ordered="false"
        lowerBound="1" eType="#//State"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DoubleMeasurements" eSuperTypes="#//RawYValues">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        unique="false" upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExperimentGroup" eSuperTypes="#//Propertyable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An experiment group contains all experiments which belong to a single analysis. An example for an experiment group is a scalability analysis or architectural alternative comparison including the corresponding set of experiments.&#xD;&#xA;&#xD;&#xA;Experiment groups can be either a manual or automatic analysis"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="experiments" ordered="false"
        upperBound="-1" eType="#//ExperimentSetting" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MeasurableSensor" eSuperTypes="#//SensorDeclaration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Sensor which stores any measurable or quantifyable value. The values have to be described using the JScience framework."/>
    </eAnnotations>
    <eOperations name="PersistencyKindNotEmf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="self.persistencyKind != PersistenceKindOptions::Emf"/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
      <eParameters name="context" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitOfMeasurements" ordered="false"
        lowerBound="1" eType="#//EJSUnit"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="EJSUnit" instanceClassName="javax.measure.unit.Unit"/>
  <eClassifiers xsi:type="ecore:EClass" name="JSXmlMeasurements" eSuperTypes="#//RawYValues">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Stores the JScience types for which no fast background storage facility is available."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="#//EJSMeasure"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EventTimeAggregation" eSuperTypes="#//FixedWidthAggregation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The aggregation interval is within the eventTime(s) of the measurements.&#xD;&#xA;&#xD;&#xA;An Example is to calculate the throughput per event time second if the values stored are completions of processes and summing is used to generate the aggregated values."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FixedWidthAggregation" abstract="true"
      eSuperTypes="#//AggregatedMeasurements">
    <eStructuralFeatures xsi:type="ecore:EReference" name="rawYValues" ordered="false"
        lowerBound="1" eType="#//RawYValues" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rawXValues" ordered="false"
        lowerBound="1" eType="#//Intervals" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Intervals" eSuperTypes="#//RawXValues">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="offset" ordered="false"
        lowerBound="1" eType="#//EJSMeasure"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="intervalWidth" ordered="false"
        lowerBound="1" eType="#//EJSMeasure"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numberOfIntervals" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//ELong"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueAggregation" eSuperTypes="#//FixedWidthAggregation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The aggregation interval is within the values of the measurements.&#xD;&#xA;&#xD;&#xA;An example is a histogram. The encountered values are summed up by intervals within the measured valued. They could be displayed in absolute or relative frequency afterwards."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IncreasingMeasurableSensor" eSuperTypes="#//MeasurableSensor"/>
  <eClassifiers xsi:type="ecore:EClass" name="AdvancedStatistics" eSuperTypes="#//Statistics">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="median" ordered="false"
        lowerBound="1" eType="#//EJSMeasure"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="variance" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="standardDeviation" ordered="false"
        lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JSXmlEventTimes" eSuperTypes="#//RawXValues">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Event times are stores as JScience durations."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="measurementTime" ordered="false"
        unique="false" upperBound="-1" eType="#//EJSDurationMeasure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Intentionally designed as array to allow efficient persistence. It refers to the point in time when the measurement is taken. Expresses the time passed since the start of the measuring.&#xD;&#xA;&#xD;&#xA;For example, in a simulation environment this would mean simulation time passed since the start of the simulation. In a real world environment this would be the real time passed after the measurement has been started."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DoubleEventTimes" eSuperTypes="#//RawXValues">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Event times are stored as double values with the implicit unit 'second'."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="measurementTime" ordered="false"
        upperBound="-1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IJSDuration" instanceClassName="javax.measure.quantity.Duration"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IJSQuantity" instanceClassName="javax.measure.quantity.Quantity"
      abstract="true" interface="true"/>
</ecore:EPackage>
