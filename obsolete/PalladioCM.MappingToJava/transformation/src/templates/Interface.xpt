«EXTENSION templates::Names»

«IMPORT templates»
«IMPORT de::uka::ipd::sdq::pcm::repository»

«REM» public
f: Interface in a PCM instance -> Java interface 
with the same signatures
«ENDREM»
«DEFINE file(String packageName) FOR repository::Interface»
	«LET fullQualifiedName(packageName, this) AS fqn»
		«FILE fullQualifiedPath(packageName, this)»
			«REM» interface declaration «ENDREM»
			«EXPAND Util::headerPackage(packageName, fqn) FOR this-»
			public interface «entityName»
			«FOREACH parentInterface__Interface AS p ITERATOR i SEPARATOR ","»
				«IF (i.counter1<=1)» extends «ENDIF»
				«p.entityName»
			«ENDFOREACH» 
			«REM» method declarations «ENDREM»
			{
			«FOREACH signatures__Interface AS signature»
				«EXPAND declaration FOR signature» ;
			«ENDFOREACH»
			}
		«ENDFILE»
	«ENDLET»
«ENDDEFINE»

«REM» 
signatures are mapped to:
returntype serviceName(par_1, par_2, ..., par_n) throws Ex_1, Ex_2, ..., Ex_n
with
	par_i:= Parameter on position i
	Ex_j:= Exception without order

can be used for declaration of a method
«ENDREM»
«DEFINE declaration FOR repository::Signature»
	/**
	 «EXPAND Parameter::doc FOREACH parameters__Signature-»
	 «IF returntype__Signature!=null-»
	 	«EXPAND Parameter::doc FOR returntype__Signature-»
	 «ENDIF-»
	 */
	«EXPAND Parameter::returnType FOR this-»
	«serviceName»(«EXPAND Parameter::parameter FOREACH parameters__Signature SEPARATOR ","») 
	«EXPAND exceptions FOR this-»
«ENDDEFINE»

«REM»
add a prefix that shows the implemented interface
used to allow multiple inheritance in abstract class of generated component
@see Component.xpt
this is a recursive method to include all inherited signatures
«ENDREM»
«DEFINE abstractDeclaration FOR repository::Interface»
	«EXPAND abstractDeclaration FOREACH parentInterface__Interface»
	«FOREACH signatures__Interface AS provSignature»
		public abstract «EXPAND Parameter::returnType FOR provSignature-»
		«entityName»_«provSignature.serviceName» 
		(
		«EXPAND Parameter::parameter FOREACH provSignature.parameters__Signature SEPARATOR ","»
		)
		«EXPAND exceptions FOR provSignature-» ;
	«ENDFOREACH-»
«ENDDEFINE»

«REM» can be used for definition of a method in a component's implementation class
«ENDREM»
«DEFINE definition(repository::Interface i) FOR repository::Signature»
	«EXPAND Parameter::returnType»
	«i.entityName»_«serviceName»
	(
	«EXPAND Parameter::parameter FOREACH parameters__Signature SEPARATOR ","»
	)
	«EXPAND exceptions»
«ENDDEFINE»

«REM» can be used for definition of a method in a system required role
«ENDREM»
«DEFINE definition FOR repository::Signature»
	«EXPAND Parameter::returnType»
	«serviceName»
	(
	«EXPAND Parameter::parameter FOREACH parameters__Signature SEPARATOR ","»
	)
	«EXPAND exceptions»
«ENDDEFINE»

«DEFINE exceptions FOR repository::Signature»
	«FOREACH exceptions__Signature AS ex ITERATOR i SEPARATOR ","»
		«IF (i.counter1<=1)» throws «ENDIF»
		«ex.exceptionName»
	«ENDFOREACH»
«ENDDEFINE»