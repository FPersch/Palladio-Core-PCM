/*
* generated by Xtext
*/
package org.palladiosimulator.pcm.pcmstoex.ui.contentassist;

import org.eclipse.xtext.ui.IImageHelper;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import com.google.inject.Inject;

/**
 * see http://www.eclipse.org/Xtext/documentation.html#contentAssist on how to customize content assistant
 */
public class PCMStoExProposalProvider extends org.palladiosimulator.pcm.pcmstoex.ui.contentassist.AbstractPCMStoExProposalProvider {
    private static String[][] functions = {
        {"Lognorm(x,y)","Lognorm(x,y) - "},
        {"LognormMoments(x,y)","LognormMoments(x,y) - "},
        {"Gamma(x,y)","Gamma(x,y) - "},
        {"GammaMoments(x,y)","GammaMoments(x,y) - "},
        {"Norm(x,y)","Norm(x,y) - "},
        {"Exp(x)","Exp(x) - exponential distribution"},
        {"Pois(x)","Pois(x) - Poisson distribution"},
        {"UniInt(x)","UniInt(x) - unique integer distribution"},
        {"UniDouble(x)","UniDouble(x) - unique double distribution"},
        {"Binom(x)","Binom(x) - binomial distribution"}
    };
    
    VariableContextProvider variableContext = VariableContextProvider.getInstance();
    
    @Inject
    IImageHelper imagesHelper; 
    
    @Override
    protected void collectExpression(ContentAssistContext context, ICompletionProposalAcceptor acceptor){
        super.collectExpression(context, acceptor);
        collectVariables(context, acceptor);
        collectFunctions(context, acceptor);
    }
    
    private void collectVariables(ContentAssistContext context, ICompletionProposalAcceptor acceptor){
        if(variableContext!=null){
            for(String var : variableContext.getVariables()){
                acceptor.accept(createCompletionProposal(var+".", var+" - Signatur Parameter "+var, imagesHelper.getImage("Variable.gif"), context));
            }
        }
    }
    
    private void collectFunctions(ContentAssistContext context, ICompletionProposalAcceptor acceptor){
        for(String[] func : functions){
            acceptor.accept(createCompletionProposal(func[0], func[1], imagesHelper.getImage("function.gif"), context));
        }
    }
    
    public VariableContextProvider getVarContext(){
        return variableContext;
    }
}
