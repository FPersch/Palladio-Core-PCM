«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»
«IMPORT repository»
«IMPORT resourcetype»
«IMPORT seff»
«IMPORT system»
«IMPORT core::entity»
«IMPORT core::composition»

// This set of templates expands the Component Context Pattern by Markus Voelter, which uses a
// combined port to combine all required ResourceInterfaces and this combined port is stored in the 
// main implementation and made settable by the component environment
//
«DEFINE RequiredResourceInterfaces FOR ResourceInterfaceRequiringEntity»
   «EXPAND ComponentResourceContextResourceInterface FOR this»
   «EXPAND ComponentResourceContextImpl FOR this»
   «EXPAND ComponentResourceContextMemberVar FOR this»
   «EXPAND ComponentResourceContextSetter FOR this»
   «EXPAND ComponentResourceContextGetter FOR this»
«ENDDEFINE»

«DEFINE ComponentResourceContextResourceInterface FOR ResourceInterfaceRequiringEntity»
   «FILE this.fqnContextResourceInterface().fqnToDirectoryPath()+".java"»
      package «this.fqnContextPackage()»;

      // Component context resource interface for «this.javaName()»
      public interface «this.contextResourceInterfaceName()»
      {
         «EXPAND ContextResourceInterfaceGetterSignature FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity»
         «EXPAND ContextResourceInterfaceSetterSignature FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity»
      }
   «ENDFILE»
«ENDDEFINE»

«DEFINE ComponentResourceContextImpl FOR ResourceInterfaceRequiringEntity»
   «FILE this.fqnResourceContext().fqnToDirectoryPath()+".java"»
      package «this.fqnContextPackage()»;

      // Component context class for «this.javaName()»
      public class «this.resourceContextClassName()» implements «this.fqnContextResourceInterface()»
      {
         «EXPAND ContextResourceInterfaceMemberVar FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity»
         «EXPAND ContextResourceInterfaceGetter FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity»
         «EXPAND ContextResourceInterfaceSetter FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity»
         public «this.resourceContextClassName()» () {
         }
         
         «IF this.resourceRequiredRoles_ResourceInterfaceRequiringEntity.size > 0»
         public «this.resourceContextClassName()» (
            «EXPAND ContextResourceInterfaceVar FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity SEPARATOR ","» ) {
            «EXPAND ContextResourceInterfaceInitialisation FOREACH this.resourceRequiredRoles_ResourceInterfaceRequiringEntity»
         }
         «ENDIF»
      }
   «ENDFILE»
«ENDDEFINE»

«DEFINE ComponentResourceContextMemberVar FOR ResourceInterfaceRequiringEntity»
   protected «this.fqnContextResourceInterface()» myResourceContext = null;
«ENDDEFINE»

«DEFINE ComponentResourceContextSetter FOR ResourceInterfaceRequiringEntity»
   public void setResourceContext(«this.fqnContextResourceInterface()» myResourceContext) {
      this.myResourceContext = myResourceContext;
   }
«ENDDEFINE»

«DEFINE ComponentResourceContextGetter FOR ResourceInterfaceRequiringEntity»
   public «this.fqnContextResourceInterface()» getResourceContext() {
      return myResourceContext;
   }
«ENDDEFINE»

«DEFINE ContextResourceInterfaceVar FOR ResourceRequiredRole»
   «this.requiredResourceInterface_ResourceRequiredRole.fqn()» «this.javaName().toFirstLower()»
«ENDDEFINE»

«DEFINE ContextResourceInterfaceInitialisation FOR ResourceRequiredRole»
   this.«this.javaName().toFirstLower()» = «this.javaName().toFirstLower()»;
«ENDDEFINE»

«DEFINE ContextResourceInterfaceMemberVar FOR ResourceRequiredRole»
   protected «this.requiredResourceInterface_ResourceRequiredRole.fqn()» «this.javaName().toFirstLower()» = null;
«ENDDEFINE»

«DEFINE ContextResourceInterfaceGetter FOR ResourceRequiredRole»
   public «this.requiredResourceInterface_ResourceRequiredRole.fqn()» getRole«this.javaName()»() {
   	  if («this.javaName().toFirstLower()» == null) {
   	  	  throw new RuntimeException("Attempt to retrieve unbounded port. Check your architecture! "+
   	  	  		"Role «this.entityName» <«this.id»> ResourceRequiringEntity «this.resourceRequiringEntity_ResourceRequiredRole.entityName»");
      }
      return «this.javaName().toFirstLower()»;
   }
«ENDDEFINE»

«DEFINE ContextResourceInterfaceSetter FOR ResourceRequiredRole»
   public void setRole«this.javaName()»(«this.requiredResourceInterface_ResourceRequiredRole.fqn()» newValue) {
      this.«this.javaName().toFirstLower()» = newValue;
   }
«ENDDEFINE»

«DEFINE ContextResourceInterfaceGetterSignature FOR ResourceRequiredRole»
   «this.requiredResourceInterface_ResourceRequiredRole.fqn()» getRole«this.javaName()»();
«ENDDEFINE»

«DEFINE ContextResourceInterfaceSetterSignature FOR ResourceRequiredRole»
   void setRole«this.javaName()»(«this.requiredResourceInterface_ResourceRequiredRole.fqn()» newValue);
«ENDDEFINE»