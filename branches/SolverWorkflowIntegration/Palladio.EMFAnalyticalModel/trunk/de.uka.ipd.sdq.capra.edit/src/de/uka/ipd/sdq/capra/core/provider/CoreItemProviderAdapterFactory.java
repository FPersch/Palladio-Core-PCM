/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package de.uka.ipd.sdq.capra.core.provider;

import de.uka.ipd.sdq.capra.core.util.CoreAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CoreItemProviderAdapterFactory extends CoreAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CoreItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ReplicatedProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplicatedProcessItemProvider replicatedProcessItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ReplicatedProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplicatedProcessAdapter() {
		if (replicatedProcessItemProvider == null) {
			replicatedProcessItemProvider = new ReplicatedProcessItemProvider(this);
		}

		return replicatedProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ProcessVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessVariableItemProvider processVariableItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ProcessVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessVariableAdapter() {
		if (processVariableItemProvider == null) {
			processVariableItemProvider = new ProcessVariableItemProvider(this);
		}

		return processVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.CommunicationIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationIdentifierItemProvider communicationIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.CommunicationIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationIdentifierAdapter() {
		if (communicationIdentifierItemProvider == null) {
			communicationIdentifierItemProvider = new CommunicationIdentifierItemProvider(this);
		}

		return communicationIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.DemandAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DemandActionItemProvider demandActionItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.DemandAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDemandActionAdapter() {
		if (demandActionItemProvider == null) {
			demandActionItemProvider = new DemandActionItemProvider(this);
		}

		return demandActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.DemandIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DemandIdentifierItemProvider demandIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.DemandIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDemandIdentifierAdapter() {
		if (demandIdentifierItemProvider == null) {
			demandIdentifierItemProvider = new DemandIdentifierItemProvider(this);
		}

		return demandIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.SuccessfulTermination} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuccessfulTerminationItemProvider successfulTerminationItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.SuccessfulTermination}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuccessfulTerminationAdapter() {
		if (successfulTerminationItemProvider == null) {
			successfulTerminationItemProvider = new SuccessfulTerminationItemProvider(this);
		}

		return successfulTerminationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ProbabilisticPrefix} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProbabilisticPrefixItemProvider probabilisticPrefixItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ProbabilisticPrefix}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProbabilisticPrefixAdapter() {
		if (probabilisticPrefixItemProvider == null) {
			probabilisticPrefixItemProvider = new ProbabilisticPrefixItemProvider(this);
		}

		return probabilisticPrefixItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.InternalSelector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalSelectorItemProvider internalSelectorItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.InternalSelector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalSelectorAdapter() {
		if (internalSelectorItemProvider == null) {
			internalSelectorItemProvider = new InternalSelectorItemProvider(this);
		}

		return internalSelectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.Choice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceItemProvider choiceItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.Choice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChoiceAdapter() {
		if (choiceItemProvider == null) {
			choiceItemProvider = new ChoiceItemProvider(this);
		}

		return choiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ExternalSelector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalSelectorItemProvider externalSelectorItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ExternalSelector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalSelectorAdapter() {
		if (externalSelectorItemProvider == null) {
			externalSelectorItemProvider = new ExternalSelectorItemProvider(this);
		}

		return externalSelectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.InputEventAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputEventActionItemProvider inputEventActionItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.InputEventAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputEventActionAdapter() {
		if (inputEventActionItemProvider == null) {
			inputEventActionItemProvider = new InputEventActionItemProvider(this);
		}

		return inputEventActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.OutputEventAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputEventActionItemProvider outputEventActionItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.OutputEventAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputEventActionAdapter() {
		if (outputEventActionItemProvider == null) {
			outputEventActionItemProvider = new OutputEventActionItemProvider(this);
		}

		return outputEventActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.CommunicationEventAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationEventActionItemProvider communicationEventActionItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.CommunicationEventAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationEventActionAdapter() {
		if (communicationEventActionItemProvider == null) {
			communicationEventActionItemProvider = new CommunicationEventActionItemProvider(this);
		}

		return communicationEventActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.BoundedLoop} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedLoopItemProvider boundedLoopItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.BoundedLoop}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedLoopAdapter() {
		if (boundedLoopItemProvider == null) {
			boundedLoopItemProvider = new BoundedLoopItemProvider(this);
		}

		return boundedLoopItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ParallelComposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParallelCompositionItemProvider parallelCompositionItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ParallelComposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParallelCompositionAdapter() {
		if (parallelCompositionItemProvider == null) {
			parallelCompositionItemProvider = new ParallelCompositionItemProvider(this);
		}

		return parallelCompositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.Restriction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestrictionItemProvider restrictionItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.Restriction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestrictionAdapter() {
		if (restrictionItemProvider == null) {
			restrictionItemProvider = new RestrictionItemProvider(this);
		}

		return restrictionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ResourceUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceUsageItemProvider resourceUsageItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ResourceUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceUsageAdapter() {
		if (resourceUsageItemProvider == null) {
			resourceUsageItemProvider = new ResourceUsageItemProvider(this);
		}

		return resourceUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.Renaming} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenamingItemProvider renamingItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.Renaming}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenamingAdapter() {
		if (renamingItemProvider == null) {
			renamingItemProvider = new RenamingItemProvider(this);
		}

		return renamingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.Mapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingItemProvider mappingItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.Mapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingAdapter() {
		if (mappingItemProvider == null) {
			mappingItemProvider = new MappingItemProvider(this);
		}

		return mappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.SilentIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SilentIdentifierItemProvider silentIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.SilentIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSilentIdentifierAdapter() {
		if (silentIdentifierItemProvider == null) {
			silentIdentifierItemProvider = new SilentIdentifierItemProvider(this);
		}

		return silentIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.ProcessVariableUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessVariableUsageItemProvider processVariableUsageItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.ProcessVariableUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessVariableUsageAdapter() {
		if (processVariableUsageItemProvider == null) {
			processVariableUsageItemProvider = new ProcessVariableUsageItemProvider(this);
		}

		return processVariableUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.uka.ipd.sdq.capra.core.VariableResourceUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableResourceUsageItemProvider variableResourceUsageItemProvider;

	/**
	 * This creates an adapter for a {@link de.uka.ipd.sdq.capra.core.VariableResourceUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableResourceUsageAdapter() {
		if (variableResourceUsageItemProvider == null) {
			variableResourceUsageItemProvider = new VariableResourceUsageItemProvider(this);
		}

		return variableResourceUsageItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (replicatedProcessItemProvider != null) replicatedProcessItemProvider.dispose();
		if (processVariableItemProvider != null) processVariableItemProvider.dispose();
		if (communicationIdentifierItemProvider != null) communicationIdentifierItemProvider.dispose();
		if (demandActionItemProvider != null) demandActionItemProvider.dispose();
		if (demandIdentifierItemProvider != null) demandIdentifierItemProvider.dispose();
		if (successfulTerminationItemProvider != null) successfulTerminationItemProvider.dispose();
		if (probabilisticPrefixItemProvider != null) probabilisticPrefixItemProvider.dispose();
		if (internalSelectorItemProvider != null) internalSelectorItemProvider.dispose();
		if (choiceItemProvider != null) choiceItemProvider.dispose();
		if (externalSelectorItemProvider != null) externalSelectorItemProvider.dispose();
		if (inputEventActionItemProvider != null) inputEventActionItemProvider.dispose();
		if (outputEventActionItemProvider != null) outputEventActionItemProvider.dispose();
		if (communicationEventActionItemProvider != null) communicationEventActionItemProvider.dispose();
		if (boundedLoopItemProvider != null) boundedLoopItemProvider.dispose();
		if (parallelCompositionItemProvider != null) parallelCompositionItemProvider.dispose();
		if (restrictionItemProvider != null) restrictionItemProvider.dispose();
		if (resourceUsageItemProvider != null) resourceUsageItemProvider.dispose();
		if (renamingItemProvider != null) renamingItemProvider.dispose();
		if (mappingItemProvider != null) mappingItemProvider.dispose();
		if (silentIdentifierItemProvider != null) silentIdentifierItemProvider.dispose();
		if (processVariableUsageItemProvider != null) processVariableUsageItemProvider.dispose();
		if (variableResourceUsageItemProvider != null) variableResourceUsageItemProvider.dispose();
	}

}
