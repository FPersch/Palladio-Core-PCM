«EXTENSION m2t_transforms::java_names»
«EXTENSION m2t_transforms::pcm»
«IMPORT repository»
«IMPORT seff»
«IMPORT system»
«IMPORT core::entity»
«IMPORT core::composition»


«DEFINE PortImpl FOR OperationProvidedRole»
	  /** 
	   * Operation Provide Role Port class for «this.portClassName()» 
	   */
	  public class «this.portClassName()» extends de.uka.ipd.sdq.prototype.framework.port.AbstractBasicPort<«this.providingEntity_ProvidedRole.fqnInterface()»> implements «this.providedInterface__OperationProvidedRole.fqn()» {	  

		  protected static org.apache.log4j.Logger logger = 
			org.apache.log4j.Logger.getLogger(«this.portClassName()».class.getName());
				
		  public «this.portClassName()»(«this.providingEntity_ProvidedRole.fqnInterface()» myComponent, String assemblyContext) throws java.rmi.RemoteException {
		  		this.myComponent = myComponent;
				de.uka.ipd.sdq.prototype.framework.registry.RmiRegistry.registerPort(de.uka.ipd.sdq.prototype.framework.registry.RmiRegistry.getRemoteAddress(), this, "«this.portClassName()»_" + assemblyContext);
		  }
		    
	      «EXPAND m2t_transforms::provided_ports::ComponentPortHelperMethodsTM FOR this»
	      «EXPAND m2t_transforms::provided_ports::PortDelegator FOREACH this.providedInterface__OperationProvidedRole.signatures__OperationInterface»
	  }
«ENDDEFINE»


«DEFINE PortImpl FOR InfrastructureProvidedRole»
	  /** 
	   * Infrastructure Provide Role Port class for «this.portClassName()» 
	   */		
	  public class «this.portClassName()» extends de.uka.ipd.sdq.prototype.framework.port.AbstractBasicPort<«this.providingEntity_ProvidedRole.fqnInterface()»> implements «this.providedInterface__InfrastructureProvidedRole.fqn()» {

		  protected static org.apache.log4j.Logger logger = 
			org.apache.log4j.Logger.getLogger(«this.portClassName()».class.getName());

	     public «this.portClassName()»(«this.providingEntity_ProvidedRole.fqnInterface()» myComponent, String assemblyContext) throws java.rmi.RemoteException {
	        this.myComponent = myComponent;
	       	de.uka.ipd.sdq.prototype.framework.registry.RmiRegistry.registerPort(de.uka.ipd.sdq.prototype.framework.registry.RmiRegistry.getRemoteAddress(), this, "«this.portClassName()»_" + assemblyContext);
	     }
	    
	     «EXPAND m2t_transforms::provided_ports::ComponentPortHelperMethodsTM FOR this»  
	     «EXPAND m2t_transforms::provided_ports::PortDelegator FOREACH this.providedInterface__InfrastructureProvidedRole.infrastructureSignatures__InfrastructureInterface»
	  }
«ENDDEFINE»


«DEFINE ComposedStructurePortImpl(ComposedProvidingRequiringEntity cs) FOR OperationProvidedRole»
   /*
	*Port class for «this.portClassName()»
	*/
	public class «this.portClassName()» extends java.rmi.server.UnicastRemoteObject implements «this.providedInterface__OperationProvidedRole.fqn()», de.uka.ipd.sdq.prototype.framework.port.IPort<«this.providingEntity_ProvidedRole.fqnInterface()»>, java.rmi.Remote, java.io.Serializable {

		protected static org.apache.log4j.Logger logger = 
			org.apache.log4j.Logger.getLogger(«this.portClassName()».class.getName());
	  
	  	protected «this.providingEntity_ProvidedRole.fqnInterface()» myCompositeComponent = null;
	  
		protected «this.providedInterface__OperationProvidedRole.fqn()» myInnerPort = null;
	     
		public «this.portClassName()»(«this.providedInterface__OperationProvidedRole.fqn()» myInnerPort, «this.providingEntity_ProvidedRole.fqnInterface()» myCompositeComponent, String assemblyContext) throws java.rmi.RemoteException {
			this.myInnerPort = myInnerPort;
			this.myCompositeComponent = myCompositeComponent;
		        	        
			de.uka.ipd.sdq.prototype.framework.registry.RmiRegistry.registerPort(de.uka.ipd.sdq.prototype.framework.registry.RmiRegistry.getRemoteAddress(), this, "«this.portClassName()»_" + assemblyContext);
			logger.info("Instantiation of port «this.portClassName()» completed");	        
		}	     
	     	 	
	    @Override
		public void setContext(Object myContext) throws java.rmi.RemoteException {
	    	myCompositeComponent.setContext(myContext);
		}

		@Override
		public void setComponentFrame(de.uka.ipd.sdq.simucomframework.variables.stackframe.SimulatedStackframe<Object> myComponentStackFrame) throws java.rmi.RemoteException {
		}

		@Override
		public «this.providingEntity_ProvidedRole.fqnInterface()» getComponent() throws java.rmi.RemoteException {
			return myCompositeComponent;
		}	 	
	     	 	 
	 	 «EXPAND m2t_transforms::provided_ports::ComposedComponentPortHelperMethodsTM FOR this.providedInterface__OperationProvidedRole»    
	     
	     «EXPAND m2t_transforms::provided_ports::ComposedStructurePortDelegator(cs) FOREACH this.providedInterface__OperationProvidedRole.signatures__OperationInterface»
	  }
«ENDDEFINE»


«DEFINE PortMemberVars FOR OperationProvidedRole»
    protected «this.providedInterface__OperationProvidedRole.fqn()» «this.portMemberVar()» = null;

	private «this.fqnPort()» init_«this.javaName()»(String assemblyContext) {
		try {
			return new «this.fqnPort()»(this, assemblyContext);
		} catch (java.rmi.RemoteException e) {
			logger.error("Failed to initialise port «this.fqnPort()»");
		}
		return null;
	}
«ENDDEFINE»

«DEFINE PortMemberVars FOR InfrastructureProvidedRole»
    protected «this.providedInterface__InfrastructureProvidedRole.fqn()» «this.portMemberVar()» = null;

	private «this.fqnPort()» init_«this.javaName()»(String assemblyContext) {
		try {
			return new «this.fqnPort()»(this, assemblyContext);
		} catch (java.rmi.RemoteException e) {
			logger.error("Failed to initialise port «this.fqnPort()»");
		}
		return null;
	}
«ENDDEFINE»


«DEFINE ContextPortGetter(ComposedStructure cs) FOR OperationProvidedRole»
    protected «this.providedInterface__OperationProvidedRole.fqn()» «this.portMemberVar()» = null;
«ENDDEFINE»